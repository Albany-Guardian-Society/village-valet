{
  "version": 3,
  "sources": [
    "assets/VillageValetLogo.jpg",
    "modules/api.js",
    "components/LoadData.js",
    "components/Navigation.js",
    "components/Login.js",
    "components/dashboard/RidesTable.js",
    "components/dashboard/ActiveRides.js",
    "components/dashboard/UpcomingRides.js",
    "components/google-maps/MapContainer.js",
    "components/dashboard/RideDetails.js",
    "components/dashboard/RideBreakdown.js",
    "components/dashboard/Dashboard.js",
    "components/profiles/ProfileTable.js",
    "components/scheduler/SelectRider.js",
    "components/scheduler/RideInformation.js",
    "components/scheduler/SelectDriver.js",
    "components/scheduler/Confirmation.js",
    "components/scheduler/Scheduler.js",
    "components/profiles/Profiles.js",
    "components/profiles/registration/CommonAddresses.js",
    "components/profiles/registration/EmergencyInformation.js",
    "components/profiles/registration/GeneralInformation.js",
    "components/profiles/registration/SpecialAccommodations.js",
    "components/profiles/registration/DriverSpecific.js",
    "components/profiles/registration/VehicleInformation.js",
    "components/profiles/registration/VolunteerSchedule.js",
    "components/profiles/registration/CaregiveInformation.js",
    "components/profiles/Register.js",
    "components/profiles/profile/Profile.js",
    "components/ledger/LedgerTable.js",
    "components/ledger/EditRide.js",
    "components/ledger/Ledger.js",
    "components/metrics/Riders.js",
    "components/metrics/Drivers.js",
    "components/metrics/Reports.js",
    "components/metrics/reports/MileageReport.js",
    "components/metrics/Metrics.js",
    "components/admin/Operator.js",
    "components/admin/Village.js",
    "components/admin/Admin.js",
    "components/Error.js",
    "App.js",
    "serviceWorker.js",
    "modules/reducer.js",
    "index.js",
    "modules/store.js"
  ],
  "names": [
    "module",
    "exports",
    "hostname",
    "window",
    "location",
    "API_ROOT",
    "LoadData",
    "props",
    "state",
    "status",
    "message",
    "token",
    "cookie",
    "load",
    "this",
    "setState",
    "jwtPayload",
    "jwt",
    "axios",
    "get",
    "headers",
    "then",
    "resp",
    "updateAuth",
    "data",
    "village_id",
    "response",
    "item",
    "id",
    "save",
    "path",
    "maxAge",
    "style",
    "padding",
    "Container",
    "Card",
    "Header",
    "Body",
    "ProgressBar",
    "animated",
    "now",
    "Component",
    "connect",
    "operator",
    "dispatch",
    "user",
    "type",
    "payload",
    "tag",
    "Navigation",
    "cookies",
    "remove",
    "reload",
    "Navbar",
    "bg",
    "variant",
    "width",
    "Brand",
    "to",
    "textDecoration",
    "Col",
    "admin",
    "textAlign",
    "first_name",
    "Button",
    "onClick",
    "logout",
    "Login",
    "key_function",
    "k",
    "keyCode",
    "preventDefault",
    "document",
    "getElementById",
    "click",
    "username",
    "password",
    "showPassword",
    "errorMessage",
    "handleChange",
    "bind",
    "handleLogin",
    "componentDidMount",
    "componentWillUnmount",
    "addEventListener",
    "removeEventListener",
    "event",
    "target",
    "value",
    "post",
    "toLowerCase",
    "history",
    "push",
    "catch",
    "error",
    "className",
    "Row",
    "Image",
    "src",
    "logo",
    "Alert",
    "Form",
    "Group",
    "as",
    "Label",
    "column",
    "sm",
    "Control",
    "placeholder",
    "onChange",
    "withRouter",
    "authenticated",
    "RidesTable",
    "handleClick",
    "ride",
    "changeRideBreakdown",
    "createTable",
    "rides",
    "table",
    "key",
    "size",
    "block",
    "ActiveRides",
    "Object",
    "values",
    "filter",
    "ride_data",
    "date",
    "moment",
    "format",
    "locations",
    "pickup",
    "time",
    "isSameOrBefore",
    "h",
    "hours",
    "m",
    "minutes",
    "dropoff",
    "isSameOrAfter",
    "alignItems",
    "filterRides",
    "UpcomingRides",
    "isAfter",
    "MapContainer",
    "directions_cache",
    "Map",
    "timePast",
    "timeNow",
    "directionsCallback",
    "nextProps",
    "nextState",
    "nextContext",
    "geolocation",
    "lat",
    "driver",
    "meters",
    "Math",
    "round",
    "Number",
    "EPSILON",
    "associated_ride",
    "driver_id",
    "mileage",
    "rider",
    "convertMetersToMiles",
    "routes",
    "legs",
    "distance",
    "time_total",
    "duration",
    "updateActiveRide",
    "isBefore",
    "keys",
    "storeRouteInfo",
    "set",
    "console",
    "log",
    "stopover",
    "has",
    "options",
    "origin",
    "destination",
    "travelMode",
    "waypoints",
    "optimizeWaypoints",
    "drivingOptions",
    "departureTime",
    "toDate",
    "trafficModel",
    "callback",
    "onLoad",
    "directionsService",
    "onUnmount",
    "directions",
    "directionsRenderer",
    "zoom",
    "mapContainerStyle",
    "height",
    "center",
    "lng",
    "locationOrder",
    "checkTimeInPast",
    "makeDirections",
    "renderDirections",
    "active_ride",
    "RideDetails",
    "last_name",
    "displayDetails",
    "RideBreakdown",
    "position",
    "Home",
    "minWidth",
    "ProfileTable",
    "selected_row",
    "generateTableData",
    "generateTableHeaders",
    "handleSelect",
    "setActiveUser",
    "users",
    "mode",
    "setRideParticipant",
    "map",
    "filtered_users",
    "profile_table",
    "search_term",
    "index",
    "fuzzysort",
    "go",
    "p",
    "personal_info",
    "score",
    "split",
    "length",
    "user_type",
    "ride_date",
    "a",
    "i",
    "volunteer_hours",
    "day",
    "start",
    "end",
    "driver_leaves_home_time",
    "subtract",
    "sort",
    "b",
    "dist_a",
    "pow",
    "addresses",
    "dist_b",
    "background",
    "display",
    "tableLayout",
    "e",
    "replace",
    "c",
    "toUpperCase",
    "primary_village_id",
    "Table",
    "striped",
    "bordered",
    "hover",
    "overflow",
    "SelectRider",
    "RideInformation",
    "handleCommonAddress",
    "autocomplete",
    "count",
    "onPlaceChanged",
    "today",
    "updateScheduler",
    "add",
    "label_flag",
    "checked",
    "items",
    "variable",
    "number",
    "place",
    "getPlace",
    "geometry",
    "formatted_address",
    "address",
    "label",
    "loc",
    "line_1",
    "name",
    "vehicles",
    "car",
    "lp",
    "year",
    "make_model",
    "borderless",
    "purpose",
    "accommodations",
    "mobility_aid",
    "special",
    "startOf",
    "seconds",
    "meta",
    "pickup_CA",
    "getCommonAddresses",
    "disabled",
    "dropbox_CA",
    "dropoff_CA",
    "field",
    "SelectDriver",
    "vehicle",
    "vehicleOptions",
    "Confirmation",
    "Scheduler",
    "scheduler_page",
    "error_message",
    "handleSubmit",
    "validate",
    "clearRide",
    "confirm",
    "preferred_communication",
    "driver_confirmed",
    "phone_mobile",
    "phone_home",
    "addRide",
    "return",
    "returnRide",
    "increment",
    "proposed_page",
    "body",
    "scrollTop",
    "documentElement",
    "showPage",
    "left",
    "bottom",
    "changePage",
    "Profiles",
    "clearRegistration",
    "CommonAddresses",
    "autocomplete_help",
    "updateRegistration",
    "street_number",
    "address_components",
    "component",
    "types",
    "includes",
    "long_name",
    "short_name",
    "lg",
    "removeAddress",
    "readOnly",
    "line_2",
    "city",
    "zip",
    "rows",
    "special_instructions",
    "float",
    "addAddress",
    "generateAddressForms",
    "active_profile",
    "triggerUpdate",
    "EmergencyInformation",
    "emergency_contact",
    "email",
    "relationship",
    "GeneralInformation",
    "operator_village",
    "Array",
    "from",
    "selectedOptions",
    "o",
    "villages",
    "v",
    "village_name",
    "partial",
    "Fragment",
    "villageOptions",
    "multiple",
    "language",
    "user_villages",
    "Error",
    "allergies",
    "smoke_preference",
    "DriverSpecific",
    "driver_specific",
    "vetting",
    "VehicleInformation",
    "removeVehicle",
    "color",
    "seats",
    "insur_provider",
    "insur_policy",
    "insur_exp",
    "insur_coverage",
    "insp_date",
    "addVehicle",
    "generateVehicleForms",
    "VolunteerSchedule",
    "hour_rows",
    "last_index",
    "String",
    "removeVolHours",
    "addVolHours",
    "generateHourRows",
    "CaregiverInformation",
    "caregiver",
    "Register",
    "page",
    "validateRegistration",
    "registration",
    "SpecialAccommodations",
    "test",
    "validateEmail",
    "validatePhoneNumber",
    "address_names",
    "Set",
    "clear",
    "validateZipCode",
    "license_plates",
    "addUser",
    "generatePage",
    "DOW",
    "Profile",
    "sub_page",
    "genSubPage",
    "l",
    "colSpan",
    "updateUser",
    "deactivateUser",
    "alert",
    "activateUser",
    "check_value",
    "prompt",
    "deleteUser",
    "paddingLeft",
    "paddingRight",
    "marginRight",
    "handleSave",
    "handleDeactivate",
    "handleReactivate",
    "handlePermaDelete",
    "ListGroup",
    "Item",
    "active",
    "LedgerTable",
    "setActiveRide",
    "rideID",
    "cancelRide",
    "deactivateRide",
    "reactivateRide",
    "handleDeactivateRide",
    "handleCancel",
    "handleReactivateRide",
    "button_set",
    "confirm_check",
    "futureButtons2",
    "futureButtons1",
    "passedButtons",
    "renderTableHeader",
    "renderTableData",
    "EditRide",
    "saveRide",
    "handleBack",
    "Ledger",
    "Riders",
    "results",
    "riders",
    "indexOf",
    "Drivers",
    "drivers",
    "toFixed",
    "Reports",
    "maxwidth",
    "Check",
    "TODAY",
    "Date",
    "styles",
    "StyleSheet",
    "create",
    "flexDirection",
    "backgroundColor",
    "margin",
    "borderStyle",
    "borderWidth",
    "borderRightWidth",
    "borderBottomWidth",
    "tableRow",
    "tableCol",
    "borderLeftWidth",
    "borderTopWidth",
    "tableCell",
    "marginTop",
    "fontSize",
    "MileageReportPDF",
    "total_miles",
    "total_time",
    "generateRows",
    "ride_ids",
    "counter",
    "miles",
    "title",
    "getDate",
    "getMonth",
    "getFullYear",
    "author",
    "creator",
    "generateRideTable",
    "MileageReportButton",
    "fileName",
    "blob",
    "url",
    "loading",
    "Metrics",
    "metric_options",
    "MileageReport",
    "ButtonToolbar",
    "aria-label",
    "ToggleButtonGroup",
    "defaultValue",
    "ToggleButton",
    "pickReport",
    "changeTable",
    "Operator",
    "edit",
    "prevProps",
    "show_operator",
    "changeOperator",
    "active_operator",
    "phone",
    "marginLeft",
    "saveOperator",
    "deleteOperator",
    "show_village",
    "active_village",
    "Village",
    "handleChangeVetting",
    "changeVillage",
    "previous",
    "saveVillage",
    "deleteVillage",
    "Admin",
    "village",
    "show",
    "showVillage",
    "operators",
    "showOperator",
    "xs",
    "genVillageRows",
    "genOperatorRows",
    "debug",
    "App",
    "rel",
    "href",
    "integrity",
    "crossOrigin",
    "loaded",
    "googleMapsApiKey",
    "libraries",
    "Dashboard",
    "Boolean",
    "match",
    "ADDRESS_TEMPLATE",
    "VEHICLE_TEMPLATE",
    "VOL_HOURS_TEMPLATE",
    "BLANK_PROFILE",
    "BLANK_RIDE",
    "home_geolocation",
    "traffic",
    "ride_id",
    "givendropoff",
    "BLANK_VILLAGE",
    "defaults",
    "BLANK_OPERATOR",
    "initialState",
    "_",
    "cloneDeep",
    "VillageReducer",
    "action",
    "newState",
    "bcrypt",
    "hashSync",
    "newUser",
    "put",
    "delete",
    "operator_id",
    "forceUpdate",
    "splice",
    "ridebreakdown",
    "samereturn",
    "addr_id",
    "patch",
    "user_id",
    "reduxStore",
    "REDUX_INITIAL_DATA",
    "createStore",
    "reducer",
    "ReactDOM",
    "render",
    "store",
    "navigator",
    "serviceWorker",
    "ready",
    "unregister"
  ],
  "mappings": "qJAAAA,EAAOC,QAAU,IAA0B,8C,6VCCvCC,EAAWC,QAAUA,OAAOC,UAAYD,OAAOC,SAASF,SAC3C,cAAbA,IACAA,GAAY,SAGT,IAAMG,EAAQ,iBAAaH,EAAb,gBANF,M,0BCYbI,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,OAAQ,EACRC,QAAS,IAJE,E,iFAQD,IAAD,OAEPC,EAAQC,IAAOC,KAAK,SAC1BC,KAAKC,SAAS,CAACL,QAAS,qBACxB,IAAMM,EAAaC,SAAWN,GAC9BO,IAAMC,IAAId,EAAW,2BAA4B,CAC7Ce,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAACC,GACL,EAAKf,MAAMgB,WAAWD,EAAKE,MACG,UAA1BR,EAAWS,YACXP,IAAMC,IAAId,EAAW,0BAA2B,CAC5Ce,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAAAK,GACJ,IAAIF,EAAO,GADK,uBAEhB,YAAmBE,EAASF,KAA5B,+CAAkC,CAAC,IAAxBG,EAAuB,QAC9BH,EAAKG,EAAKC,IAAMD,GAHJ,kFAKhB,EAAKpB,MAAMM,KAAK,YAAaW,MAGrC,EAAKT,SAAS,CAACL,QAAS,oBACxBQ,IAAMC,IAAId,EAAW,yBAA0B,CAC3Ce,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAAAK,GACJ,IAAIF,EAAO,GADK,uBAEhB,YAAmBE,EAASF,KAA5B,+CAAkC,CAAC,IAAxBG,EAAuB,QAC9BH,EAAKG,EAAKC,IAAMD,GAHJ,kFAKhB,EAAKpB,MAAMM,KAAK,WAAYW,MAC7BH,MAAK,WACJ,EAAKN,SAAS,CAACN,OAAQ,QACxBY,MAAK,WACJ,EAAKN,SAAS,CAACL,QAAS,kBACxBQ,IAAMC,IAAId,EAAW,sBAAuB,CACxCe,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAAAK,GACJ,IAAIF,EAAO,GADK,uBAEhB,YAAmBE,EAASF,KAA5B,+CAAkC,CAAC,IAAxBG,EAAuB,QAC9BH,EAAKG,EAAKC,IAAMD,GAHJ,kFAKhB,EAAKpB,MAAMM,KAAK,QAASW,MAC1BH,MAAK,WACJ,EAAKN,SAAS,CAACN,OAAQ,QACxBY,MAAK,WAEJ,EAAKN,SAAS,CAACL,QAAS,kBACxBQ,IAAMC,IAAId,EAAW,sBAAuB,CACxCe,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAAAK,GACJ,IAAIF,EAAO,GADK,uBAEhB,YAAmBE,EAASF,KAA5B,+CAAkC,CAAC,IAAxBG,EAAuB,QAC9BH,EAAKG,EAAKC,IAAMD,GAHJ,kFAKhB,EAAKpB,MAAMM,KAAK,QAASW,MAC1BH,MAAK,WACJ,EAAKN,SAAS,CAACN,OAAQ,QACxBY,MAAK,WACJH,IAAMC,IAAId,EAAW,oBAAqB,CACtCe,QAAS,CACL,cAAiB,UAAYT,KAElCU,MAAK,SAACK,GACLd,IAAOiB,KAAK,kBAAmBH,EAASF,KAAKb,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACxEnB,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACjE,EAAKhB,SAAS,CAACN,OAAQ,SACxBY,MAAK,WACJ,EAAKd,MAAMM,KAAK,UAAU,oB,+BAS9C,OACI,yBAAKmB,MAAO,CAACC,QAAS,MAClB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKC,OAAN,mBACI,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACC,EAAA,EAAD,CAAaC,UAAQ,EAACC,IAAK1B,KAAKN,MAAMC,iB,GApG3CgC,aA+HRC,eAlBS,SAAAlC,GAAK,MAAK,CAC9BiB,WAAYjB,EAAMmC,SAASlB,eAGJ,SAAAmB,GAAQ,MAAK,CACpCrB,WAAY,SAACsB,GAAD,OAAUD,EAAS,CAC3BE,KAAM,eACNC,QAASF,KAEbhC,KAAM,SAACmC,EAAKxB,GAAN,OAAeoB,EAAS,CAC1BE,KAAM,OACNC,QAAS,CACLC,IAAKA,EACLxB,KAAMA,SAKHkB,CAA6CpC,G,wBChItD2C,E,YACF,WAAY1C,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAMf0C,IAAQC,OAAO,SACfD,IAAQC,OAAO,mBACfD,IAAQC,OAAO,YACfD,IAAQC,OAAO,eACfhD,OAAOC,SAASgD,W,+BAIhB,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQvB,MAAO,CAACwB,MAAO,SAC9C,kBAACH,EAAA,EAAOI,MAAR,KACI,kBAAC,IAAD,CAAMC,GAAG,aAAa1B,MAAO,CAAC2B,eAAgB,SAA9C,kBAEJ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMF,GAAG,aAAa1B,MAAO,CAAC2B,eAAgB,SAA9C,cAEJ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMF,GAAG,YAAY1B,MAAO,CAAC2B,eAAgB,SAA7C,aAEJ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMF,GAAG,UAAU1B,MAAO,CAAC2B,eAAgB,SAA3C,WAEJ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMF,GAAG,WAAW1B,MAAO,CAAC2B,eAAgB,SAA5C,YAEJ,kBAACC,EAAA,EAAD,KACK9C,KAAKP,MAAMoC,SAASkB,MACjB,kBAAC,IAAD,CAAMH,GAAG,SAAS1B,MAAO,CAAC2B,eAAgB,SAA1C,SACE,MAEV,kBAACC,EAAA,EAAD,CAAK5B,MAAO,CAAC8B,UAAW,UACpB,8CAAsBhD,KAAKP,MAAMoC,SAASoB,aAE9C,kBAACH,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQT,QAAQ,OAAOU,QAASnD,KAAKoD,QAArC,cAGZ,kC,GA7CazB,aA2DVC,eARS,SAAAlC,GAAK,MAAK,CAC9BmC,SAAUnC,EAAMmC,SAChBlB,WAAYjB,EAAMmC,SAASlB,eAGJ,SAAAmB,GAAQ,MAAK,KAGzBF,CAA6CO,G,mECtCtDkB,E,YAIF,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KA2BV6D,aAAe,SAACC,GACM,KAAdA,EAAEC,UACFD,EAAEE,iBACFC,SAASC,eAAe,gBAAgBC,UA7B5C,EAAKlE,MAAQ,CACTmE,SAAU,GACVC,SAAU,GACnBC,cAAc,EACLC,aAAc,IAIxB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACd,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,gBAbb,E,iFAoBfR,SAASY,iBAAiB,QAAStE,KAAKsD,gB,6CAIxCI,SAASa,oBAAoB,QAASvE,KAAKsD,gB,mCAelCkB,GACS,aAApBA,EAAMC,OAAO3D,GAChBd,KAAKC,SAAS,CAAC4D,SAAUW,EAAMC,OAAOC,QACR,aAApBF,EAAMC,OAAO3D,IACvBd,KAAKC,SAAS,CAAC6D,SAAUU,EAAMC,OAAOC,U,oCAYtB,IAAD,OACVtE,IAAMuE,KAAKpF,EAAW,eAAgB,CAClCsE,SAAU7D,KAAKN,MAAMmE,SAASe,cAC9Bd,SAAU9D,KAAKN,MAAMoE,WACtBvD,MAAK,SAACK,GACDd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACjE,IAAMc,EAAI,eAAOnB,EAASF,MAC1B,EAAKjB,MAAMgB,WAAWsB,GACtB,EAAKtC,MAAMoF,QAAQC,KAAK,cACxBzF,OAAOC,SAASgD,YAEtByC,OAAM,SAAAC,GACJ,EAAK/E,SAAS,CAAC+D,aAAc,iBAAmBgB,EAAMpE,SAASF,KAAKsE,a,+BAYxE,OACI,kBAAC5D,EAAA,EAAD,CAAW6D,UAAU,SACrB,6BACA,kBAACC,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAACqC,EAAA,EAAD,CAAOC,IAAKC,IAAMJ,UAAU,iBAGpC,6BACA,kBAACC,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACC9C,KAAKN,MAAMsE,aACR,kBAACsB,EAAA,EAAD,CAAO7C,QAAQ,UACVzC,KAAKN,MAAMsE,cAElB,OAGN,kBAACkB,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACA,kBAACzB,EAAA,EAAD,CAAM4D,UAAU,aACZ,kBAACM,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIP,KACZ,kBAACK,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,aACA,kBAAC9C,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,WAAWgF,YAAY,WAAWC,SAAU/F,KAAKiE,iBAG1E,kBAACsB,EAAA,EAAKC,MAAN,CAAYC,GAAIP,KACZ,kBAACK,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,GAAvB,aACA,kBAAC9C,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,WAAWlB,GAAG,WAAWgF,YAAY,WAAWC,SAAU/F,KAAKiE,iBAG1F,kBAACf,EAAA,EAAD,CAAQpC,GAAG,eAAe2B,QAAQ,UAAUU,QAASnD,KAAKmE,aAA1D,kB,GArHJxC,aAiJLqE,cAAWpE,aAdF,SAAAlC,GAAK,MAAK,CAC9BuG,cAAevG,EAAMuG,kBAIE,SAAAnE,GAAQ,MAAK,CACpCrB,WAAY,SAACsB,GAAD,OAAUD,EAAS,CAC3BE,KAAM,eACNC,QAASF,QAMSH,CAA6CyB,I,iBC1KjE6C,E,YACF,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KASV0G,YAAc,SAAAC,GACV,EAAK3G,MAAM4G,oBAAoBD,IAXhB,EAcnBE,YAAc,WACV,GAAwB,MAApB,EAAK7G,MAAM8G,MAAf,CACA,IAAIC,EAAQ,GAFI,uBAGhB,IAHgB,IAGhB,EAHgB,iBAGLJ,EAHK,QAIZI,EAAM1B,KAAK,kBAACI,EAAA,EAAD,CAAKhE,MAAO,CAACC,QAAS,OAAQsF,IAAKL,EAAKtF,IAAI,kBAACoC,EAAA,EAAD,CAAQwD,KAAK,KAAKjE,QAAQ,QAAQkE,OAAO,EACjCxD,QAAS,kBAAM,EAAKgD,YAAYC,KADxC,mBAC4DA,EAAKtF,QAF5H,EAAmB,EAAKrB,MAAM8G,MAA9B,+CAAsC,IAHtB,kFAOhB,OAAOC,IAnBP,EAAK9G,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAONM,M,+BAmBT,OACI,kBAACpD,EAAA,EAAD,KACKpB,KAAKsG,mB,GA7BG3E,aA6CVC,eAVS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,CACpCuE,oBAAqB,SAACD,GAAD,OAAUtE,EAAS,CACpCE,KAAM,cACNC,QAASmE,QAIFxE,CAA6CsE,GC5CtDU,E,YACF,WAAYnH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAMNM,M,oCAIT,GAAIxE,KAAKP,MAAM8G,MACX,OAAOM,OAAOC,OAAO9G,KAAKP,MAAM8G,OAAOQ,QAAO,SAAAX,GAAI,OAAIA,EAAKY,UAAUC,OACjEC,IAASC,OAAO,eACbD,EAAOd,EAAKgB,UAAUC,OAAOC,KAAM,SAASC,eAAe,CAC1DC,EAAGN,IAASO,QACZC,EAAGR,IAASS,aAEhBT,EAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAASO,cAAc,CACvDL,EAAGN,IAASO,QACZC,EAAGR,IAASS,iB,+BAMxB,OACI,kBAACtG,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,qBACA,kBAACD,EAAA,EAAKE,KAAN,CAAWL,MAAO,CAAC4G,WAAY,WAC3B,kBAAC,EAAD,CAAYvB,MAAOvG,KAAK+H,sB,GA9BlBpG,aA4CXC,eAPS,SAAAlC,GAAK,MAAK,CAC9B6G,MAAO7G,EAAM6G,UAGU,SAAAzE,GAAQ,MAAK,KAGzBF,CAA6CgF,GC5CtDoB,E,YACF,WAAYvI,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAMNM,M,oCAIT,GAAIxE,KAAKP,MAAM8G,MACX,OAAOM,OAAOC,OAAO9G,KAAKP,MAAM8G,OAAOQ,QAAO,SAAAX,GAAI,OAAIA,EAAKY,UAAUC,OACjEC,IAASC,OAAO,eAChBD,EAAOd,EAAKgB,UAAUC,OAAOC,KAAM,SAASW,QAAQ,CAACT,EAAGN,IAASO,QAASC,EAAGR,IAASS,iB,+BAK9F,OACI,kBAACtG,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,uBACA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC,EAAD,CAAYgF,MAAOvG,KAAK+H,sB,GAvBhBpG,aAqCbC,eAPS,SAAAlC,GAAK,MAAK,CAC9B6G,MAAO7G,EAAM6G,UAGU,SAAAzE,GAAQ,MAAK,KAGzBF,CAA6CoG,G,QCvCtDE,E,YACF,WAAYzI,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyI,iBAAkB,IAAIC,KAE1B,EAAKhB,UAAY,GACjB,EAAKiB,UAAW,EAChB,EAAKC,QAAU,KACf,EAAKC,mBAAqB,EAAKA,mBAAmBrE,KAAxB,gBARX,E,mFAYGsE,EAAWC,EAAWC,GACxC,MAAyD,KAAnDF,EAAUpC,KAAKgB,UAAf,OAAmCuB,aAA0E,KAApDH,EAAUpC,KAAKgB,UAAf,QAAoCuB,cAC9F3I,KAAKP,MAAM2G,KAAKgB,UAAhB,OAAoCuB,YAAYC,MAAQJ,EAAUpC,KAAKgB,UAAf,OAAmCuB,YAAYC,KACpG5I,KAAKP,MAAM2G,KAAKgB,UAAhB,QAAqCuB,YAAYC,MAAQJ,EAAUpC,KAAKgB,UAAf,QAAoCuB,YAAYC,MACtF,MAAtBH,EAAU7H,UAAoBZ,KAAKN,MAAMkB,WAAa6H,EAAU7H,UAI9DZ,KAAKP,MAAM2G,KAAKyC,OAAO/H,KAAO0H,EAAUpC,KAAKyC,OAAO/H,K,2CAI1CgI,GACjB,OAAOC,KAAKC,MAA+C,KAA/B,SAATF,EAAsBG,OAAOC,UAAkB,M,qCAGvDtI,GACPZ,KAAKP,MAAM2G,KAAKY,UAAUmC,iBAAmBnJ,KAAKP,MAAM2G,KAAKY,UAAUmC,gBAAgBC,YAAcpJ,KAAKP,MAAM2G,KAAKyC,OAAO/H,IAC5Hd,KAAKP,MAAM2G,KAAKY,UAAUqC,QAAQC,MAAQtJ,KAAKuJ,qBAAqB3I,EAAS4I,OAAO,GAAGC,KAAK,GAAGC,SAAShF,OACxG1E,KAAKP,MAAM2G,KAAKY,UAAU2C,WAAWL,MAAQ1I,EAAS4I,OAAO,GAAGC,KAAK,GAAGG,SAASlF,QAEjF1E,KAAKP,MAAM2G,KAAKY,UAAUqC,QAAQC,MAAQtJ,KAAKuJ,qBAAqB3I,EAAS4I,OAAO,GAAGC,KAAK,GAAGC,SAAShF,OACxG1E,KAAKP,MAAM2G,KAAKY,UAAU2C,WAAWL,MAAQ1I,EAAS4I,OAAO,GAAGC,KAAK,GAAGG,SAASlF,OAEjF1E,KAAKP,MAAM2G,KAAKyC,OAAO/H,KACvBd,KAAKP,MAAM2G,KAAKY,UAAUqC,QAAQR,OAAS7I,KAAKuJ,qBAAqB3I,EAAS4I,OAAO,GAAGC,KAAK,GAAGC,SAAShF,OAAS1E,KAAKuJ,qBAAqB3I,EAAS4I,OAAO,GAAGC,KAAK,GAAGC,SAAShF,OAChL1E,KAAKP,MAAM2G,KAAKY,UAAU2C,WAAWd,OAASjI,EAAS4I,OAAO,GAAGC,KAAK,GAAGG,SAASlF,MAAQ9D,EAAS4I,OAAO,GAAGC,KAAK,GAAGG,SAASlF,OAElI1E,KAAKP,MAAMoK,iBAAiB7J,KAAKP,MAAM2G,Q,wCAIvCpG,KAAKsI,QAAUpB,IACwB,KAAnClH,KAAKP,MAAM2G,KAAKY,UAAUC,MAAyD,KAA1CjH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOC,KAI9EtH,KAAKqI,SAAWnB,EAAOlH,KAAKP,MAAM2G,KAAKY,UAAUC,KAAO,IAAMjH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOC,KAAM,oBAAoBwC,SAAS9J,KAAKsI,SAHnItI,KAAKqI,UAAW,I,yCAMLzH,GAGP,IAAI6F,EAFK,OAAb7F,IACwB,OAApBA,EAASjB,QAGL8G,EADA,aAAcI,OAAOkD,KAAK/J,KAAKoH,WACzBpH,KAAKoH,UAAL,OAAyBwB,IAAM5I,KAAKoH,UAAL,YAA8BwB,IAAM5I,KAAKoH,UAAL,SAA2B9H,SAASsJ,IAEvG5I,KAAKoH,UAAL,OAAyBwB,IAAM5I,KAAKoH,UAAL,YAA8BwB,IAEvE5I,KAAKgK,eAAepJ,GACpBZ,KAAKN,MAAMyI,iBAAiB8B,IAAIxD,EAAK7F,GACrCZ,KAAKC,SAAS,CAACkI,iBAAkBnI,KAAKN,MAAMyI,iBAAkBvH,SAAUA,KAExEsJ,QAAQC,IAAI,aAAcvJ,M,sCAMO,MAArCZ,KAAKP,MAAM2G,KAAKgB,UAAUQ,SAAuD,MAApC5H,KAAKP,MAAM2G,KAAKgB,UAAUC,SACvErH,KAAKP,MAAM2G,KAAKyC,OAAO/H,GACnBd,KAAKP,MAAM2G,KAAKY,UAAUmC,iBAAmBnJ,KAAKP,MAAM2G,KAAKY,UAAUmC,gBAAgBC,YAAcpJ,KAAKP,MAAM2G,KAAKyC,OAAO/H,IAC5Hd,KAAKoH,UAAL,OAA2BpH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOsB,YAC5D3I,KAAKoH,UAAL,YAAgCpH,KAAKP,MAAM2G,KAAKyC,OAAOF,YACvD3I,KAAKoH,UAAL,SAA6B,CAAC,CAC1B9H,SAAUU,KAAKP,MAAM2G,KAAKgB,UAAUQ,QAAQe,YAC5CyB,UAAU,MAGdpK,KAAKoH,UAAL,OAA2BpH,KAAKP,MAAM2G,KAAKyC,OAAOF,YAClD3I,KAAKoH,UAAL,YAAgCpH,KAAKP,MAAM2G,KAAKgB,UAAUQ,QAAQe,YAClE3I,KAAKoH,UAAL,SAA6B,CAAC,CAC1B9H,SAAUU,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOsB,YAC3CyB,UAAU,MAIlBpK,KAAKoH,UAAL,OAA2BpH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOsB,YAC5D3I,KAAKoH,UAAL,YAAgCpH,KAAKP,MAAM2G,KAAKgB,UAAUQ,QAAQe,gB,uCAGxD,IAAD,OACb,GAAK3I,KAAKoH,UAAL,OAAyBwB,KAAQ5I,KAAKoH,UAAL,YAA8BwB,IAApE,CAGA,IAAInC,EAMJ,GAJIA,EADA,aAAcI,OAAOkD,KAAK/J,KAAKoH,WACzBpH,KAAKoH,UAAL,OAAyBwB,IAAM5I,KAAKoH,UAAL,YAA8BwB,IAAM5I,KAAKoH,UAAL,SAA2B9H,SAASsJ,IAEvG5I,KAAKoH,UAAL,OAAyBwB,IAAM5I,KAAKoH,UAAL,YAA8BwB,KAEnE5I,KAAKN,MAAMyI,iBAAiBkC,IAAI5D,GAOpC,OAAO,kBAAC,IAAD,CACH6D,QAAS,CACLC,OAAQvK,KAAKoH,UAAL,OACRoD,YAAaxK,KAAKoH,UAAL,YACbqD,WAAY,UACZC,UAAW1K,KAAKoH,UAAL,SACXuD,mBAAmB,EACnBC,eAAgB,CACZC,cAAe7K,KAAKqI,SAAWrI,KAAKsI,QAAQwC,SAAW5D,EAAOlH,KAAKP,MAAM2G,KAAKY,UAAUC,KAAO,IAAMjH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOC,KAAM,oBAAoBwD,SAChKC,aAAc,gBAGtBC,SAAU,SAAAxK,GACN,EAAK+H,mBAAmB/H,IAE5ByK,OAAQ,SAAAC,GACJhB,QAAQC,IAAI,+CAAgDe,IAEhEC,UAAW,SAAAD,GACPhB,QAAQC,IAAI,kDAAmDe,MAzBnElL,KAAKC,SAAS,CACVkI,iBAAkBnI,KAAKN,MAAMyI,iBAC7BvH,SAAUZ,KAAKN,MAAMyI,iBAAiB9H,IAAIoG,Q,yCA6BlD,GAAKzG,KAAKN,MAAMkB,SAChB,OAAO,kBAAC,IAAD,CACH0J,QAAS,CACLc,WAAYpL,KAAKN,MAAMkB,UAE3BqK,OAAQ,SAAAI,GACJnB,QAAQC,IAAI,iDAAkDkB,IAElEF,UAAW,SAAAE,GACPnB,QAAQC,IAAI,oDAAqDkB,Q,+BAMzE,OACI,kBAAC,IAAD,CACIvK,GAAG,MACHwK,KAAM,EACNC,kBAAmB,CAAC7I,MAAO,OAAQ8I,OAAQ,QAC3CC,OAAQ,CAAC7C,IAAK,QAAS8C,KAAM,UAE5B1L,KAAK2L,gBACL3L,KAAK4L,kBACL5L,KAAKoH,WAAapH,KAAK6L,iBACvB7L,KAAK8L,wB,GAjKKnK,aAoLZC,eAZS,SAAAlC,GAAK,MAAK,CAC9B0G,KAAM1G,EAAMqM,gBAGW,SAAAjK,GAAQ,MAAK,CACpC+H,iBAAkB,SAACzD,GAAD,OAAUtE,EAAS,CACjCE,KAAM,qBACNC,QAASmE,QAKFxE,CAA6CsG,GCpLtD8D,E,YACF,WAAYvM,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJL,E,0EAQNM,M,uCAIT,MAA2B,KAAvBxE,KAAKP,MAAM2G,KAAKtF,GACT,8BAEJ,yCACOd,KAAKP,MAAM2G,KAAKtF,GAAG,6BAD1B,yBAEad,KAAKP,MAAM2G,KAAKkD,MAAMrG,WAFnC,YAEiDjD,KAAKP,MAAM2G,KAAKkD,MAAM2C,WAFvE,IAEoF,6BAFpF,0BAGcjM,KAAKP,MAAM2G,KAAKyC,OAAO5F,WAHrC,YAGmDjD,KAAKP,MAAM2G,KAAKyC,OAAOoD,WAH1E,IAGuF,6BAHvF,SAIIjM,KAAKP,MAAM2G,KAAKY,UAAUC,KAJ9B,IAIoC,6BAJpC,gBAKWC,EAAOlH,KAAKP,MAAM2G,KAAKgB,UAAUC,OAAOC,KAAM,SAASH,OAAO,WALzE,IAKqF,6BALrF,iBAMYD,EAAOlH,KAAKP,MAAM2G,KAAKgB,UAAUQ,QAAQN,KAAM,SAASH,OAAO,WAN3E,IAMuF,gC,+BAO9F,OACI,kBAAC/F,EAAA,EAAD,KACKpB,KAAKkM,sB,GA/BIvK,aA6CXC,gBARS,SAAAlC,GAAK,MAAK,CAC9B0G,KAAM1G,EAAMqM,gBAIW,SAAAjK,GAAQ,MAAK,KAGzBF,CAA6CoK,GC5CtDG,G,YACF,WAAY1M,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAQTM,M,+BAIN,OACI,kBAACnD,EAAA,EAAD,CAAMH,MAAO,CAACsK,OAAO,SACjB,kBAACnK,EAAA,EAAKC,OAAN,uBACA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC,GAAD,MACA,yBAAKL,MAAO,CAAEkL,SAAU,WAAY1J,MAAO,OAAQ8I,OAAQ,UACvD,kBAAC,EAAD,a,GAnBI7J,aAiCbC,gBANS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,KAGzBF,CAA6CuK,IC7BtDE,G,YACF,WAAY5M,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAOTM,M,+BAKN,OACI,kBAACpD,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,GAAD,a,GAvBLnB,aAqCJC,gBANS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,KAGzBF,CAA6CyK,I,8BCnCtDE,G,YACF,WAAY9M,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT8M,aAAc,IAElB,EAAKC,kBAAoB,EAAKA,kBAAkBvI,KAAvB,gBACzB,EAAKwI,qBAAuB,EAAKA,qBAAqBxI,KAA1B,gBAC5B,EAAKyI,aAAe,EAAKA,aAAazI,KAAlB,gBAPL,E,0EAeNM,GAETxE,KAAKC,SAAS,CAACuM,aAAchI,EAAMC,OAAO3D,KAI1Cd,KAAKP,MAAMmN,cAAc5M,KAAKP,MAAMoN,MAAMrI,EAAMC,OAAO3D,KAI/B,QAApBd,KAAKP,MAAMqN,KACX9M,KAAKP,MAAMoF,QAAQC,KAAK,kBAAkBN,EAAMC,OAAO3D,IAE/B,UAApBd,KAAKP,MAAMqN,KACX9M,KAAKP,MAAMsN,mBAAmB,QAAS/M,KAAKP,MAAMoN,MAAMrI,EAAMC,OAAO3D,KAC1C,WAApBd,KAAKP,MAAMqN,MAClB9M,KAAKP,MAAMsN,mBAAmB,SAAU/M,KAAKP,MAAMoN,MAAMrI,EAAMC,OAAO3D,O,6CAW9E,IAAIR,EACJ,OAAQN,KAAKP,MAAMqN,MACf,IAAK,SAGL,IAAK,QACDxM,EAAU,CAAC,UAAW,aAAc,YAAa,UAAW,eAC5D,MACJ,IAAK,MACDA,EAAU,CAAC,YAAa,YAAa,aAAc,UAAW,SAAU,eACxE,MACJ,QACIA,EAAU,CAAC,YAAa,aAAc,YAAa,UAAW,eAGtE,OAAOA,EAAQ0M,KAAI,SAACxF,GAChB,OAAO,wBAAIf,IAAKe,GAAIA,Q,0CASR,IAKZyF,EALW,OACXC,EAAc,GAKlB,GAAIlN,KAAKP,MAAM0N,YAAa,CACxB,IAAIC,GAAS,EACbH,EAAiBI,KAAUC,GAAGtN,KAAKP,MAAM0N,YAAatG,OAAOC,OAAO9G,KAAKP,MAAMoN,OAAOG,KAAI,SAACO,GAEvF,OADAH,IACOG,EAAEC,cAAcvK,WAAasK,EAAEC,cAAcvB,UAAY,IAAMmB,MACtErG,QAAO,SAACwG,GAGR,OAAOA,EAAEE,OAAS,OACnBT,KAAI,SAACO,GAEJ,OAAO1G,OAAOC,OAAO,EAAKrH,MAAMoN,OAAOU,EAAE9I,OAAOiJ,MAAM,KAAKH,EAAE9I,OAAOiJ,MAAM,KAAKC,OAAO,YAI1FV,EAAiBpG,OAAOC,OAAO9G,KAAKP,MAAMoN,OAmB9C,GAfAI,EAAiBA,EAAelG,QAAO,SAAChF,GACpC,OAAO,EAAKtC,MAAMqN,MACd,IAAK,SACD,MAA0B,WAAnB/K,EAAK6L,WAA0C,WAAhB7L,EAAKpC,OAC/C,IAAK,QACD,MAA0B,UAAnBoC,EAAK6L,WAAyC,WAAhB7L,EAAKpC,OAC9C,IAAK,MAEL,QACI,OAAO,MAMK,WAApBK,KAAKP,MAAMqN,MAAqB9M,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,MAAQtH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,CAE/H,IAAIuG,EAAY3G,IAAOlH,KAAKP,MAAMsM,YAAY/E,UAAUC,KAAM,eAkB9DgG,GAjBAA,EAAiBA,EAAelG,QAAO,SAAC+G,GACpC,GAAiB,aAAbA,EAAEnO,OACF,OAAO,EAIX,IAAK,IAAIoO,EAAI,EAAGA,EAAID,EAAEE,gBAAgBL,OAAQI,IAE1C,GADA7D,QAAQC,IAAI0D,EAAUI,MAAQ,EAAGhF,OAAO6E,EAAEE,gBAAgBD,GAAGE,MACzDJ,EAAUI,MAAQ,IAAMhF,OAAO6E,EAAEE,gBAAgBD,GAAGE,MAChD/G,IAAO4G,EAAEE,gBAAgBD,GAAGG,MAAO,SAASpE,SAAS5C,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,WACvGJ,IAAO4G,EAAEE,gBAAgBD,GAAGI,IAAK,SAASlG,QAAQf,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,UAC3G,OAAO,EAInB,OAAO,MAEqBP,QAAO,SAAC+G,GACpC,cAAiBjH,OAAOC,OAAO,EAAKrH,MAAM8G,OAA1C,eAAkD,CAA7C,IAAIH,EAAI,KACLgI,EAA0BlH,IAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAAS+G,SAASjI,EAAKY,UAAU2C,WAAWd,OAAQ,UACtH,GAAIgF,IAAc3G,IAAOd,EAAKY,UAAUC,KAAM,eAAiB6G,EAAEhN,KAAOsF,EAAKyC,OAAO/H,IAAMsF,EAAKkD,MAAMxI,KAAO,EAAKrB,MAAMsM,YAAYzC,MAAMxI,GAAI,CACzI,GAAIsN,EAAwBnG,QAAQf,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,WAClF8G,EAAwBtE,SAAS5C,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,UAC1F,OAAO,EAEX,GAAIJ,IAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAASW,QAAQf,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,WACvGJ,IAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAASwC,SAAS5C,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,UAC/G,OAAO,OAER,GAAIuG,IAAc3G,IAAOd,EAAKY,UAAUC,KAAM,eAAiB6G,EAAEhN,KAAOsF,EAAKyC,OAAO/H,GAAI,CAC3F,GAAIsN,EAAwBnG,QAAQf,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,SAAS+G,SAAS,GAAI,YACxGD,EAAwBtE,SAAS5C,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,UAC1F,OAAO,EAEX,GAAIJ,IAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAASW,QAAQf,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,SAAS+G,SAAS,GAAI,YAC7HnH,IAAOd,EAAKgB,UAAUQ,QAAQN,KAAM,SAASwC,SAAS5C,IAAO,EAAKzH,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,UAC/G,OAAO,GAInB,OAAO,MAEIgH,MAAK,SAACR,EAAGS,GACpB,IAAIC,EAASzF,KAAK0F,IAAI1F,KAAK0F,IAAKX,EAAEY,UAAU,GAAG/F,YAAYC,IAAM,EAAKnJ,MAAMsM,YAAY3E,UAAUC,OAAOsB,YAAYC,IAAM,GAAKG,KAAK0F,IAAKX,EAAEY,UAAU,GAAG/F,YAAY+C,IAAM,EAAKjM,MAAMsM,YAAY3E,UAAUC,OAAOsB,YAAY+C,IAAM,GAAI,IACrOiD,EAAS5F,KAAK0F,IAAI1F,KAAK0F,IAAKF,EAAEG,UAAU,GAAG/F,YAAYC,IAAM,EAAKnJ,MAAMsM,YAAY3E,UAAUQ,QAAQe,YAAYC,IAAM,GAAKG,KAAK0F,IAAKF,EAAEG,UAAU,GAAG/F,YAAY+C,IAAM,EAAKjM,MAAMsM,YAAY3E,UAAUQ,QAAQe,YAAY+C,IAAM,GAAI,IAC3O,OAAI8C,EAASG,GACD,EACDH,IAAWG,EACX,EAEA,UAKf1B,EAAeqB,MAAK,SAACR,EAAGS,GACpB,OAAIT,EAAEnO,SAAW4O,EAAE5O,OACXmO,EAAEF,YAAcW,EAAEX,UACdE,EAAEN,cAAcvB,YAAcsC,EAAEf,cAAcvB,UAC1C6B,EAAEN,cAAcvK,WAAasL,EAAEf,cAAcvK,WAAmB,GAC5D,EAEJ6K,EAAEN,cAAcvB,UAAYsC,EAAEf,cAAcvB,UAAkB,GAC1D,EAGQ,UAAhB6B,EAAEF,WAA+B,EAC9B,EAGM,WAAbE,EAAEnO,QAA6B,EAC5B,KAMnB,IAAK,IAAIyN,KAASH,EAAgB,CAC9B,IAAIlL,EAAOkL,EAAeG,GAC1BF,EAAcpI,KACV,wBAAI2B,IAAK1E,EAAKjB,GAAII,MAAOlB,KAAKN,MAAM8M,eAAiBzK,EAAKjB,GAAK,CAC3D8N,WAAY,UACZC,QAAS,QACTnM,MAAO,OACPoM,YAAa,SACb,CAACD,QAAS,QAASnM,MAAO,OAAQoM,YAAa,UAC1B,QAApB9O,KAAKP,MAAMqN,KACR,wBAAIhM,GAAIiB,EAAKjB,GACTqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAK6L,UAAUoB,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,kBAEhF,wBAAIpO,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAnD,WAEiB,QAApB/O,KAAKP,MAAMqN,KACR,oCACI,wBAAIhM,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKyL,cAAcvB,WAC3E,wBAAInL,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKyL,cAAcvK,aAG/E,oCACI,wBAAInC,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKyL,cAAcvK,YAC3E,wBAAInC,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKyL,cAAcvB,YAGnF,wBAAInL,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKoN,oBACxC,QAApBnP,KAAKP,MAAMqN,KACR,wBAAIhM,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKpC,OAAOqP,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,kBAE1F,KAEJ,wBAAIpO,GAAIiB,EAAKjB,GAAIqC,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAAKhN,EAAKjB,MAIzE,OAAOoM,I,+BASP,OACI,6BACI,kBAACkC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACrO,MAAO,CAACwB,MAAO,SACzC,2BAAOxB,MAAO,CAAC2N,QAAS,UACxB,wBAAI3N,MAAO,CAAC2N,QAAS,QAASC,YAAa,QAASpM,MAAO,SACtD1C,KAAK0M,yBAGV,2BAAOxL,MAAO,CAAC2N,QAAS,QAASrD,OAAQ,OAAQ9I,MAAO,OAAQ8M,SAAU,SACzExP,KAAKyM,2B,GAlPC9K,aAsRZqE,eAAWpE,aAvBF,SAAAlC,GAAK,MAAK,CAC9BmN,MAAOnN,EAAMmN,MACbd,YAAcrM,EAAMqM,YACpBxF,MAAO7G,EAAM6G,UAMU,SAAAzE,GAAQ,MAAK,CACpC8K,cAAe,SAAC7K,GAAD,OAAUD,EAAS,CAC9BE,KAAM,kBACNC,QAASF,KAEbgL,mBAAoB,SAAC/K,EAAMD,GAAP,OAAgBD,EAAS,CACzCE,KAAM,uBACNC,QAAS,CACLD,KAAMA,EACND,KAAMA,SAKQH,CAA6C2K,KCzRjEkD,G,YACF,WAAYhQ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyN,YAAa,IAEjB,EAAKlJ,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,0EAQNM,GACTxE,KAAKC,SAAS,CAACkN,YAAa3I,EAAMC,OAAOC,U,+BAIzC,OACI,kBAACtD,EAAA,EAAD,CAAW6D,UAAU,cAAc/D,MAAO,CAACoL,SAAU,SACjD,4CACA,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAK8C,GAAI,IAAI,kBAACL,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAG,SAASgF,YAAY,SACtCC,SAAU/F,KAAKiE,iBAE9C,6BACA,kBAAC,GAAD,CAAckJ,YAAanN,KAAKN,MAAMyN,YAAaL,KAAM,e,GAtB/CnL,aAmCXC,gBAPS,SAAAlC,GAAK,MAAK,CAC9BmN,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,KAGzBF,CAA6C6N,I,SC9BtDC,G,YACF,WAAYjQ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTgP,UAAW,IAEf,EAAKzK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKyL,oBAAsB,EAAKA,oBAAoBzL,KAAzB,gBAE3B,EAAK0L,aAAe,GACpB,EAAKC,MAAQ,EAEb,EAAK5E,OAAS,EAAKA,OAAO/G,KAAZ,gBACd,EAAK4L,eAAiB,EAAKA,eAAe5L,KAApB,gBAZP,E,iFAgBf,IAAI6L,EAAQ7I,MAEPlH,KAAKP,MAAMsM,YAAY/E,UAAUC,MAClCjH,KAAKP,MAAMuQ,gBAAgB,OAAQ,KAAMD,EAAME,IAAI,EAAG,QAAQ9I,OAAO,iB,mCAIhE3C,GACT,IAAI0L,EAAa1L,EAAMC,OAAO3D,GAAG4M,MAAM,KACjB,SAAlBwC,EAAW,GAEXlQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAOC,OACpC,YAAlBwL,EAAW,GAElBlQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAOC,OACpC,SAAlBwL,EAAW,IAAmC,eAAlBA,EAAW,GAE9ClQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAO0L,SAG7DnQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAIA,EAAW,GAAI1L,EAAMC,OAAOC,S,0CAI1DF,EAAOxC,GACI,UAAvBwC,EAAMC,OAAOC,MAEb1E,KAAKP,MAAMuQ,gBAAgB,iBAAkB,OAAOhO,EAAMwC,EAAMC,OAAOC,OAEvE1E,KAAKP,MAAMuQ,gBAAgB,iBAAkBhO,EAAMhC,KAAKP,MAAMsM,YAAYzC,MAAMxI,GAAG,IAAI0D,EAAMC,OAAOC,MAAMsK,QAAQ,QAAS,O,yCAO/H,IAFA,IAAIoB,EAAQ,GACR1B,EAAY,GACPX,EAAI,EAAGA,EAAI/N,KAAKP,MAAMoN,MAAMc,OAAQI,IACzC,GAAI/N,KAAKP,MAAMoN,MAAMkB,GAAGjN,KAAOd,KAAKP,MAAMsM,YAAYzC,MAAMxI,GAExCd,KAAKP,MAAMoN,MAAMkB,GAAGW,UAG5C,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAUf,OAAQI,IAClCqC,EAAMtL,KAAK,4BAAQ2B,IAAKsH,EAAGrJ,MAAOqJ,GAAIA,IAE1C,OAAOqC,I,6BAGJR,GACH5P,KAAK4P,aAAa5P,KAAK6P,OAASD,EAChC5P,KAAK6P,OAAS,I,qCAGHQ,EAAUC,GACrB,GAAiC,MAA7BtQ,KAAK4P,aAAaU,GAAiB,CACnC,IAAMC,EAAQvQ,KAAK4P,aAAaU,GAAQE,WACjB,OAAnBD,EAAME,WACNzQ,KAAKP,MAAMuQ,gBAAgBK,EAAU,UAAWE,EAAMG,mBACtD1Q,KAAKP,MAAMuQ,gBAAgBK,EAAU,cAAe,CAChDzH,IAAK2H,EAAME,SAASnR,SAASsJ,MAC7B8C,IAAK6E,EAAME,SAASnR,SAASoM,cAKrCxB,QAAQC,IAAI,qC,yCAID2C,GACf,IAAIxC,EAAU,GAEd,OADKtK,KAAKP,MAAMsM,YAAY3E,UAAU0F,GAAM6D,SAASrG,EAAQxF,KAAK,4BAAQJ,MAAO,GAAIkM,MAAO,GAAInK,IAAI,UAC/FzG,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAClCwJ,EAAQxF,KAAR,MAAAwF,EAAO,aAAStK,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAI4N,UAAU1B,KAAI,SAAC6D,GAC7E,OAAO,4BAAQnM,MAAO,QAAQmM,EAAIC,OAAQF,MAAOC,EAAIE,KAAMtK,IAAKoK,EAAIE,YAExEzG,EAAQxF,KAAK,4BAAQJ,MAAO,QAASkM,MAAO,YAAanK,IAAI,WACtD6D,GALsCA,I,uCAS7C,IAAIA,EAAU,CAAC,4BAAQ5F,MAAO,GAAIkM,MAAO,MACzC,OAAK5Q,KAAKP,MAAMsM,YAAYlD,OAAO/H,IACnCwJ,EAAQxF,KAAR,MAAAwF,EAAO,aAAStK,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAIkQ,SAAShE,KAAI,SAACiE,GAC7E,OAAO,4BAAQvM,MAAOuM,EAAIC,GAAIN,MAAOK,EAAIE,KAAO,IAAMF,EAAIG,kBAEvD9G,GAJuCA,I,+BAOxC,IAAD,OACL,OACI,kBAAClJ,EAAA,EAAD,CAAW6D,UAAU,kBAAkB/D,MAAO,CAACoL,SAAU,SACrD,gDACA,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACjB,+BACI,4BACI,qCACA,sCAAQrR,KAAKP,MAAMsM,YAAYzC,MAAMrG,YAArC,cAAuDjD,KAAKP,MAAMsM,YAAYzC,MAAM2C,aAExF,4BACI,4BACI,kBAAC1G,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,GAAGhF,GAAG,aAAaiF,SAAU/F,KAAKiE,aAC1DS,MAAO1E,KAAKP,MAAMsM,YAAY/E,UAAUC,SAG9D,4BACI,4BACI,kBAAC1B,EAAA,EAAKG,MAAN,uBAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAASK,YAAY,GAAGhF,GAAG,gBAAgBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMsM,YAAY/E,UAAUsK,SAC5H,CAAC,GAAI,uBAAwB,WAAY,UAAW,kBAAmB,kBAAmB,YAAa,gBAAiB,UAAW,YAAa,MAAO,cACnJtE,KAAI,SAACnM,GACF,OAAO,4BAAQ+P,MAAO/P,EAAM6D,MAAO7D,EAAM4F,IAAK5F,UAKlE,4BACI,6CAGA,4BACKb,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAIyQ,eAAeC,aAAjE,UAAmFxR,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAIyQ,eAAeC,cAAiB,QAG9K,4BACI,uDAGA,4BACKxR,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAIyQ,eAAeE,QAAjE,UAA8EzR,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAIyQ,eAAeE,SAAY,aAQpL,kBAAC3O,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,0BAGA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKhE,MAAO,CAACkL,SAAU,WAAY1J,MAAO,OAAQ8I,OAAQ,UACtD,kBAAC,EAAD,OAEJ,kBAACtG,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,uCACA,kBAACA,EAAA,EAAD,KACK9C,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWL,MACzCpC,IAAO,cAAcwK,QAAQ,OAC5BC,QAAQ3R,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWL,OACpDnC,OAAO,WAAa,KAGjC,kBAACjC,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,sDACA,kBAACA,EAAA,EAAD,KACKoH,QAAQC,IAAIjD,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,OAC3DtH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,KACvCJ,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,SACjD+G,SAASrO,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWL,MAAO,UAC5DnC,OAAO,cAAgB,SAOxD,6BACA,kBAACjC,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,uCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACb,+BACA,4BACI,4BACI,kBAAC9L,EAAA,EAAKG,MAAN,kBAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SACH3E,GAAG,uBAAuBiF,SAAU,SAACgJ,GAAD,OAAO,EAAKY,oBAAoBZ,EAAG,WACvErK,MAAO1E,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKC,WACpD7R,KAAK8R,mBAAmB,aAIvC,4BACI,6BACA,4BACI,kBAAC,IAAD,CACI7G,OAAQjL,KAAKiL,OACb6E,eAAgB,kBAAM,EAAKA,eAAe,SAAU,KAEpD,kBAACvK,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,kBACxBiM,SAAgE,UAApD/R,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKC,UAClD/Q,GAAG,uBAAuBiF,SAAU/F,KAAKiE,aACzCS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOsJ,aAIzE,4BACI,4BACI,kBAACpL,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,oBACfiF,SAAU,SAACgJ,GAAD,OAAO,EAAK9K,aAAa8K,IACnCrK,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,SAGrE,4BACI,4BACI,kBAAC/B,EAAA,EAAKG,MAAN,+BAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,sBACxBhF,GAAG,uBAAuBiF,SAAU/F,KAAKiE,aACzCS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOoK,iBAQrF,kBAAC3O,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACjB,+BACI,4BACI,4BACI,kBAAC9L,EAAA,EAAKG,MAAN,kBAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SACH3E,GAAG,wBACHiF,SAAU,SAACgJ,GAAD,OAAO,EAAKY,oBAAoBZ,EAAG,YAC7CrK,MAAO1E,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKI,YACtDhS,KAAK8R,mBAAmB,cAIrC,4BACI,6BACA,4BACI,kBAAC,IAAD,CACI7G,OAAQjL,KAAKiL,OACb6E,eAAgB,kBAAM,EAAKA,eAAe,UAAW,KAErD,kBAACvK,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,mBACxBhF,GAAG,wBAAwBiF,SAAU/F,KAAKiE,aAC1C8N,SAAiE,UAArD/R,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKK,WAClDvN,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQ+I,aAI1E,4BACI,4BACI,kBAACpL,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,qBACfiF,SAAU,SAACgJ,GAAD,OAAO,EAAK9K,aAAa8K,IACnCrK,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,SAGtE,4BACI,4BACI,kBAAC/B,EAAA,EAAKG,MAAN,+BAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,uBACxBhF,GAAG,wBAAwBiF,SAAU/F,KAAKiE,aAC1CS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQ6J,kBAS1F,kC,GAhUc9P,aAsVfC,gBAhBS,SAAAlC,GAAK,MAAK,CAC9BqM,YAAarM,EAAMqM,YACnBc,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,CACpCkO,gBAAiB,SAAChO,EAAMkQ,EAAOxN,GAAd,OAAwB5C,EAAS,CAC9CE,KAAM,YACNC,QAAS,CACLD,KAAMA,EACNkQ,MAAOA,EACPxN,MAAOA,SAKJ9C,CAA6C8N,ICzVtDyC,G,YACF,WAAY1S,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyN,YAAa,IAEjB,EAAKlJ,aAAe,EAAKA,aAAaC,KAAlB,gBALL,E,0EAQNM,GACe,WAApBA,EAAMC,OAAO3D,GAAiBd,KAAKC,SAAS,CAACkN,YAAa3I,EAAMC,OAAOC,QAC9C,kBAApBF,EAAMC,OAAO3D,IAAwBd,KAAKP,MAAMuQ,gBAAgB,UAAWhQ,KAAKP,MAAMsM,YAAYlD,OAAO/H,GAAI0D,EAAMC,OAAOC,S,uCAGrH,IAAD,EACT4F,EAAU,CAAC,4BAAQ5F,MAAO,GAAIkM,MAAO,GAAInK,IAAK,UAClD,OAAKzG,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAC/Bd,KAAKP,MAAMsM,YAAYlD,OAAOuJ,QAAQlB,KAAI5G,EAAU,KACxD,EAAAA,GAAQxF,KAAR,qBAAgB9E,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAIkQ,SAAShE,KAAI,SAACiE,GAC7E,OAAO,4BAAQxK,IAAKwK,EAAIC,GAAIxM,MAAOuM,EAAIC,GAAIN,MAAOK,EAAIE,KAAO,IAAMF,EAAIG,kBAEpE9G,GALuCA,I,+BAS9C,OACI,kBAAClJ,EAAA,EAAD,CAAW6D,UAAU,eAAe/D,MAAO,CAACoL,SAAU,SAClD,6CACA,kBAAC/G,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,GAAIP,KACZ,kBAACpC,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAG,SAASgF,YAAY,iBAAiBC,SAAU/F,KAAKiE,kBAIhG,6BACA,kBAACiB,EAAA,EAAD,CAAKhE,MAAO,CAACsK,OAAQ,QACjB,kBAAC,GAAD,CAAc2B,YAAanN,KAAKN,MAAMyN,YAAaL,KAAM,YAE7D,6BACA,kBAAC5H,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,yBAAK5B,MAAO,CAACkL,SAAU,WAAY1J,MAAO,OAAQ8I,OAAQ,UACtD,kBAAC,EAAD,QAGR,kBAAC1I,EAAA,EAAD,KACI,kBAACoC,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,eAAS9C,KAAKP,MAAMsM,YAAYlD,OAAO5F,YAAvC,cAAyDjD,KAAKP,MAAMsM,YAAYlD,OAAOoD,aAE3F,kBAAC/G,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,wBACA,kBAACA,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,gBAAgBiF,SAAU/F,KAAKiE,aAC9CS,MAAO1E,KAAKP,MAAMsM,YAAYlD,OAAOuJ,QAAQlB,GAAKlR,KAAKP,MAAMsM,YAAYlD,OAAOuJ,QAAQlB,GAAK,IACtGlR,KAAKqS,oBAIlB,kBAACnN,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,KAAM9C,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWd,OAAS3B,IAAO,cAAcwK,QAAQ,OACnFC,QAAQ3R,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWd,QACpD1B,OAAO,0BAA4B,Y,GAhEzCxF,aAyFZC,gBAhBS,SAAAlC,GAAK,MAAK,CAC9BqM,YAAarM,EAAMqM,YACnBc,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,CACpCkO,gBAAiB,SAAChO,EAAMkQ,EAAOxN,GAAd,OAAwB5C,EAAS,CAC9CE,KAAM,YACNC,QAAS,CACLD,KAAMA,EACNkQ,MAAOA,EACPxN,MAAOA,SAKJ9C,CAA6CuQ,IC9EtDG,G,YAKF,WAAY7S,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAMNM,M,+BAWT,OACI,kBAACpD,EAAA,EAAD,KACI,kBAAC8D,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAAC,EAAD,sBAEJ,kBAACA,EAAA,EAAD,KACI,kBAACsM,GAAA,EAAD,KACI,4BACI,qCACA,sCAAQpP,KAAKP,MAAMsM,YAAYzC,MAAMrG,YAArC,cAAuDjD,KAAKP,MAAMsM,YAAYzC,MAAM2C,aAExF,4BACI,gDACA,4BAAKjM,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOsJ,UAEjD,4BACI,4CACA,4BAAKzJ,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,SAASH,OAAO,aAE9E,4BACI,iDACA,4BAAKnH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQ+I,UAElD,4BACI,6CACA,4BAAKzJ,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,SAASH,OAAO,aAE/E,4BACI,qDACA,4BAAKnH,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWd,OAAS3B,IAAO,cAAcwK,QAAQ,OAClFC,QAAQ3R,KAAKP,MAAMsM,YAAY/E,UAAU2C,WAAWd,QACpD1B,OAAO,0BAA4B,KAE5C,4BACI,uCACA,4BAAKnH,KAAKP,MAAMsM,YAAYlD,OAAO5F,WAAnC,IAAgDjD,KAAKP,MAAMsM,YAAYlD,OAAOoD,oB,GA1DnFtK,aAgFZC,gBAPS,SAAAlC,GAAK,MAAK,CAC9BqM,YAAarM,EAAMqM,gBAGI,SAAAjK,GAAQ,MAAK,KAGzBF,CAA6C0Q,ICnFtDC,G,YACF,WAAY9S,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT8S,eAAgB,EAChBC,cAAe,IAEnB,EAAKC,aAAe,EAAKA,aAAaxO,KAAlB,gBACpB,EAAKyO,SAAW,EAAKA,SAASzO,KAAd,gBAChB,EAAKzE,MAAMmT,YARI,E,4EAWH,IAAD,OACX,GAAIvT,OAAOwT,QAAQ,mDAAqD7S,KAAKP,MAAMsM,YAAYzC,MAAMrG,WAAa,IAAMjD,KAAKP,MAAMsM,YAAYzC,MAAM2C,UAAY,OAASjM,KAAKP,MAAMsM,YAAY/E,UAAUC,MAAO,CAC9M,OAAQjH,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAI0M,cAAcsF,yBACrE,IAAK,QACD,MACJ,IAAK,SACD9S,KAAKP,MAAMsM,YAAY/E,UAAU+L,iBAAmB1T,OAAOwT,QAAQ,gCAAkC7S,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAI0M,cAAcwF,aAAe,uBACrL,MACJ,IAAK,OACDhT,KAAKP,MAAMsM,YAAY/E,UAAU+L,iBAAmB1T,OAAOwT,QAAQ,gCAAkC7S,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAI0M,cAAcyF,WAAa,uBAK3L7S,IAAMuE,KAAKpF,EAAW,uBAClB,CAAC6G,KAAMpG,KAAKP,MAAMsM,aAClB,CACIzL,QAAS,CACL,cAAiB,UAAYR,IAAOC,KAAK,YAGnDQ,MAAK,SAACK,GACJ,EAAKnB,MAAMyT,QAAQ,EAAKzT,MAAMsM,YAAanL,EAASF,KAAKI,KACJ,IAAjD,EAAKrB,MAAMsM,YAAY/E,UAAU4K,KAAKuB,QAAoB9T,OAAOwT,QAAQ,gDAAkD,EAAKpT,MAAMsM,YAAYzC,MAAMrG,WAAa,IAAM,EAAKxD,MAAMsM,YAAYzC,MAAM2C,UAAY,OAAS,EAAKxM,MAAMsM,YAAY/E,UAAUC,OAC9P,EAAKxH,MAAM2T,aACX,EAAKnT,SAAS,CAACuS,eAAgB,MAE/B,EAAK/S,MAAMmT,YAEX,EAAKnT,MAAMoF,QAAQC,KAAK,qB,iCAM7BuO,GACP,GAAIA,GAAa,GAAKrT,KAAK2S,WAAY,CACnC,IAAIW,EAAgBtT,KAAKN,MAAM8S,eAAiBa,EAE5CC,EAAgB,IAAGA,EAAgB,GAGnCA,EAAgB,IAAGA,EAAgB,GAEvCtT,KAAKC,SAAS,CAACuS,eAAgBc,EAAeb,cAAe,UAE7D/O,SAAS6P,KAAKC,UAAY,EAC1B9P,SAAS+P,gBAAgBD,UAAY,I,iCAKzC,OAAQxT,KAAKN,MAAM8S,gBACf,KAAK,EACD,OAAQ,kBAAC,GAAD,MACZ,KAAK,EACD,OAAQ,kBAAC,GAAD,MACZ,KAAK,EACD,OAAQ,kBAAC,GAAD,MACZ,KAAK,EACD,OAAQ,kBAAC,GAAD,MACZ,QACI,OAAQ,kBAAC,GAAD,S,iCAKhB,OAAQxS,KAAKN,MAAM8S,gBACf,KAAK,EAED,MAAwC,KAApCxS,KAAKP,MAAMsM,YAAYzC,MAAMxI,KAC7Bd,KAAKC,SAAS,CAACwS,cAAe,4BACvB,GAGf,KAAK,EAED,IAAMxL,EAAOC,IAAOlH,KAAKP,MAAMsM,YAAY/E,UAAUC,KAAM,cAC3D,MAA8C,KAA1CjH,KAAKP,MAAMsM,YAAY/E,UAAUC,MACjCjH,KAAKC,SAAS,CAACwS,cAAe,0CACvB,GACAxL,EAAK6C,SAAS5C,MAAS+I,IAAI,IAAK,UACvCjQ,KAAKC,SAAS,CAACwS,cAAe,6EACvB,GACAxL,EAAKgB,QAAQf,MAAS+I,IAAI,IAAK,UACtCjQ,KAAKC,SAAS,CAACwS,cAAe,mFACvB,GACCzS,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOsB,YAGxC3I,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQe,YAGzC3I,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,QAGxCtH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,MAAQJ,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,KAAM,SAASwC,SAAS5C,IAAOlH,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,KAAM,aACtLtH,KAAKC,SAAS,CAACwS,cAAe,wDACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,sDACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,8DACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,4DACvB,GAYf,KAAK,EAED,MAAyC,KAArCzS,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAC9Bd,KAAKC,SAAS,CAACwS,cAAe,2CACvB,KACCzS,KAAKP,MAAMsM,YAAYlD,OAAOuJ,QAAQhB,aAC9CpR,KAAKC,SAAS,CAACwS,cAAe,+CACvB,GAGf,KAAK,EAEL,QACI,OAAO,K,+BAIT,IAAD,OACL,OACI,kBAACrR,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACxBtM,KAAKN,MAAM+S,cAAgB,kBAACnN,EAAA,EAAD,CAAO7C,QAAQ,UAAUzC,KAAKN,MAAM+S,eAAyB,KACxFzS,KAAK0T,WACN,kBAACxO,EAAA,EAAD,CAAKhE,MAAO,CACR8B,UAAW,SACXoJ,SAAU,QACVuH,KAAM,IACNC,OAAQ,IACRpI,OAAQ,OACR9I,MAAO,SAEP,kBAACI,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACmC,IAA9B9C,KAAKN,MAAM8S,eACR,kBAACtP,EAAA,EAAD,CAAQT,QAAQ,OAAOsP,SAAwC,IAA9B/R,KAAKN,MAAM8S,eAAsB9L,KAAK,KAAK5F,GAAG,cACvEqC,QAAS,WACL,EAAK0Q,YAAY,KAF7B,QAME,MAEV,kBAAC/Q,EAAA,EAAD,KA5JH,IA6JQ9C,KAAKN,MAAM8S,eACR,kBAACtP,EAAA,EAAD,CAAQ6O,SA9JnB,IA8J6B/R,KAAKN,MAAM8S,eAA6B9L,KAAK,KAAK5F,GAAG,sBAC/DqC,QAAS,WACL,EAAKuP,iBAFjB,eAME,MAEV,kBAAC5P,EAAA,EAAD,KAtKH,IAuKQ9C,KAAKN,MAAM8S,eACR,kBAACtP,EAAA,EAAD,CAAQT,QAAQ,OAAOiE,KAAK,KAAK5F,GAAG,cAAcqC,QAAS,WACvD,EAAK0Q,WAAW,KADpB,QAKE,MAEV,kBAAC/Q,EAAA,EAAD,Y,GA7KInB,aAwMTC,gBApBS,SAAAlC,GAAK,MAAK,CAC9BqM,YAAarM,EAAMqM,YACnBc,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,CACpCoR,QAAS,SAACnR,EAAMjB,GAAP,OAAcgB,EAAS,CAC5BE,KAAM,WACNC,QAAQ,eAAKF,EAAN,CAAYjB,GAAIA,OAE3B8R,UAAW,kBAAM9Q,EAAS,CACtBE,KAAM,oBACNC,QAAS,QAEbmR,WAAY,kBAAMtR,EAAS,CACvBE,KAAM,oBACNC,QAAS,WAIFL,CAA6C2Q,IC5MtDuB,G,YACF,WAAYrU,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyN,YAAa,IAEvB,EAAKlJ,aAAe,EAAKA,aAAaC,KAAlB,gBALC,E,0EAaTM,GACNxE,KAAKC,SAAS,CAACkN,YAAa3I,EAAMC,OAAOC,U,+BAQnC,IAAD,OACL,OACI,kBAACtD,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAK8C,GAAI,GAAG,kBAACL,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAG,SAASgF,YAAY,SAASC,SAAU/F,KAAKiE,gBACxF,kBAACnB,EAAA,EAAD,CAAK8C,GAAI,IAET,kBAAC9C,EAAA,EAAD,CAAK8C,GAAI,IACT,kBAAC9C,EAAA,EAAD,CAAK8C,GAAI,GACL,kBAAC1C,EAAA,EAAD,CAAQpC,GAAG,kBAAkBqC,QAAS,WAAO,EAAK1D,MAAMsU,oBAAqB,EAAKtU,MAAMoF,QAAQC,KAAK,wBAArG,cAKR,6BACA,kBAACI,EAAA,EAAD,KAAK,kBAACpC,EAAA,EAAD,KACD,kBAAC,GAAD,CAAcqK,YAAanN,KAAKN,MAAMyN,YAAaL,KAAK,e,GAvCrDnL,aA6DRC,gBAbS,SAAAlC,GAAK,MAAK,MAMP,SAAAoC,GAAQ,MAAK,CACpCiS,kBAAmB,kBAAMjS,EAAS,CAC9BE,KAAM,uBACNC,QAAS,WAIFL,CAA6CkS,ICjEtDE,I,mBACF,WAAYvU,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTuU,kBAAmB,IAEvB,EAAKhQ,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAK0L,aAAe,GACpB,EAAK3E,OAAS,EAAKA,OAAO/G,KAAZ,gBACd,EAAK4L,eAAiB,EAAKA,eAAe5L,KAApB,gBATP,E,0EAYNM,GACT,IAAI1D,EAAK0D,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GAAGsB,QAAQ,QAAS,IACpDkD,EAAQ1N,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GACvC,OAAQwE,GACJ,IAAK,eACDlS,KAAKP,MAAMyU,mBAAmB,YAAapT,EAAK,gBAAiB0D,EAAMC,OAAOC,OAC9E,MACJ,QACI1E,KAAKP,MAAMyU,mBAAmB,YAAapT,EAAK,IAAMoR,EAAO1N,EAAMC,OAAOC,U,6BAK/EkL,EAAcxC,GACjBpN,KAAK4P,aAAaxC,GAASwC,I,qCAGhBxC,GACX,IAAI+G,EAAgB,EACpB,GAAgC,MAA5BnU,KAAK4P,aAAaxC,GAAgB,CAClCA,GAAgB,EAChB,IAAMmD,EAAQvQ,KAAK4P,aAAaxC,EAAQ,GAAGoD,WAC3CxQ,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,gBAAgBmD,EAAMG,mBAHvC,2BAIlC,YAAwBH,EAAM6D,mBAA9B,+CAAkD,CAAC,IAAxCC,EAAuC,QAC1CA,EAAUC,MAAMC,SAAS,kBACzBJ,EAAgBE,EAAUG,UAC1BxU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,iBAAkBiH,EAAUG,YACxEH,EAAUC,MAAMC,SAAS,SAChCvU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,UAAnD,UAAiE+G,EAAjE,YAAkFE,EAAUI,aACrFJ,EAAUC,MAAMC,SAAS,YAChCvU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,QAASiH,EAAUI,YAC/DJ,EAAUC,MAAMC,SAAS,+BAChCvU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,SAAUiH,EAAUI,YAChEJ,EAAUC,MAAMC,SAAS,gBAChCvU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,OAAQiH,EAAUI,aAf3C,kFAkB9BlE,EAAME,SAASnR,WACfU,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,OAAQmD,EAAME,SAASnR,SAASsJ,OACnF5I,KAAKP,MAAMyU,mBAAmB,YAAa9G,EAAQ,OAAQmD,EAAME,SAASnR,SAASoM,aAMvFxB,QAAQC,IAAI,qC,6CAII,IAAD,OACfoJ,EAAO,GACPnG,EAAQ,EAEZ,IAAK,IAAIU,KAD2B,IAAhC9N,KAAKP,MAAMiP,UAAUf,QAAc4F,EAAKzO,KAAK,wBAAI2B,IAAK,WAC5CzG,KAAKP,MAAMiP,UACrB6E,EAAKzO,KACD,kBAACzD,EAAA,EAAKE,KAAN,CAAWkF,IAAK2G,GACZ,kBAAClI,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,QAAStH,YAAY,mBAC3CC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO2D,QACnF,kBAACjO,EAAA,EAAD,CAAK8C,GAAI,EAAG8O,GAAI,GACS,UAApB1U,KAAKP,MAAMqN,KACZ,kBAAC5J,EAAA,EAAD,CAAQpC,GAAIsM,EAAO3K,QAAQ,SAASU,QAAS,SAAC4L,GAAD,OAAO,EAAKtP,MAAMkV,cAAc5F,EAAEtK,OAAO3D,MAAtF,kBAGE,OAIV,kBAACoE,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAAG,oDACjC,kBAAC5R,EAAA,EAAD,KACI,kBAAC,IAAD,CACImI,OAAQ,SAAC2E,GACL,EAAK3E,OAAO2E,EAAcxC,IAE9B0C,eAAgB,kBAAM,EAAKA,eAAe1C,KAE1C,kBAAC7H,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,gBAAiBtH,YAAY,cACnDC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAOwC,kBAI1F,kBAAC1K,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,mBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,UACtBwH,UAAQ,EACR9O,YAAY,kCAAkCC,SAAU/F,KAAKiE,aAC7DS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO0D,UACtD,kBAACvL,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,mBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,UAAWtH,YAAY,6BAC7CC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAOyH,WAE1D,kBAAC3P,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,SACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,QAAStH,YAAY,WAC3C8O,UAAQ,EACR7O,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO0H,QACnF,kBAACvP,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,UACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,SAAUtH,YAAY,YAC5C8O,UAAQ,EACR7O,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO1N,SACtD,kBAAC6F,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,QACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,QAAUsM,EAAQ,OAAQtH,YAAY,UAC1C8O,UAAQ,EACR7O,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO2H,QAEvF,kBAAC7P,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,yBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,WAAWuP,KAAM,EAAGlU,GAAI,QAAUsM,EAAQ,wBAC7CtH,YAAY,iIACZC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMiP,UAAUtB,GAAO6H,2BAK9D7H,IAAUpN,KAAKP,MAAMiP,UAAUf,OAAO,GAAG4F,EAAKzO,KAAK,wBAAI2B,IAAK2G,EAAQ,YAExEA,IAEJ,OAAOmG,I,+BAGD,IAAD,OACL,OACI,kBAAClS,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACyB,UAApBtB,KAAKP,MAAMqN,KACR,wBAAI5L,MAAO,CAACgU,MAAO,SAAnB,oBAEA,wBAAIhU,MAAO,CAACgU,MAAO,SAAnB,WAEiB,UAApBlV,KAAKP,MAAMqN,KACZ,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAK1D,MAAM0V,eAA1E,eAGE,MAELnV,KAAKoV,uBACN,4BAAK,U,GA3JSzT,cAqMfC,gBApCS,SAAAlC,GAAK,MAAK,CAC9BgP,UAAWhP,EAAM2V,eAAe3G,UAChCd,UAAWlO,EAAM2V,eAAezH,cAGT,SAAA9L,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,MAGfyQ,WAAY,kBAAMrT,EAAS,CACvBE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,cACJ4D,MAAO,SAGfiQ,cAAe,SAAC7T,GAAD,OAAQgB,EAAS,CAC5BE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,iBACJ4D,MAAO5D,MAGfwU,cAAe,kBAAMxT,EAAS,CAC1BE,KAAM,iBACNC,QAAS,WAIFL,CAA6CoS,ICpMtDuB,G,YACF,WAAY9V,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAONM,GACDA,EAAMC,OAAO3D,GAEbd,KAAKP,MAAMyU,mBAAmB,oBAAqB1P,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAO,IAAKxK,EAAMC,OAAOC,S,+BAM5G,OACI,kBAACrD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,sBAEJ,kBAAC7T,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,aAAaC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBvS,eAErI,kBAACiC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,cACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBgF,YAAY,YAAYC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBvJ,cAEnI,kBAAC/G,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,UACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,YAAYgF,YAAY,gBAAgBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBC,UAEnI,kBAACvQ,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBgF,YAAY,eAAeC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBxC,iBAEzI,kBAAC9N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,aAAaC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBvC,eAErI,kBAAC/N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,6BACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,8BAA8BiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkB1C,yBAC7H,4BAAQpO,MAAM,GAAGkM,MAAM,KACvB,4BAAQlM,MAAM,QAAQkM,MAAM,UAC5B,4BAAQlM,MAAM,SAASkM,MAAM,iBAC7B,4BAAQlM,MAAM,OAAOkM,MAAM,kBAGnC,kBAAC1L,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBgF,YAAY,eAAeC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+V,kBAAkBE,uB,GAtD1H/T,aA8EpBC,gBAhBS,SAAAlC,GAAK,MAAK,CAC9B8V,kBAAmB9V,EAAM2V,eAAeG,kBACxC5H,UAAWlO,EAAM2V,eAAezH,cAGT,SAAA9L,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,SAKJ9C,CAA6C2T,ICjFtDI,G,YACF,WAAYlW,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,iFASVlE,KAAKP,MAAMkB,YACZX,KAAKP,MAAMyU,mBAAmB,gBAAiB,qBAAsBlU,KAAKP,MAAMmW,oB,mCAI9EpR,GACN,OAAQA,EAAMC,OAAO3D,IACjB,IAAK,eAEDd,KAAKP,MAAMyU,mBAAmB,gBAAiB1P,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAQ,IAAK6G,MAAMC,KAAKtR,EAAMC,OAAOsR,iBAAiB/I,KAAI,SAACgJ,GAC9H,OAAOA,EAAEtR,UAEb,MACJ,IAAK,yBAGL,QACI1E,KAAKP,MAAMyU,mBAAmB,gBAAiB1P,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAQ,IAAKxK,EAAMC,OAAOC,U,uCAK3F,IAAD,OAQb,OANemC,OAAOkD,KAAK/J,KAAKP,MAAMwW,UACnBjJ,KAAI,SAACkJ,GACpB,OACI,4BAAQzP,IAAK,EAAKhH,MAAMwW,SAASC,GAAGpV,GAAI4D,MAAO,EAAKjF,MAAMwW,SAASC,GAAGpV,GAAI8P,MAAO,EAAKnR,MAAMwW,SAASC,GAAGC,oB,+BAOhH,OACI,6BACMnW,KAAKP,MAAM2W,QAuBb,KAvBuB,kBAAC,IAAMC,SAAP,KACnB,kBAAChV,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,gBAAgBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMmO,WAC7F,4BAAQlJ,MAAM,GAAGkM,MAAM,KACvB,4BAAQlM,MAAM,QAAQkM,MAAM,UAC5B,4BAAQlM,MAAM,SAASkM,MAAM,cAGrC,kBAAC1L,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,uBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,yBAAyBiF,SAAU/F,KAAKiE,aACvDS,MAAO1E,KAAKP,MAAMkB,YAChCX,KAAKsW,sBAKtB,8BAIJ,kBAACjV,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,wBAEJ,kBAAC7T,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,iBAAiBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcvK,eAErI,kBAACiC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,cACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBgF,YAAY,gBAAgBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcvB,cAEnI,kBAAC/G,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,6BACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,8BAA8BiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcsF,yBACzH,4BAAQpO,MAAM,GAAGkM,MAAM,KACvB,4BAAQlM,MAAM,QAAQkM,MAAM,UAC5B,4BAAQlM,MAAM,SAASkM,MAAM,iBAC7B,4BAAQlM,MAAM,OAAOkM,MAAM,kBAGnC,kBAAC1L,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,UACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,YAAYgF,YAAY,oBAAoBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAciI,UAEnI,kBAACvQ,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBgF,YAAY,mBAAmBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcwF,iBAEzI,kBAAC9N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,iBAAiBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcyF,eAErI,kBAAC/N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,uBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc0Q,UAAU,EAAM9Q,GAAG,SAAS3E,GAAG,eAAeiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM+N,cAAcgJ,UAE1H,4BAAQ9R,MAAM,UAAUkM,MAAM,YAC9B,4BAAQlM,MAAM,UAAUkM,MAAM,YAC9B,4BAAQlM,MAAM,SAASkM,MAAM,WAC7B,4BAAQlM,MAAM,UAAUkM,MAAM,YAC9B,4BAAQlM,MAAM,UAAUkM,MAAM,YAC9B,4BAAQlM,MAAM,SAASkM,MAAM,WAC7B,4BAAQlM,MAAM,SAASkM,MAAM,qB,GAlH5BjP,aAgJlBC,gBApBS,SAAAlC,GAAK,MAAK,CAC9B8N,cAAe9N,EAAM2V,eAAe7H,cACpCI,UAAWlO,EAAM2V,eAAezH,UAChCjN,WAAYjB,EAAM2V,eAAelG,mBACjCsH,cAAe/W,EAAM2V,eAAeY,SACpCA,SAAUvW,EAAMuW,SAChBL,iBAAkBlW,EAAMmC,SAASlB,eAGV,SAAAmB,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,SAKJ9C,CAA6C+T,IClJtDe,G,YACF,WAAYjX,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAONM,GACDA,EAAMC,OAAO3D,GAEbd,KAAKP,MAAMyU,mBAAmB,iBAAkB1P,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAO,IAAKxK,EAAMC,OAAOC,S,+BAMzG,OACI,kBAACrD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,2BAEJ,kBAAC7T,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,wBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBgF,YAAY,+BAA+BC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM8R,eAAeoF,cAEnJ,kBAACzR,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBgF,YAAY,+BAA+BC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM8R,eAAeC,iBAEtJ,kBAACtM,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAI8O,GAAI,GAA/B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,uBAAuBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM8R,eAAeqF,kBACnH,4BAAQlS,MAAM,GAAGkM,MAAM,KACvB,4BAAQlM,MAAM,MAAMkM,MAAM,QAC1B,4BAAQlM,MAAM,KAAKkM,MAAM,UAGjC,kBAAC1L,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,yBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,WAAWuP,KAAM,EAAGlU,GAAI,cAC1CgF,YAAY,6GACZC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAM8R,eAAeE,kB,GA5CzC9P,aAmELC,gBAfS,SAAAlC,GAAK,MAAK,CAC9B6R,eAAgB7R,EAAM2V,eAAe9D,mBAGd,SAAAzP,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,SAKJ9C,CAA6C8U,ICnEtDG,G,YACF,WAAYpX,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAONM,GACDA,EAAMC,OAAO3D,GAEbd,KAAKP,MAAMyU,mBAAmB,kBAAmB1P,EAAMC,OAAO3D,GAAGkO,QAAQ,UAAU,IAAKxK,EAAMC,OAAOC,S,+BAM7G,OACI,kBAACrD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKE,KAAN,KACA,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,gBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAI,iBAAkBgF,YAAY,kBAAkBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMqX,gBAAgBC,kB,GAtBzIpV,aA6CdC,gBAfS,SAAAlC,GAAK,MAAK,CAC9BoX,gBAAiBpX,EAAM2V,eAAeyB,oBAGf,SAAAhV,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,SAKJ9C,CAA6CiV,IC1CtDG,G,YACF,WAAYvX,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAONM,GACT,IAAI1D,EAAK0D,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GAAGsB,QAAQ,OAAQ,IACnDkD,EAAQ1N,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GAG/B1N,KAAKP,MAAMyU,mBAAmB,WAAYpT,EAAG,IAAIoR,EAAO1N,EAAMC,OAAOC,S,6CAKzD,IAAD,OACf6O,EAAO,GACPnG,EAAQ,EAEZ,IAAK,IAAIU,KAD0B,IAA/B9N,KAAKP,MAAMuR,SAASrD,QAAc4F,EAAKzO,KAAK,wBAAI2B,IAAK,WAC3CzG,KAAKP,MAAMuR,SACrBuC,EAAKzO,KACD,kBAACzD,EAAA,EAAKE,KAAN,CAAWkF,IAAK2G,GACZ,yBAAKnI,UAAU,WACX,oDAEJ,kBAACC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,uBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,OAAOsM,EAAM,cAAetH,YAAY,iBAAiBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOgE,cAC/I,kBAACtO,EAAA,EAAD,CAAK8C,GAAI,EAAG8O,GAAI,GACZ,kBAACxR,EAAA,EAAD,CAAQpC,GAAIsM,EAAO3K,QAAQ,SAASU,QAAS,SAAC4L,GAAD,OAAO,EAAKtP,MAAMwX,cAAclI,EAAEtK,OAAO3D,MAAtF,oBAKR,kBAACoE,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAI,OAAOsM,EAAM,QAAStH,YAAY,WAAWC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAO+D,QACjJ,kBAAC5L,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,kBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,OAAOsM,EAAM,SAAUtH,YAAY,YAAYC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAO8J,UAEzI,kBAAChS,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,kBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,OAAOsM,EAAM,MAAOtH,YAAY,oBAAoBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAO8D,MAC1I,kBAAC3L,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,oBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAI,OAAOsM,EAAM,SAAUtH,YAAY,sBAAsBC,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAO+J,UAEjK,6BACA,yBAAKlS,UAAU,WACX,sDAEJ,kBAACC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,aACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,OAASsM,EAAQ,kBAAmBtH,YAAY,yBACpDC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOgK,kBACrD,kBAAC7R,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,kBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAI,OAASsM,EAAQ,gBAAiBtH,YAAY,oBAClDC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOiK,iBAEzD,kBAACnS,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,yBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAI,OAASsM,EAAQ,aACjCtH,YAAY,sBAAsBC,SAAU/F,KAAKiE,aACjDS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOkK,aACrD,kBAAC/R,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,oBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,SAASlB,GAAI,OAASsM,EAAQ,kBACnCtH,YAAY,sBAAsBC,SAAU/F,KAAKiE,aACjDS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOmK,mBAEzD,kBAACrS,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,4BACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAI,OAASsM,EAAQ,aACjCtH,YAAY,kCAAkCC,SAAU/F,KAAKiE,aAC7DS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOoK,cAEzD,kBAACtS,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,qBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,WAAWuP,KAAM,EAAGlU,GAAI,OAASsM,EAAQ,WAC5CtH,YAAY,GACZC,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMuR,SAAS5D,GAAOqE,cAK7DrE,IAAUpN,KAAKP,MAAMuR,SAASrD,OAAO,GAAG4F,EAAKzO,KAAK,wBAAI2B,IAAK2G,EAAQ,YAEvEA,IAEJ,OAAOmG,I,+BAGD,IAAD,OACL,OACI,kBAAClS,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,YACA,kBAAChS,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAM,SAAU/R,QAAS,kBAAM,EAAK1D,MAAMgY,eAAzE,gBAIHzX,KAAK0X,uBACN,4BAAK,U,GA1GY/V,aAgJlBC,gBAhCS,SAAAlC,GAAK,MAAK,CAC9BsR,SAAUtR,EAAM2V,eAAerE,SAC/BpD,UAAWlO,EAAM2V,eAAezH,cAGT,SAAA9L,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,MAGf+S,WAAY,kBAAM3V,EAAS,CACvBE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,cACJ4D,MAAO,SAGfuS,cAAe,SAACnW,GAAD,OAAQgB,EAAS,CAC5BE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,iBACJ4D,MAAO5D,SAKJc,CAA6CoV,IClJtDW,G,YACF,WAAYlY,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAONM,GACT,IAAI1D,EAAK0D,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GAAGsB,QAAQ,OAAQ,IACnDkD,EAAQ1N,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GAG/B1N,KAAKP,MAAMyU,mBAAmB,kBAAmBpT,EAAG,IAAIoR,EAAO1N,EAAMC,OAAOC,S,yCAKpE,IAAD,OACXkT,EAAY,GACZC,EAAaC,OAAO9X,KAAKP,MAAMuO,gBAAgBL,OAAO,GAC1D,IAAK,IAAIP,KAASpN,KAAKP,MAAMuO,gBACzB4J,EAAU9S,KACN,kBAACI,EAAA,EAAD,CAAKD,UAAU,UAAUwB,IAAK2G,GAC1B,kBAACtK,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAI,OAASsM,EAAQ,OAAQrH,SAAU/F,KAAKiE,aACxDS,MAAO1E,KAAKP,MAAMuO,gBAAgBZ,GAAOa,KACxD,4BAAQ2C,MAAM,SAASlM,MAAO,IAC9B,4BAAQkM,MAAM,SAASlM,MAAO,IAC9B,4BAAQkM,MAAM,UAAUlM,MAAO,IAC/B,4BAAQkM,MAAM,YAAYlM,MAAO,IACjC,4BAAQkM,MAAM,WAAWlM,MAAO,IAChC,4BAAQkM,MAAM,SAASlM,MAAO,IAC9B,4BAAQkM,MAAM,WAAWlM,MAAO,MAEpC,kBAACa,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,kBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAI,OAASsM,EAAQ,SAAUrH,SAAU/F,KAAKiE,aAC1DS,MAAO1E,KAAKP,MAAMuO,gBAAgBZ,GAAOc,SAC5D,kBAAC3I,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,gBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAI,OAASsM,EAAQ,OAAQrH,SAAU/F,KAAKiE,aACxDS,MAAO1E,KAAKP,MAAMuO,gBAAgBZ,GAAOe,OAC5D,kBAACrL,EAAA,EAAD,KAAK,kBAACI,EAAA,EAAD,CAAQT,QAAQ,SACRU,QAAS,SAAC4L,GAAD,OAAO,EAAKtP,MAAMsY,eAAehJ,EAAEtK,OAAO3D,MAD3D,aAITsM,IAAUyK,GAAYD,EAAU9S,KAAK,wBAAI2B,IAAK,SAAS2G,KAE/D,OAAOwK,I,+BAGD,IAAD,OACL,OACI,kBAACvW,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAO,SAAnB,mBACA,kBAAChS,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAK1D,MAAMuY,gBAA1E,sBAIJ,kBAAC3W,EAAA,EAAKE,KAAN,KACKvB,KAAKiY,oBAEV,4BAAK,U,GA7DWtW,aAkGjBC,gBA/BS,SAAAlC,GAAK,MAAK,CAC9BsO,gBAAiBtO,EAAM2V,eAAerH,oBAGf,SAAAlM,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,MAGfsT,YAAa,kBAAMlW,EAAS,CACxBE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,gBACJ4D,MAAO,SAGfqT,eAAgB,SAACjX,GAAD,OAAQgB,EAAS,CAC7BE,KAAM,eACNC,QAAS,CACLD,KAAM,KACNlB,GAAI,mBACJ4D,MAAO5D,SAKJc,CAA6C+V,IC9FtDO,G,YACF,WAAYzY,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,0EAMNM,GACDA,EAAMC,OAAO3D,GAEbd,KAAKP,MAAMyU,mBAAmB,YAAa1P,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAQ,IAAKxK,EAAMC,OAAOC,S,+BAMrG,OACI,kBAACrD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAO,SAAnB,sBAEJ,kBAAC7T,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,aAAaC,SAAU/F,KAAKiE,aAC5DS,MAAO1E,KAAKP,MAAM0Y,UAAUlV,eAEnD,kBAACiC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,cACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBgF,YAAY,YAAYC,SAAU/F,KAAKiE,aAC1DS,MAAO1E,KAAKP,MAAM0Y,UAAUlM,cAEnD,kBAAC/G,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,UACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,YAAYgF,YAAY,gBAAgBC,SAAU/F,KAAKiE,aAC1DS,MAAO1E,KAAKP,MAAM0Y,UAAU1C,UAEnD,kBAACvQ,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,iBACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBgF,YAAY,eAAeC,SAAU/F,KAAKiE,aAChES,MAAO1E,KAAKP,MAAM0Y,UAAUnF,iBAEnD,kBAAC9N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,eACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBgF,YAAY,aAAaC,SAAU/F,KAAKiE,aAC5DS,MAAO1E,KAAKP,MAAM0Y,UAAUlF,eAEnD,kBAAC/N,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACM,EAAA,EAAKG,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAG8O,GAAI,GAA9B,6BACA,kBAAC5R,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,8BAA8BiF,SAAU/F,KAAKiE,aAC5DS,MAAO1E,KAAKP,MAAM0Y,UAAUrF,yBAC3C,4BAAQpO,MAAM,GAAGkM,MAAM,KACvB,4BAAQlM,MAAM,QAAQkM,MAAM,UAC5B,4BAAQlM,MAAM,SAASkM,MAAM,iBAC7B,4BAAQlM,MAAM,OAAOkM,MAAM,wB,GAtDpBjP,aA+EpBC,gBAhBS,SAAAlC,GAAK,MAAK,CAC9ByY,UAAWzY,EAAM2V,eAAe8C,UAChCvK,UAAWlO,EAAM2V,eAAezH,cAGT,SAAA9L,GAAQ,MAAK,CACpCoS,mBAAoB,SAAClS,EAAMlB,EAAI4D,GAAX,OAAqB5C,EAAS,CAC9CE,KAAM,eACNC,QAAS,CACLD,KAAMA,EACNlB,GAAIA,EACJ4D,MAAOA,SAKJ9C,CAA6CsW,IC/DtDE,G,YACF,WAAY3Y,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT+S,cAAe,GACf4F,KAAM,GAEhB,EAAKpU,aAAe,EAAKA,aAAaC,KAAlB,gBACd,EAAKoU,qBAAuB,EAAKA,qBAAqBpU,KAA1B,gBAC5B,EAAK2P,WAAa,EAAKA,WAAW3P,KAAhB,gBARH,E,0EAWTM,M,iCAGC6O,GACP,GAAIA,GAAa,GAAKrT,KAAKsY,uBAAwB,CAC/C,IAAIhF,EAAgBtT,KAAKN,MAAM2Y,KAAOhF,EAElCC,EAAgB,IAAGA,EAAgB,GAGG,UAAtCtT,KAAKP,MAAM8Y,aAAa3K,WAAyB0F,EAxB/C,EAyBFA,EAzBE,EA0BKA,EA3BJ,IA4BHA,EA5BG,GA+BPtT,KAAKC,SAAS,CAACoY,KAAM/E,EAAeb,cAAe,UAEnD/O,SAAS+P,gBAAgBD,UAAY,I,qCAOzC,GAA0C,WAAtCxT,KAAKP,MAAM8Y,aAAa3K,UACxB,OAAO5N,KAAKN,MAAM2Y,MACd,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,CAAiBvL,KAAK,WACtC,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,WAIpB,OAAQ9M,KAAKN,MAAM2Y,MACf,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,CAAiBvL,KAAK,UACtC,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC,GAAD,MAChB,KAAK,EAAG,OAAQ,kBAAC0L,GAAD,S,oCAMd/C,GAEV,MADmB,4JACCgD,KAAKhD,K,0CAGTnF,GAEhB,MADyB,0CACCmI,KAAKnI,K,sCAGnByE,GAEZ,MADqB,wBACC0D,KAAK1D,K,6CAO3B,OAAQ/U,KAAKN,MAAM2Y,MACf,KAAK,EACD,IAAKrY,KAAKP,MAAM8Y,aAAa3K,UAEzB,OADA5N,KAAKC,SAAS,CAACwS,cAAe,0DACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa/K,cAAcvK,WAE9C,OADAjD,KAAKC,SAAS,CAACwS,cAAe,sDACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa/K,cAAcvB,UAE9C,OADAjM,KAAKC,SAAS,CAACwS,cAAe,oDACvB,EAEX,OAAQzS,KAAKP,MAAM8Y,aAAa/K,cAAcsF,yBAC1C,IAAK,QACD,IAAK9S,KAAK0Y,cAAc1Y,KAAKP,MAAM8Y,aAAa/K,cAAciI,OAE1D,OADAzV,KAAKC,SAAS,CAACwS,cAAe,+DACvB,EAEX,MACJ,IAAK,SACD,IAAKzS,KAAK2Y,oBAAoB3Y,KAAKP,MAAM8Y,aAAa/K,cAAcwF,cAEhE,OADAhT,KAAKC,SAAS,CAACwS,cAAe,oFACvB,EAEX,MACJ,IAAK,OACD,IAAKzS,KAAK2Y,oBAAoB3Y,KAAKP,MAAM8Y,aAAa/K,cAAcyF,YAEhE,OADAjT,KAAKC,SAAS,CAACwS,cAAe,gFACvB,EAEX,MACJ,QAEI,OADAzS,KAAKC,SAAS,CAACwS,cAAe,8EACvB,EAEf,OAA8D,IAA1DzS,KAAKP,MAAM8Y,aAAa/K,cAAcgJ,SAAS7I,SAC/C3N,KAAKC,SAAS,CAACwS,cAAe,kDACvB,GAGf,KAAK,EACD,GAA0C,UAAtCzS,KAAKP,MAAM8Y,aAAa3K,UAAuB,CAE/C,IADA,IAAIgL,EAAgB,IAAIC,IACf9K,EAAI,EAAGA,EAAI/N,KAAKP,MAAM8Y,aAAa7J,UAAUf,OAAQI,IAAK,CAC/D,GAAI6K,EAAcvO,IAAIrK,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAGgD,MAGvD,OAFA/Q,KAAKC,SAAS,CAACwS,cAAe,kEAC9BmG,EAAcE,SACP,EACJ,IAAK9Y,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAGgD,KAE7C,OADA/Q,KAAKC,SAAS,CAACwS,cAAe,2DACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAG+C,OAE7C,OADA9Q,KAAKC,SAAS,CAACwS,cAAe,wDACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAG+G,KAE7C,OADA9U,KAAKC,SAAS,CAACwS,cAAe,0CACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAGrO,MAE7C,OADAM,KAAKC,SAAS,CAACwS,cAAe,4CACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAGgH,IAE7C,OADA/U,KAAKC,SAAS,CAACwS,cAAe,kDACvB,EAEXmG,EAAc3I,IAAIjQ,KAAKP,MAAM8Y,aAAa7J,UAAUX,GAAGgD,MAG3D,OADA6H,EAAcE,SACP,EAEN,MAA0C,WAAtC9Y,KAAKP,MAAM8Y,aAAa3K,YACxB5N,KAAKP,MAAM8Y,aAAa7J,UAAU,GAAGqC,KAG9B/Q,KAAKP,MAAM8Y,aAAa7J,UAAU,GAAGoC,OAGrC9Q,KAAKP,MAAM8Y,aAAa7J,UAAU,GAAGoG,KAGrC9U,KAAKP,MAAM8Y,aAAa7J,UAAU,GAAGhP,QAGrCM,KAAK+Y,gBAAgB/Y,KAAKP,MAAM8Y,aAAa7J,UAAU,GAAGqG,OAClE/U,KAAKC,SAAS,CAACwS,cAAe,kDACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,4CACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,0CACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,wDACvB,IAJPzS,KAAKC,SAAS,CAACwS,cAAe,2DACvB,IAiBnB,KAAK,EACD,IAAKzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBvS,WAE3C,OADAjD,KAAKC,SAAS,CAACwS,cAAe,sDACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBvJ,UAElD,OADAjM,KAAKC,SAAS,CAACwS,cAAe,oDACvB,EACJ,GAAIzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBC,OACjD,IAAKzV,KAAK0Y,cAAc1Y,KAAKP,MAAM8Y,aAAa/C,kBAAkBC,OAE9D,OADAzV,KAAKC,SAAS,CAACwS,cAAe,+DACvB,MAER,KAAKzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBvC,aAAejT,KAAKP,MAAM8Y,aAAa/C,kBAAkBxC,aAE3G,OADAhT,KAAKC,SAAS,CAACwS,cAAe,0DACvB,EACJ,GAAIzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBvC,YACjD,IAAKjT,KAAK2Y,oBAAoB3Y,KAAKP,MAAM8Y,aAAa/C,kBAAkBvC,YAEpE,OADAjT,KAAKC,SAAS,CAACwS,cAAe,gFACvB,OAER,GAAIzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBxC,cACjD,IAAKhT,KAAK2Y,oBAAoB3Y,KAAKP,MAAM8Y,aAAa/C,kBAAkBxC,cAEpE,OADAhT,KAAKC,SAAS,CAACwS,cAAe,oFACvB,OAER,IAAKzS,KAAKP,MAAM8Y,aAAa/C,kBAAkBE,aAElD,OADA1V,KAAKC,SAAS,CAACwS,cAAe,0DACvB,EAEX,OAAO,EACX,KAAK,EACD,GAA0C,UAAtCzS,KAAKP,MAAM8Y,aAAa3K,UACxB,OAAO,EAEN,GAA0C,WAAtC5N,KAAKP,MAAM8Y,aAAa3K,UAAwB,CAErD,IADA,IAAIoL,EAAiB,IAAIH,IAChB9K,EAAI,EAAGA,EAAI/N,KAAKP,MAAM8Y,aAAavH,SAASrD,OAAQI,IAAK,CAC9D,GAAIiL,EAAe3O,IAAIrK,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGmD,IAGvD,OAFAlR,KAAKC,SAAS,CAACwS,cAAe,oEAC9BuG,EAAeF,SACR,EACJ,IAAK9Y,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGqD,WAE5C,OADApR,KAAKC,SAAS,CAACwS,cAAe,sEACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGoD,KAE5C,OADAnR,KAAKC,SAAS,CAACwS,cAAe,0DACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGmJ,MAE5C,OADAlX,KAAKC,SAAS,CAACwS,cAAe,2DACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGmD,GAE5C,OADAlR,KAAKC,SAAS,CAACwS,cAAe,4DACvB,EACJ,GAAkD,IAA9CzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGoJ,MAE3C,OADAnX,KAAKC,SAAS,CAACwS,cAAe,wDACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGqJ,eAE5C,OADApX,KAAKC,SAAS,CAACwS,cAAe,uEACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGsJ,aAE5C,OADArX,KAAKC,SAAS,CAACwS,cAAe,mEACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGuJ,UAE5C,OADAtX,KAAKC,SAAS,CAACwS,cAAe,qFACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGwJ,eAE5C,OADAvX,KAAKC,SAAS,CAACwS,cAAe,oEACvB,EACJ,IAAKzS,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGyJ,UAE5C,OADAxX,KAAKC,SAAS,CAACwS,cAAe,iEACvB,EAEXuG,EAAe/I,IAAIjQ,KAAKP,MAAM8Y,aAAavH,SAASjD,GAAGmD,IAG3D,OADA8H,EAAeF,SACR,EAEX,OAAO,EACX,KAAK,EACD,GAA0C,UAAtC9Y,KAAKP,MAAM8Y,aAAa3K,UACxB,QAAK5N,KAAKP,MAAM8Y,aAAahH,eAAeqF,mBACxC5W,KAAKC,SAAS,CAACwS,cAAe,iEACvB,GAIV,GAA0C,WAAtCzS,KAAKP,MAAM8Y,aAAa3K,UAAwB,CACrD,IAAK,IAAIG,EAAI,EAAGA,EAAI/N,KAAKP,MAAM8Y,aAAavK,gBAAgBL,OAAQI,IAChE,GAAI/N,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGG,OAC3C,IAAKlO,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGI,KAAOjH,IAAOlH,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGG,MAAO,SAASjG,QAAQf,IAAOlH,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGI,IAAK,UAEpL,OADAnO,KAAKC,SAAS,CAACwS,cAAe,oEACvB,OAER,GAAIzS,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGI,MAC7CnO,KAAKP,MAAM8Y,aAAavK,gBAAgBD,GAAGG,MAE5C,OADAlO,KAAKC,SAAS,CAACwS,cAAe,sDACvB,EAInB,OAAO,EAEX,OAAO,EACX,KAAK,EACD,MAA0C,WAAtCzS,KAAKP,MAAM8Y,aAAa3K,cACnB5N,KAAKP,MAAM8Y,aAAazB,gBAAgBC,UACzC/W,KAAKC,SAAS,CAACwS,cAAe,uDACvB,IAKnB,QACI,OAAO,K,qCAIH,IAAD,OACPzS,KAAKsY,wBAA0BjZ,OAAOwT,QAAQ,sDAAwD7S,KAAKP,MAAM8Y,aAAa/K,cAAcvK,WAAa,IAAMjD,KAAKP,MAAM8Y,aAAa/K,cAAcvB,UAAY,MACjN7L,IAAMuE,KAAKpF,EAAW,uBAAwB,CAACwC,KAAM/B,KAAKP,MAAM8Y,cAAe,CAC3EjY,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJ,EAAKnB,MAAMwZ,QAAQ,EAAKxZ,MAAM8Y,aAAc3X,EAASF,KAAKI,IAC1D,EAAKrB,MAAMsU,oBAEX,EAAKtU,MAAMoF,QAAQC,KAAK,kB,+BAK1B,IAAD,OACL,OACI,kBAAC1D,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACxBtM,KAAKN,MAAM+S,cAAgB,kBAACnN,EAAA,EAAD,CAAO7C,QAAQ,UAAUzC,KAAKN,MAAM+S,eAAyB,KACxFzS,KAAKkZ,eACN,6BACA,kBAAChU,EAAA,EAAD,CAAKhE,MAAO,CACR8B,UAAW,SACXoJ,SAAU,QACVuH,KAAM,IACNC,OAAQ,IACRpI,OAAQ,OACR9I,MAAO,SAEP,kBAACI,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQT,QAAQ,OAAOiE,KAAK,KAAK5F,GAAG,cAC5BiR,SAA+B,IAApB/R,KAAKN,MAAM2Y,KACtBlV,QAAS,WAAO,EAAK0Q,YAAY,KAFzC,SAMJ,kBAAC/Q,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQwD,KAAK,KAAK5F,GAAG,oBACbiR,SAAiD,UAAtC/R,KAAKP,MAAM8Y,aAAa3K,WArUjD,IAqU0E5N,KAAKN,MAAM2Y,MAA8D,WAAtCrY,KAAKP,MAAM8Y,aAAa3K,WAtUpI,IAsU8J5N,KAAKN,MAAM2Y,KAC5JlV,QAAS,WAAO,EAAKuP,iBAF7B,WAMJ,kBAAC5P,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQT,QAAQ,OAAOiE,KAAK,KAAK5F,GAAG,cAC5BiR,SAAiD,UAAtC/R,KAAKP,MAAM8Y,aAAa3K,WA5UjD,IA4U0E5N,KAAKN,MAAM2Y,MAA8D,WAAtCrY,KAAKP,MAAM8Y,aAAa3K,WA7UpI,IA6U8J5N,KAAKN,MAAM2Y,KAC5JlV,QAAS,WAAO,EAAK0Q,WAAW,KAFxC,SAMJ,kBAAC/Q,EAAA,EAAD,OAEJ,kC,GAjVOnB,aAsWRC,gBAfS,SAAAlC,GAAK,MAAK,CAC9B6Y,aAAc7Y,EAAM2V,mBAGG,SAAAvT,GAAQ,MAAK,CACpCmX,QAAS,SAAClX,EAAMjB,GAAP,OAAcgB,EAAS,CAC5BE,KAAM,WACNC,QAAQ,eAAKF,EAAN,CAAYjB,GAAIA,OAE3BiT,kBAAmB,kBAAMjS,EAAS,CAC9BE,KAAM,uBACNC,QAAS,WAIFL,CAA6CwW,I,SC/WtDe,GAAM,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAQzEC,G,YACF,WAAY3Z,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT2Z,SAAU,eACVvM,KAAM,QAEV,EAAK+G,WAAa,EAAKA,WAAW3P,KAAhB,gBAClB,EAAKoV,WAAa,EAAKA,WAAWpV,KAAhB,gBAPH,E,wEAeRmU,GACPrY,KAAKC,SAAS,CAACoZ,SAAUhB,M,mCASzB,OAAQrY,KAAKN,MAAM2Z,UACf,IAAK,eACD,GAAwB,SAApBrZ,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAAC,+BACpB,4BACI,0CAAmB,4BAAKtP,KAAKP,MAAMsC,KAAKyL,cAAcvK,aAE1D,4BACI,yCACA,4BAAKjD,KAAKP,MAAMsC,KAAKyL,cAAcvB,YAEvC,4BACI,qCACA,4BAAKjM,KAAKP,MAAMsC,KAAKyL,cAAciI,QAEvC,4BACI,0CACA,4BAAKzV,KAAKP,MAAMsC,KAAKyL,cAAcyF,aAEvC,4BACI,4CACA,4BAAKjT,KAAKP,MAAMsC,KAAKyL,cAAcwF,eAEvC,4BACI,uDACA,4BAAKhT,KAAKP,MAAMsC,KAAKyL,cAAcsF,wBAAwB9D,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,mBAErF,4BACI,wCACA,4BAAKlP,KAAKP,MAAMsC,KAAKyL,cAAcgJ,SAASxJ,KAAI,SAACuM,GAC7C,OAAOA,EAAEvK,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,iBAAiB,UAGxD,4BACI,sCACA,4BAAKlP,KAAKP,MAAMsC,KAAKpC,OAAOqP,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,qBAK3D,GAAwB,SAApBlP,KAAKN,MAAMoN,KAClB,OAAO,kBAAC,GAAD,CAAIsJ,SAAS,IAExB,MACJ,IAAK,YACD,GAAwB,SAApBpW,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAClBtP,KAAKP,MAAMsC,KAAKoW,UACb,+BACA,4BACI,0CACA,4BAAKnY,KAAKP,MAAMsC,KAAKoW,UAAUlV,aAEnC,4BACI,yCACA,4BAAKjD,KAAKP,MAAMsC,KAAKoW,UAAUlM,YAEnC,4BACI,qCACA,4BAAKjM,KAAKP,MAAMsC,KAAKoW,UAAU1C,QAEnC,4BACI,0CACA,4BAAKzV,KAAKP,MAAMsC,KAAKoW,UAAUlF,aAEnC,4BACI,4CACA,4BAAKjT,KAAKP,MAAMsC,KAAKoW,UAAUnF,eAEnC,4BACI,uDACA,4BAAKhT,KAAKP,MAAMsC,KAAKoW,UAAUrF,wBAAwB9D,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,oBAG/E,MAGX,GAAwB,SAApBlP,KAAKN,MAAMoN,KAClB,OAAO,kBAAC,GAAD,MAEX,MACJ,IAAK,YACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GACnB,+BACA,4BACI,0CACA,4BAAKtP,KAAKP,MAAMsC,KAAKyT,kBAAkBvS,aAE3C,4BACI,yCACA,4BAAKjD,KAAKP,MAAMsC,KAAKyT,kBAAkBvJ,YAE3C,4BACI,qCACA,4BAAKjM,KAAKP,MAAMsC,KAAKyT,kBAAkBC,QAE3C,4BACI,0CACA,4BAAKzV,KAAKP,MAAMsC,KAAKyT,kBAAkBvC,aAE3C,4BACI,4CACA,4BAAKjT,KAAKP,MAAMsC,KAAKyT,kBAAkBxC,eAE3C,4BACI,sDACA,4BAAKhT,KAAKP,MAAMsC,KAAKyT,kBAAkB1C,wBAAwB9D,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,qBAK9F,GAAwB,SAApBlP,KAAKN,MAAMoN,KAClB,OAAO,kBAAC,GAAD,MAEX,MACJ,IAAK,WACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI9M,KAAKP,MAAMsC,KAAKiP,SAAShE,KAAI,SAACiE,GAC1B,OACI,kBAAC,IAAMoF,SAAP,CAAgB5P,IAAKwK,EAAIC,GAAGD,EAAIG,YAAY,kBAAChC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAAC,+BAChE,4BACI,wBAAIkK,QAAQ,KAAKvI,EAAIE,KAAO,IAAMF,EAAIG,aAE1C,4BACI,0CACA,4BAAKH,EAAIG,aAEb,4BACI,oCACA,4BAAKH,EAAIE,OAEb,4BACI,qCACA,4BAAKF,EAAIiG,QAEb,4BACI,6CACA,4BAAKjG,EAAIC,KAEb,4BACI,+CACA,4BAAKD,EAAIkG,QAGb,4BACI,wBAAIqC,QAAQ,KAAZ,cAEJ,4BACI,uCACA,4BAAKvI,EAAImG,iBAEb,4BACI,6CACA,4BAAKnG,EAAIoG,eAEb,4BACI,+CACA,4BAAKpG,EAAIsG,iBAEb,4BACI,oDACA,4BAAKtG,EAAIqG,YAEb,4BACI,+CACA,4BAAKrG,EAAIuG,YAEb,4BACI,gDACA,4BAAKvG,EAAIQ,YAGjB,iCAIT,GAAwB,SAApBzR,KAAKN,MAAMoN,KACnB,OAAO,kBAAC,GAAD,MAEV,MACJ,IAAK,WACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GACvB,+BACI,4BACI,mCACA,0CACA,0CAGR,+BACCtP,KAAKP,MAAMsC,KAAKiM,gBAAgBhB,KAAI,SAACnM,GAClC,OACI,wBAAI4F,IAAK5F,EAAKoN,IAAIpN,EAAKqN,MAAMrN,EAAKsN,KAC9B,4BAAKgL,GAAItY,EAAKoN,MACd,4BAAKpN,EAAKqN,OACV,4BAAKrN,EAAKsN,WAMvB,GAAwB,SAApBnO,KAAKN,MAAMoN,KACnB,OAAO,kBAAC,GAAD,MAEV,MACJ,IAAK,UACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAAC,+BACpB,4BACI,4CAAqB,4BAAKtP,KAAKP,MAAMsC,KAAK+U,gBAAgBC,YAInE,GAAwB,SAApB/W,KAAKN,MAAMoN,KACnB,OAAO,kBAAC,GAAD,MAEV,MACJ,IAAK,YACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI9M,KAAKP,MAAMsC,KAAK2M,UAAU1B,KAAI,SAAC6D,GAC3B,OACI,kBAAC,IAAMwF,SAAP,CAAgB5P,IAAKoK,EAAIE,KAAKF,EAAIC,QAAQ,kBAAC1B,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAAC,+BAC9D,4BACI,wBAAIkK,QAAQ,KAAK3I,EAAIE,OAEzB,4BACI,sCACA,4BAAKF,EAAIC,SAEb,4BACI,sCACA,4BAAKD,EAAIgE,SAEb,4BACI,oCACA,4BAAKhE,EAAIiE,OAEb,4BACI,qCACA,4BAAKjE,EAAInR,QAEb,4BACI,mCACA,4BAAKmR,EAAIkE,MAEb,4BACI,oDACA,4BAAKlE,EAAIoE,yBAGjB,iCAIT,GAAwB,SAApBjV,KAAKN,MAAMoN,KAClB,OAAQ,kBAAC,GAAD,MAEZ,MACJ,IAAK,UACD,GAAwB,SAApB9M,KAAKN,MAAMoN,KACX,OACI,kBAACsC,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,GAAC,+BACpB,4BACI,yCAAkB,4BAAKtP,KAAKP,MAAMsC,KAAKwP,eAAeoF,YAE1D,4BACI,4CAAqB,4BAAK3W,KAAKP,MAAMsC,KAAKwP,eAAeC,eAE7D,4BACI,0CAAmB,4BAAKxR,KAAKP,MAAMsC,KAAKwP,eAAeqF,iBAAiB5H,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,mBAElG,4BACI,yDAAkC,4BAAKlP,KAAKP,MAAMsC,KAAKwP,eAAeE,YAI/E,GAAwB,SAApBzR,KAAKN,MAAMoN,KACnB,OAAO,kBAAC,GAAD,S,mCAYlB9M,KAAKC,SAAS,CAAC6M,KAAM,SAErB9M,KAAKP,MAAMga,WAAWzZ,KAAKP,MAAMsC,KAAKjB,M,yCAOtC,GAAIzB,OAAOwT,QAAQ,kDAAmD,CAClE7S,KAAKP,MAAMia,iBACX,IAAI3I,EAAO/Q,KAAKP,MAAMsC,KAAKyL,cAAcvK,WAAa,IAAMjD,KAAKP,MAAMsC,KAAKyL,cAAcvB,UAC1F5M,OAAOsa,MAAM,gBAAkB5I,M,yCAQnC,GAAI1R,OAAOwT,QAAQ,gDAAiD,CAChE7S,KAAKP,MAAMma,eACX,IAAI7I,EAAO/Q,KAAKP,MAAMsC,KAAKyL,cAAcvK,WAAa,IAAMjD,KAAKP,MAAMsC,KAAKyL,cAAcvB,UAC1F5M,OAAOsa,MAAM,cAAgB5I,M,0CAQjC,GAAI1R,OAAOwT,QAAQ,8CAA+C,CAC9D,IAAIgH,EAAc7Z,KAAKP,MAAMsC,KAAKyL,cAAcvK,WAAa,IAAMjD,KAAKP,MAAMsC,KAAKyL,cAAcvB,UAC7F5M,OAAOya,OAAO,iDAAmDD,EAAc,yCAA2CA,GAC1H7Z,KAAKP,MAAMsa,aACX/Z,KAAKP,MAAMoF,QAAQC,KAAK,cACxBzF,OAAOsa,MAAM,YAAcE,IAE3Bxa,OAAOsa,MAAM,qD,+BAUf,IAAD,OACL,OACI,yBAAKzY,MAAO,CAAC8Y,YAAa,KAAMC,aAAc,OAC9C,kBAAC5Y,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAUlV,KAAKP,MAAMsC,KAAKyL,cAAcvK,WAAa,IAAMjD,KAAKP,MAAMsC,KAAKyL,cAAcvB,WAC3G,yBAAK/K,MAAO,CAACgU,MAAM,UACa,WAA3BlV,KAAKP,MAAMsC,KAAKpC,OACjB,kBAAC,IAAM0W,SAAP,KACyB,SAApBrW,KAAKN,MAAMoN,KACR,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,UAAUvB,MAAO,CAACgZ,YAAa,QAAS/W,QAAS,kBAAM,EAAKlD,SAAS,CAAC6M,KAAM,WAA5F,QAIA,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,UAAUvB,MAAO,CAACgZ,YAAa,QAAS/W,QAAS,kBAAM,EAAKgX,eAA5E,QAIJ,kBAACjX,EAAA,EAAD,CAAQT,QAAQ,SAASU,QAAS,kBAAM,EAAKiX,qBAA7C,eAKJ,kBAAC,IAAM/D,SAAP,KACI,kBAACnT,EAAA,EAAD,CAAQT,QAAQ,UAAUvB,MAAO,CAACgZ,YAAa,QAAS/W,QAAS,kBAAM,EAAKkX,qBAA5E,cAGA,kBAACnX,EAAA,EAAD,CAAQT,QAAQ,SAASU,QAAS,kBAAM,EAAKmX,sBAA7C,yBAOZ,kBAACjZ,EAAA,EAAKE,KAAN,KACI,kBAAC2D,EAAA,EAAD,KACA,kBAACpC,EAAA,EAAD,CAAK8C,GAAI,GACL,kBAAC2U,GAAA,EAAD,KACI,kBAACA,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,iBAAxBza,KAAKN,MAAM2Z,SAA6BlW,QAAS,kBAAM,EAAK0Q,WAAW,kBAA/F,uBACA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,cAAxBza,KAAKN,MAAM2Z,SAA0BlW,QAAS,kBAAM,EAAK0Q,WAAW,eAA5F,qBAC+B,WAA9B7T,KAAKP,MAAMsC,KAAK6L,UACb,oCACI,kBAAC2M,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,cAAxBza,KAAKN,MAAM2Z,SAA0BlW,QAAS,kBAAM,EAAK0Q,WAAW,eAA5F,WACA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,aAAxBza,KAAKN,MAAM2Z,SAAyBlW,QAAS,kBAAM,EAAK0Q,WAAW,cAA3F,YACA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,aAAxBza,KAAKN,MAAM2Z,SAAyBlW,QAAS,kBAAM,EAAK0Q,WAAW,cAA3F,sBACA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,YAAxBza,KAAKN,MAAM2Z,SAAwBlW,QAAS,kBAAM,EAAK0Q,WAAW,aAA1F,YAGJ,oCACI,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,cAAxBza,KAAKN,MAAM2Z,SACnBlW,QAAS,kBAAM,EAAK0Q,WAAW,eAD/C,yBAEA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,cAAxBza,KAAKN,MAAM2Z,SACnBlW,QAAS,kBAAM,EAAK0Q,WAAW,eAD/C,aAEA,kBAAC0G,GAAA,EAAUC,KAAX,CAAgBC,OAAgC,YAAxBza,KAAKN,MAAM2Z,SACnBlW,QAAS,kBAAM,EAAK0Q,WAAW,aAD/C,6BAMhB,kBAAC/Q,EAAA,EAAD,KACK9C,KAAKsZ,sB,GAhbR3X,aAudPC,gBA1BS,SAAAlC,GAAK,MAAK,CAC9BqC,KAAMrC,EAAM2V,mBAMW,SAAAvT,GAAQ,MAAK,CACpC4X,eAAgB,kBAAM5X,EAAS,CAC3BE,KAAM,kBACNC,QAAS,QAEb2X,aAAc,kBAAM9X,EAAS,CACzBE,KAAM,gBACNC,QAAS,QAEb8X,WAAY,kBAAMjY,EAAS,CACvBE,KAAM,oBACNC,QAAS,QAEbwX,WAAY,SAAC3Y,GAAD,OAAQgB,EAAS,CACzBE,KAAM,cACNC,QAASnB,QAIFc,CAA6CwX,IC3etDsB,G,YACF,WAAYjb,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAGb,EAAKiN,aAAe,EAAKA,aAAazI,KAAlB,gBALL,E,0EAYNM,GAGTxE,KAAKC,SAAS,CAACuM,aAAchI,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAO,MAE5DhP,KAAKP,MAAMkb,cAAc3a,KAAKP,MAAM8G,MAAM/B,EAAMC,OAAO3D,GAAGkO,QAAQ,OAAO,MAEzEhP,KAAKP,MAAMoF,QAAQC,KAAK,uB,mCAMf8V,GACLvb,OAAOwT,QAAQ,gDACf7S,KAAKP,MAAMob,WAAWD,GACtBvb,OAAOsa,MAAM,cAAgBiB,M,2CAOhBA,GACbvb,OAAOwT,QAAQ,oDACf7S,KAAKP,MAAMqb,eAAeF,GAC1Bvb,OAAOsa,MAAM,gBAAkBiB,M,2CAOlBA,GACbvb,OAAOwT,QAAQ,oDACf7S,KAAKP,MAAMsb,eAAeH,GAC1Bvb,OAAOsa,MAAM,gBAAkBiB,M,qCAIxBrU,GAAQ,IAAD,OAClB,OACI,4BACI,kBAACrD,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,OAAQ2B,QAAQ,UAAUwC,UAAU,OAAOyB,KAAK,KAC5DvD,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAD7C,QAKA,kBAAC7L,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,aAAc2B,QAAQ,UAAUwC,UAAU,OAAOyB,KAAK,KACrEvD,QAAS,kBAAM,EAAK6X,qBAAqBzU,EAAMzF,MADvD,cAIA,kBAACoC,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,SAAU2B,QAAQ,SAASwC,UAAU,OAAOyB,KAAK,KAChEvD,QAAS,kBAAM,EAAK8X,aAAa1U,EAAMzF,MAD/C,a,qCAQGyF,GAAQ,IAAD,OAClB,OACI,4BACI,kBAACrD,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,OAAQ2B,QAAQ,UAAUwC,UAAU,OAAOyB,KAAK,KAC/DvD,QAAS,SAAC4L,GAAD,OAAO,EAAKpC,aAAaoC,KAD1C,QAKA,kBAAC7L,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,aAAc2B,QAAQ,UAAUwC,UAAU,OAAOyB,KAAK,KACrEvD,QAAS,kBAAM,EAAK+X,qBAAqB3U,EAAMzF,MADvD,cAIA,kBAACoC,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,SAAU2B,QAAQ,SAASwC,UAAU,OAAOyB,KAAK,KAChEvD,QAAS,kBAAM,EAAK8X,aAAa1U,EAAMzF,MAD/C,a,oCAQEyF,GAAO,IAAD,OAChB,OACI,4BACI,kBAACrD,EAAA,EAAD,CAAQpC,GAAIyF,EAAMzF,GAAK,SAAU2B,QAAQ,SAASwC,UAAU,OAAOyB,KAAK,KAChEvD,QAAS,kBAAM,EAAK8X,aAAa1U,EAAMzF,MAD/C,a,wCAcO,IAAD,OACVyF,EAAQvG,KAAKP,MAAM8G,MAEvB,OADWM,OAAOkD,KAAKxD,GACXyG,KAAI,SAACvG,GAKb,IAAI0U,EACAxb,EACEyb,EAAgB7U,EAAME,GAAKO,UAAU+L,iBAAmB,6CAAyB,2CACjF9L,EAAOC,IAAOX,EAAME,GAAKO,UAAUC,KAAM,cAc/C,MAb0B,aAAtBV,EAAME,GAAK9G,QACXwb,EAAa,EAAKE,eAAe9U,EAAME,IACvC9G,EAAS,0CAGTwb,EAAa,EAAKG,eAAe/U,EAAME,IACvC9G,EAAS,uCAGTsH,EAAK6C,SAAS5C,MAASC,OAAO,iBAC9BgU,EAAa,EAAKI,cAAchV,EAAME,IACtC9G,EAAS,uCAGT,4BACI,4BAAK4G,EAAME,GAAK3F,IAChB,4BAAKyF,EAAME,GAAKoC,OAAO5F,WAAvB,IAAoCsD,EAAME,GAAKoC,OAAOoD,WACtD,4BAAK1F,EAAME,GAAK6C,MAAMrG,WAAtB,IAAmCsD,EAAME,GAAK6C,MAAM2C,WACpD,4BAAK1F,EAAME,GAAKW,UAAUC,OAAOsJ,SACjC,4BAAKpK,EAAME,GAAKW,UAAUQ,QAAQ+I,SAClC,4BAAKpK,EAAME,GAAKO,UAAUC,MAC1B,4BACKtH,EACAyb,GAEJD,Q,0CAYb,MADa,CAAC,OAAQ,SAAU,QAAS,SAAU,cAAe,OAAO,SAAU,UACrEnO,KAAI,SAACnM,GACf,OAAO,wBAAI4F,IAAK5F,GAAOA,Q,+BAS3B,OACI,kBAACO,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAAC8C,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACA,4BACKvP,KAAKwb,sBAGV,+BACCxb,KAAKyb,yB,GAlLA9Z,aA+NXqE,eAAWpE,aAhCF,SAAAlC,GAAK,MAAK,CAC9B6G,MAAO7G,EAAM6G,MACbsG,MAAOnN,EAAMmN,UAQU,SAAA/K,GAAQ,MAAK,CACpC6Y,cAAe,SAACvU,GAAD,OAAUtE,EAAS,CAC9BE,KAAM,cACNC,QAASmE,KAGbyU,WAAY,SAACD,GAAD,OAAY9Y,EAAS,CAC7BE,KAAM,cACNC,QAAS2Y,KAGbE,eAAgB,SAACF,GAAD,OAAY9Y,EAAS,CACjCE,KAAM,kBACNC,QAAS2Y,KAGbG,eAAgB,SAACH,GAAD,OAAY9Y,EAAS,CACjCE,KAAM,kBACNC,QAAS2Y,QAIShZ,CAA6C8Y,KCvNjEgB,G,YACF,WAAYjc,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTgP,UAAW,IAEf,EAAKzK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKyL,oBAAsB,EAAKA,oBAAoBzL,KAAzB,gBAE3B,EAAK0L,aAAe,GACpB,EAAKC,MAAQ,EAEb,EAAK5E,OAAS,EAAKA,OAAO/G,KAAZ,gBACd,EAAK4L,eAAiB,EAAKA,eAAe5L,KAApB,gBACtBgG,QAAQC,IAAI,QACZD,QAAQC,IAAI,EAAK1K,MAAMsM,aAdR,E,wEAiBRvH,GACPxE,KAAKP,MAAMoF,QAAQC,KAAK,c,iCAGjBN,GACPxE,KAAKP,MAAMkc,SAAS3b,KAAKP,MAAMsM,aAC/B7B,QAAQC,IAAInK,KAAKP,MAAMsM,aACvB1M,OAAOsa,MAAM,Y,mCAGJnV,GACT,IAAI0L,EAAa1L,EAAMC,OAAO3D,GAAG4M,MAAM,KACjB,SAAlBwC,EAAW,GAEXlQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAOC,OACpC,YAAlBwL,EAAW,GAElBlQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAOC,OACpC,SAAlBwL,EAAW,IAAmC,eAAlBA,EAAW,GAE9ClQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAI,KAAM1L,EAAMC,OAAO0L,SACpC,oBAAlBD,EAAW,IAClBhG,QAAQC,IAAI3F,EAAMC,QAClBzE,KAAKP,MAAMuQ,gBAAgB,mBAAoB,KAAMxL,EAAMC,OAAO0L,UAGlEnQ,KAAKP,MAAMuQ,gBAAgBE,EAAW,GAAIA,EAAW,GAAI1L,EAAMC,OAAOC,S,0CAI1DF,EAAOxC,GACI,UAAvBwC,EAAMC,OAAOC,MAEb1E,KAAKP,MAAMuQ,gBAAgB,iBAAkB,OAAUhO,EAAM,MAE7DhC,KAAKP,MAAMuQ,gBAAgB,iBAAkBhO,EAAMhC,KAAKP,MAAMsM,YAAYzC,MAAMxI,GAAG,IAAI0D,EAAMC,OAAOC,MAAMsK,QAAQ,QAAS,O,yCAO/H,IAFA,IAAIoB,EAAQ,GACR1B,EAAY,GACPX,EAAI,EAAGA,EAAI/N,KAAKP,MAAMoN,MAAMc,OAAQI,IACzC,GAAI/N,KAAKP,MAAMoN,MAAMkB,GAAGjN,KAAOd,KAAKP,MAAMsM,YAAYzC,MAAMxI,GAExCd,KAAKP,MAAMoN,MAAMkB,GAAGW,UAG5C,IAAK,IAAIX,EAAI,EAAGA,EAAIW,EAAUf,OAAQI,IAClCqC,EAAMtL,KAAK,4BAAQ2B,IAAKsH,EAAGrJ,MAAOqJ,GAAIA,IAE1C,OAAOqC,I,6BAGJR,GACH5P,KAAK4P,aAAa5P,KAAK6P,OAASD,EAChC5P,KAAK6P,OAAS,I,qCAGHQ,EAAUC,GACrB,GAAiC,MAA7BtQ,KAAK4P,aAAaU,GAAiB,CACnC,IAAMC,EAAQvQ,KAAK4P,aAAaU,GAAQE,WACxCxQ,KAAKP,MAAMuQ,gBAAgBK,EAAU,UAAWE,EAAMG,mBACtD1Q,KAAKP,MAAMuQ,gBAAgBK,EAAU,cAAe,CAChDzH,IAAK2H,EAAME,SAASnR,SAASsJ,MAC7B8C,IAAK6E,EAAME,SAASnR,SAASoM,aAIjCxB,QAAQC,IAAI,qC,yCAID2C,GACf,IAAIxC,EAAU,GAEd,OADKtK,KAAKP,MAAMsM,YAAY3E,UAAU0F,GAAM6D,SAASrG,EAAQxF,KAAK,4BAAQJ,MAAO,GAAIkM,MAAO,GAAInK,IAAI,UAC/FzG,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAClCwJ,EAAQxF,KAAR,MAAAwF,EAAO,aAAStK,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYzC,MAAMxI,IAAI4N,UAAU1B,KAAI,SAAC6D,GAC7E,OAAO,4BAAQnM,MAAO,QAAQmM,EAAIC,OAAQF,MAAOC,EAAIE,KAAMtK,IAAKoK,EAAIE,YAExEzG,EAAQxF,KAAK,4BAAQJ,MAAO,QAASkM,MAAO,YAAanK,IAAI,WACtD6D,GALsCA,I,uCAS7C,IAAIA,EAAU,CAAC,4BAAQ5F,MAAO,GAAIkM,MAAO,MACzC,OAAK5Q,KAAKP,MAAMsM,YAAYlD,OAAO/H,IACnCwJ,EAAQxF,KAAR,MAAAwF,EAAO,aAAStK,KAAKP,MAAMoN,MAAM7M,KAAKP,MAAMsM,YAAYlD,OAAO/H,IAAIkQ,SAAShE,KAAI,SAACiE,GAC7E,OAAO,4BAAQvM,MAAOuM,EAAIC,GAAIN,MAAOK,EAAIE,KAAO,IAAMF,EAAIG,kBAEvD9G,GAJuCA,I,+BAOxC,IAAD,OACL,OACI,kBAAClJ,EAAA,EAAD,CAAW6D,UAAU,YAAY/D,MAAO,CAACoL,SAAU,SAE/C,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAK8C,GAAI,GACT,4BAEI,kBAAC1C,EAAA,EAAD,CAAQT,QAAQ,YAAYwC,UAAU,OAAOyB,KAAK,KAAKxF,MAAO,CAAEgZ,YAAa,QACrE/W,QAAS,SAAC4L,GAAD,OAAO,EAAK6M,WAAW7M,KADxC,QAKJ,kBAAC7L,EAAA,EAAD,CAAQT,QAAQ,UAAUwC,UAAU,OAAOyB,KAAK,KAAKxF,MAAO,CAAEgZ,YAAa,QACnE/W,QAAS,SAAC4L,GAAD,OAAO,EAAKoL,WAAWpL,KADxC,UAMA,kBAACjM,EAAA,EAAD,CAAK8C,GAAI,GACL,2CAGJ,kBAACV,EAAA,EAAD,KACA,kBAACpC,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACb,+BACA,4BACI,qCACA,sCAAQrR,KAAKP,MAAMsM,YAAYzC,MAAMrG,YAArC,cAAuDjD,KAAKP,MAAMsM,YAAYzC,MAAM2C,aAExF,4BACI,4BACI,kBAAC1G,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,GAAGhF,GAAG,aAC9BiF,SAAU/F,KAAKiE,aACfS,MAAO1E,KAAKP,MAAMsM,YAAY/E,UAAUC,SAG9D,4BACI,4BACI,kBAAC1B,EAAA,EAAKG,MAAN,yBAEJ,4BACKwE,QAAQC,MACT,kBAAC5E,EAAA,EAAKM,QAAN,CAAc7D,KAAK,WAAW8D,YAAY,GAAGhF,GAAG,wBAClCiF,SAAU/F,KAAKiE,aACfkM,QAASnQ,KAAKP,MAAMsM,YAAY/E,UAAU+L,0BAQhF,kBAACjQ,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,0BAGA,kBAACD,EAAA,EAAKE,KAAN,KACI,yBAAKL,MAAO,CAAEkL,SAAU,WAAY1J,MAAO,OAAQ8I,OAAQ,UACvD,kBAAC,EAAD,WAMpB,6BACA,kBAACtG,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,uCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACb,+BACA,4BACI,4BACI,kBAAC9L,EAAA,EAAKG,MAAN,kBAGJ,4BACI,kBAAC,IAAD,CACIuF,OAAQjL,KAAKiL,OACb6E,eAAgB,kBAAM,EAAKA,eAAe,SAAU,KAEpD,kBAACvK,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,kBACxBiM,SAAY/R,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKC,UAClD/Q,GAAG,uBAAuBiF,SAAU/F,KAAKiE,aACzCS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOsJ,aAIzE,4BACI,4BACI,kBAACpL,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,oBACfiF,SAAU,SAACgJ,GAAD,OAAO,EAAK9K,aAAa8K,IACnCrK,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOC,SAGrE,4BACI,4BACI,kBAAC/B,EAAA,EAAKG,MAAN,+BAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,sBACxBhF,GAAG,uBAAuBiF,SAAU/F,KAAKiE,aACzCS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUC,OAAOoK,iBAQrF,kBAAC3O,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACI,wCAEJ,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAAC6N,GAAA,EAAD,CAAOiC,YAAU,GACb,+BACA,4BACI,kBAAC9L,EAAA,EAAKG,MAAN,iBACA,4BACI,kBAAC,IAAD,CACIuF,OAAQjL,KAAKiL,OACb6E,eAAgB,kBAAM,EAAKA,eAAe,UAAW,KAErD,kBAACvK,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,mBACxBhF,GAAG,wBAAwBiF,SAAU/F,KAAKiE,aAC1C8N,SAAY/R,KAAKP,MAAMsM,YAAY/E,UAAU4K,KAAKK,WAClDvN,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQ+I,aAI1E,4BACI,4BACI,kBAACpL,EAAA,EAAKG,MAAN,eAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,qBACfiF,SAAU,SAACgJ,GAAD,OAAO,EAAK9K,aAAa8K,IACnCrK,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQN,SAGtE,4BACI,4BACI,kBAAC/B,EAAA,EAAKG,MAAN,+BAEJ,4BACI,kBAACH,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAO8D,YAAY,uBACxBhF,GAAG,wBAAwBiF,SAAU/F,KAAKiE,aAC1CS,MAAO1E,KAAKP,MAAMsM,YAAY3E,UAAUQ,QAAQ6J,kBAS1F,kC,GA9RO9P,aA2TRqE,eAAWpE,aAvBF,SAAAlC,GAAK,MAAK,CAC9BqM,YAAarM,EAAMqM,YACnBc,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,CAEpCkO,gBAAiB,SAAChO,EAAMkQ,EAAOxN,GAAd,OAAwB5C,EAAS,CAC9CE,KAAM,YACNC,QAAS,CACLD,KAAMA,EACNkQ,MAAOA,EACPxN,MAAOA,MAIfiX,SAAU,SAACvV,GAAD,OAAUtE,EAAS,CACzBE,KAAM,YACNC,QAASmE,QAKSxE,CAA6C8Z,KCpUjEG,G,YACF,WAAYpc,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJL,E,0EAONM,M,+BAQT,OACI,kBAACpD,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAACpH,EAAA,EAAD,KACA,kBAAC,GAAD,Y,GAnBKvD,aAgCNC,gBANS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,KAGzBF,CAA6Cia,I,8BClCtDC,G,YACF,WAAYrc,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,+EAWf,IAAM6X,EAAU,GACZC,EAASnV,OAAOC,OAAO9G,KAAKP,MAAMoN,OAAO9F,QAAO,SAAChF,GACjD,MAA2B,UAAnBA,EAAK6L,aAEXrH,EAAQM,OAAOC,OAAO9G,KAAKP,MAAM8G,OAAOQ,QAAO,SAAAX,GAAI,OAAIc,IAAOd,EAAKY,UAAUC,KAAM,cAAc6C,SAAS5C,UALlG,uBAMd,YAAoB8U,EAApB,+CAA4B,CAAC,IAAlB1S,EAAiB,+BACxB,YAAmB/C,EAAnB,+CAA0B,CAAC,IAAhBH,EAAe,SAC0B,IAA5CS,OAAOkD,KAAKgS,GAASE,QAAQ3S,EAAMxI,MACnCib,EAAQzS,EAAMxI,IAAM,GACpBib,EAAQzS,EAAMxI,IAAd,MAA6B,EAC7Bib,EAAQzS,EAAMxI,IAAd,QAA+B,EAC/Bib,EAAQzS,EAAMxI,IAAd,WAAkCwI,EAAM6F,oBAExC/I,EAAKkD,MAAMxI,KAAOwI,EAAMxI,KAC5Bib,EAAQzS,EAAMxI,IAAd,OAA8B,EAC9Bib,EAAQzS,EAAMxI,IAAd,SAAgCsF,EAAKY,UAAUqC,QAAQC,MAAQlD,EAAKY,UAAUqC,QAAQC,MAAQ,IAV1E,oFANd,kFAmBd,OAAO0S,EAAOhP,KAAI,SAAC1D,GACjB,OAAMA,EAAMxI,MAAMib,EAEZ,wBAAItV,IAAK6C,EAAMxI,GAAII,MAAO,CAAC2N,QAAS,QAASC,YAAa,QAASpM,MAAO,SACtE,4BAAK4G,EAAMxI,IACX,4BAAKwI,EAAMkE,cAAcvK,WAAzB,IAAsCqG,EAAMkE,cAAcvB,WAC1D,4BAAK8P,EAAQzS,EAAMxI,IAAd,OACL,6BACA,4BAAKib,EAAQzS,EAAMxI,IAAd,aAPoB,U,0CAmBrC,MADa,CAAC,WAAY,QAAS,QAAS,UAAW,WACzCkM,KAAI,SAACnM,GACf,OAAO,wBAAI4F,IAAK5F,GAAOA,Q,mCAIlB2D,M,+BAQT,OACI,6BACI,kBAAC4K,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,2BAAOrO,MAAO,CAAC2N,QAAS,QAASnM,MAAO,wBACxC,wBAAIxB,MAAO,CAAC2N,QAAS,QAASC,YAAa,QAASpM,MAAO,SACtD1C,KAAKwb,sBAGV,2BAAOta,MAAO,CAAC2N,QAAS,QAASrD,OAAQ,QAAS9I,MAAO,OAAQ8M,SAAU,SAC1ExP,KAAKyb,yB,GAxEL9Z,aA6FNC,gBARS,SAAAlC,GAAK,MAAK,CAC9B6G,MAAO7G,EAAM6G,MACbsG,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,KAGzBF,CAA6Cka,IC7FtDI,G,YACF,WAAYzc,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GACb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAHL,E,+EAWf,IAAM6X,EAAU,GACZI,EAAUtV,OAAOC,OAAO9G,KAAKP,MAAMoN,OAAO9F,QAAO,SAAChF,GAClD,MAA2B,WAAnBA,EAAK6L,aAEXrH,EAAQM,OAAOC,OAAO9G,KAAKP,MAAM8G,OAAOQ,QAAO,SAAAX,GAAI,OAAIc,IAAOd,EAAKY,UAAUC,KAAM,cAAc6C,SAAS5C,UALlG,uBAMd,YAAqBiV,EAArB,+CAA8B,CAAC,IAApBtT,EAAmB,+BAC1B,YAAmBtC,EAAnB,+CAA0B,CAAC,IAAhBH,EAAe,SAC2B,IAA7CS,OAAOkD,KAAKgS,GAASE,QAAQpT,EAAO/H,MACpCib,EAAQlT,EAAO/H,IAAM,GACrBib,EAAQlT,EAAO/H,IAAf,MAA8B,EAC9Bib,EAAQlT,EAAO/H,IAAf,QAAgC,EAChCib,EAAQlT,EAAO/H,IAAf,KAA6B,GAE7BsF,EAAKyC,OAAO/H,KAAO+H,EAAO/H,KAC9Bib,EAAQlT,EAAO/H,IAAf,OAA+B,EAC/Bib,EAAQlT,EAAO/H,IAAf,SAAiCsF,EAAKY,UAAUqC,QAAQR,OAASzC,EAAKY,UAAUqC,QAAQR,OAAS,EACjGkT,EAAQlT,EAAO/H,IAAf,MAA8BsF,EAAKY,UAAU2C,WAAWd,OAASzC,EAAKY,UAAU2C,WAAWd,OAAS,IAX9E,oFANhB,kFAqBd,OAAOsT,EAAQnP,KAAI,SAACnE,GAClB,OAAMA,EAAO/H,MAAMib,EAEb,wBAAItV,IAAKoC,EAAO/H,GAAII,MAAO,CAAC2N,QAAS,QAASC,YAAa,QAASpM,MAAO,SACvE,4BAAKmG,EAAO/H,IACZ,4BAAK+H,EAAO2E,cAAcvK,WAA1B,IAAuC4F,EAAO2E,cAAcvB,WAC5D,4BAAK8P,EAAQlT,EAAO/H,IAAf,OACL,4BAAKib,EAAQlT,EAAO/H,IAAf,QAA8Bsb,QAAQ,IAC3C,4BAAKlV,IAAO,cAAcwK,QAAQ,OAC7BC,QAAQoK,EAAQlT,EAAO/H,IAAf,MACRqG,OAAO,4BATc,U,0CAqBtC,MADa,CAAC,YAAa,SAAU,QAAS,UAAW,mBAC3C6F,KAAI,SAACnM,GACf,OAAO,wBAAI4F,IAAK5F,GAAOA,Q,mCAIlB2D,M,+BAQT,OACI,6BACI,kBAAC4K,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,2BAAOrO,MAAO,CAAC2N,QAAS,QAASnM,MAAO,wBACxC,wBAAIxB,MAAO,CAAC2N,QAAS,QAASC,YAAa,QAASpM,MAAO,SACtD1C,KAAKwb,sBAGV,2BAAOta,MAAO,CAAC2N,QAAS,QAASrD,OAAQ,QAAS9I,MAAO,OAAQ8M,SAAU,SAC1ExP,KAAKyb,yB,GA5EJ9Z,aAiGPC,gBARS,SAAAlC,GAAK,MAAK,CAC9B6G,MAAO7G,EAAM6G,MACbsG,MAAOnN,EAAMmN,UAGU,SAAA/K,GAAQ,MAAK,KAGzBF,CAA6Csa,IC3FtDG,G,YACF,WAAY5c,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJL,E,0EAONM,M,+BAQT,OACI,kBAACpD,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAACpH,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,CAAK5B,MAAO,CAACob,SAAU,QACnB,kBAACjb,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAamE,GAAG,MAAhB,6BACA,kBAACpE,EAAA,EAAKE,KAAN,CAAW0D,UAAU,aAEjB,kBAACM,EAAA,EAAKC,MAAN,CAAYC,GAAIP,KACZ,kBAACpC,EAAA,EAAD,CAAK8C,GAAI,IACL,kBAACL,EAAA,EAAKgX,MAAN,CACIva,KAAK,QACL4O,MAAM,UACNG,KAAK,iBACLjQ,GAAG,+BAQ3B,kBAACgC,EAAA,EAAD,CAAK5B,MAAO,CAACob,SAAU,QACnB,kBAACjb,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAamE,GAAG,MAAhB,qDACA,kBAACpE,EAAA,EAAKE,KAAN,CAAW0D,UAAU,aAArB,0BAEI,kBAACnC,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,gBAFtC,wBAKI,kBAACgC,EAAA,EAAD,KAAK,kBAACyC,EAAA,EAAKM,QAAN,CAAc7D,KAAK,OAAOlB,GAAG,kBAMlD,6BACA,kBAACoE,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KACI,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,CAAamE,GAAG,MAAhB,mBACA,kBAACpE,EAAA,EAAKE,KAAN,CAAW0D,UAAU,aACjB,kBAACM,EAAA,EAAKC,MAAN,CAAYC,GAAIP,KACZ,kBAACpC,EAAA,EAAD,KACI,kBAACyC,EAAA,EAAKgX,MAAN,CACIva,KAAK,QACL4O,MAAM,aACNG,KAAK,mBACLjQ,GAAG,uBAEP,kBAACyE,EAAA,EAAKgX,MAAN,CACIva,KAAK,QACL4O,MAAO,kBAAC,GAAD,CAAc9D,KAAK,WAC1BiE,KAAK,mBACLjQ,GAAG,0C,GAtEzBa,aAyFPC,gBANS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,KAGzBF,CAA6Cya,I,SC7FtDG,GAAQ,IAAIC,KAGZC,GAASC,KAAWC,OAAO,CAC/BvE,KAAM,CACJwE,cAAe,MACfC,gBAAiB,UACjBpa,MAAO,KACPqa,OAAQ,OACR,gCAAiC,CAC/Bra,MAAO,OAGX8D,MAAO,CAAEqI,QAAS,QAASnM,MAAO,MAAOsa,YAAa,QAASC,YAAa,EAAGC,iBAAkB,EAAGC,kBAAmB,GACvHC,SAAU,CAAEL,OAAQ,OAAQF,cAAe,OAC3CQ,SAAU,CAAE3a,MAAO,MAAOsa,YAAa,QAASC,YAAa,EAAGK,gBAAiB,EAAGC,eAAgB,GACpGC,UAAW,CAAET,OAAQ,OAAQU,UAAW,EAAGC,SAAU,MAIjDC,G,YACF,WAAYle,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXke,YAAa,EACbC,WAAY,GAEd,EAAKC,aAAe,EAAKA,aAAa5Z,KAAlB,gBANL,E,4EASH,IAAD,OACT6Z,EAAWlX,OAAOkD,KAAK/J,KAAKP,MAAM8G,OAClCyX,EAAU,EACV1W,EAAO,EACP2W,EAAQ,EACRjJ,EAAO+I,EAAShX,QAAO,SAACX,GACxB,OAAO,EAAK3G,MAAM8G,MAAMH,GAAMyC,OAAO/H,KAAO,EAAKrB,MAAMoJ,OAAO/H,MAC/DkM,KAAI,SAACnM,GAIJ,OAHAmd,GAAW,EACX1W,GAAQ,EAAK7H,MAAM8G,MAAM1F,GAAMmG,UAAU2C,WAAWd,OACpDoV,GAAS,EAAKxe,MAAM8G,MAAM1F,GAAMmG,UAAUqC,QAAQR,OAEhD,kBAAC,KAAD,CAAM3H,MAAOwb,GAAOU,UAClB,kBAAC,KAAD,CAAMlc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAAYQ,IAEpC,kBAAC,KAAD,CAAM9c,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAAY,EAAK/d,MAAM8G,MAAM1F,GAAMC,KAE3D,kBAAC,KAAD,CAAMI,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAAY,EAAK/d,MAAM8G,MAAM1F,GAAMmG,UAAUC,OAErE,kBAAC,KAAD,CAAM/F,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,YAAa,EAAK/d,MAAM8G,MAAM1F,GAAMmG,UAAU2C,WAAWd,OAAO,IAAIuT,QAAQ,KAEpG,kBAAC,KAAD,CAAMlb,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAAa,EAAK/d,MAAM8G,MAAM1F,GAAMmG,UAAUqC,QAAQR,OAAQuT,QAAQ,SAOpG,OAHIpc,KAAKN,MAAMme,aAAevW,GAAQtH,KAAKN,MAAMke,cAAgBK,GAC/Dje,KAAKC,SAAS,CAAC4d,WAAYvW,EAAMsW,YAAaK,IAEzCjJ,I,0CAIP,OACE,oCACA,kBAAC,KAAD,CAAM9T,MAAOwb,GAAOlW,OAClB,kBAAC,KAAD,CAAMtF,MAAOwb,GAAOU,UAChB,kBAAC,KAAD,CAAMlc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAApB,gBAEJ,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAApB,YAEJ,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAApB,cAEJ,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAApB,cAEJ,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAApB,kBAGR,kBAAC,KAAD,KACGxd,KAAK8d,iBAGR,kBAAC,KAAD,KAAM,kBAAC,KAAD,KAAO,MACb,kBAAC,KAAD,KACI,kBAAC,KAAD,KAAO,YAEX,kBAAC,KAAD,CAAM5c,MAAOwb,GAAOlW,OAClB,kBAAC,KAAD,CAAMtF,MAAOwb,GAAOU,UAChB,kBAAC,KAAD,CAAMlc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,aAExB,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,aAExB,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,aAExB,kBAAC,KAAD,CAAMtc,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,YAAaxd,KAAKN,MAAMme,WAAW,IAAIzB,QAAQ,KAEvE,kBAAC,KAAD,CAAMlb,MAAOwb,GAAOW,UAChB,kBAAC,KAAD,CAAMnc,MAAOwb,GAAOc,WAAaxd,KAAKN,MAAMke,YAAaxB,QAAQ,U,+BAQ/E,OACI,kBAAC,KAAD,CACI8B,MAAOle,KAAKP,MAAMoJ,OAAO2E,cAAcvB,UAAY,oBAAoBuQ,GAAM2B,WAAW3B,GAAM4B,WAAW,GAAG5B,GAAM6B,cAClHC,OAAO,oBACPC,QAAQ,qBAER,kBAAC,KAAD,CAAM7X,KAAK,KAAKxF,MAAOwb,GAAOrE,MAC1B,kBAAC,KAAD,KACI,kBAAC,KAAD,4CAEJ,kBAAC,KAAD,KAAM,kBAAC,KAAD,KAAO,MACb,kBAAC,KAAD,KACI,kBAAC,KAAD,KAAOrY,KAAKP,MAAMoJ,OAAO2E,cAAcvB,UAAY,KAAOjM,KAAKP,MAAMoJ,OAAO2E,cAAcvK,YAC1F,kBAAC,KAAD,KAAOjD,KAAKP,MAAMoJ,OAAO6F,UAAU,GAAGoC,QACtC,kBAAC,KAAD,KAAO9Q,KAAKP,MAAMoJ,OAAO6F,UAAU,GAAGoG,KAAO,KAAO9U,KAAKP,MAAMoJ,OAAO6F,UAAU,GAAGhP,MAAQ,IAAMM,KAAKP,MAAMoJ,OAAO6F,UAAU,GAAGqG,KAChI,kBAAC,KAAD,MAAQ/U,KAAKP,MAAMoJ,OAAO2E,cAAciI,MAAQzV,KAAKP,MAAMoJ,OAAO2E,cAAciI,MAAQ,IAAM,KAAOzV,KAAKP,MAAMoJ,OAAO2E,cAAcyF,WAAajT,KAAKP,MAAMoJ,OAAO2E,cAAcyF,WAAa,IAAM,KAAOjT,KAAKP,MAAMoJ,OAAO2E,cAAcwF,aAAehT,KAAKP,MAAMoJ,OAAO2E,cAAcwF,aAAe,IAAM,MAEpT,kBAAC,KAAD,KAAM,kBAAC,KAAD,KAAO,MACb,kBAAC,KAAD,KACI,kBAAC,KAAD,KAAO,gBACP,kBAAC,KAAD,KAAO,eAEX,kBAAC,KAAD,KAAM,kBAAC,KAAD,KAAO,MACZhT,KAAKwe,0B,GAzHK7c,aAiIzB8c,G,YACF,WAAYhf,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEb,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJL,E,0EAONM,M,+BAIT,OACE,6BACE,kBAAC,KAAD,CAAiBd,SAAU,kBAAC,GAAD,CAAkBmF,OAAQ7I,KAAKP,MAAMoJ,OAAQtC,MAAOvG,KAAKP,MAAM8G,QAAUmY,SAAU1e,KAAKP,MAAMoJ,OAAO2E,cAAcvB,UAAY,KAAKuQ,GAAM2B,WAAW3B,GAAM4B,WAAW,GAAG5B,GAAM6B,gBACvM,cAAGM,KAAH,EAASC,IAAT,IAAcC,EAAd,EAAcA,QAAd,EAAuB7Z,MAAvB,OAAoC6Z,EAAU,sBAAwB,wB,GAfnDld,aA8BnBC,gBARS,SAAAlC,GAAK,MAAK,CAC9BmJ,OAAQnJ,EAAM2V,eACd9O,MAAO7G,EAAM6G,UAGU,SAAAzE,GAAQ,MAAK,KAGzBF,CAA6C6c,ICxKtDK,G,YACF,WAAYrf,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXqf,eAAgB,WAExB,EAAK9a,aAAe,EAAKA,aAAaC,KAAlB,gBALC,E,0EAYNQ,GACT1E,KAAKC,SAAS,CAAC8e,eAAera,M,mCAShC,GAAkC,YAA9B1E,KAAKN,MAAMqf,eACb,OAAI/e,KAAKP,MAAM4V,eAAevU,GACrB,kBAACke,GAAD,MAEA,gD,oCAUT,OAAQhf,KAAKN,MAAMqf,gBACf,IAAK,SACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,UACD,OAAQ,kBAAC,GAAD,MACZ,IAAK,UACD,OAAQ,kBAAC,GAAD,MACZ,QACI,OAAO,kBAAC,GAAD,S,+BASf,OACI,kBAAC3d,EAAA,EAAD,CAAWF,MAAO,CAACoL,SAAU,SACzB,kBAAC2S,GAAA,EAAD,CACIha,UAAU,0BACVia,aAAW,8BAEX,kBAACC,GAAA,EAAD,CAAmBnd,KAAK,QAAQ+O,KAAK,UAAUqO,aAAc,EAAGrZ,SAAU/F,KAAKiE,cAC3E,kBAACob,GAAA,EAAD,CAAcve,GAAG,SAAS4D,MAAO,UAAjC,UACA,kBAAC2a,GAAA,EAAD,CAAcve,GAAG,UAAU4D,MAAO,WAAlC,WACA,kBAAC2a,GAAA,EAAD,CAAcve,GAAG,UAAW4D,MAAO,WAAnC,YAGJ,kBAAC5B,EAAA,EAAD,CAAK8C,GAAI,GACJ5F,KAAKsf,eAGd,6BACCtf,KAAKuf,mB,GAvEA5d,aAoFPC,gBAPS,SAAAlC,GAAK,MAAK,CAChC2V,eAAgB3V,EAAM2V,mBAGG,SAAAvT,GAAQ,MAAK,KAGzBF,CAA6Ckd,IC9FtDU,G,YACF,WAAY/f,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT+f,MAAM,EACN3S,KAAM,GACNhJ,SAAU,IAEpB,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBAPC,E,gFAUAwb,GAEX1f,KAAKP,MAAMkgB,gBAAkBD,EAAUC,eACvC3f,KAAKC,SAAS,CAACwf,MAAM,M,mCAInBjb,GACN,IAAI0N,EAAQ1N,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GACzB,aAAVwE,GAEAlS,KAAKC,SAAS,CAAC6D,SAAUU,EAAMC,OAAOC,QAEtC1E,KAAKP,MAAMmgB,eAAe,OAAQ,WAAYpb,EAAMC,OAAOC,QAE3D1E,KAAKP,MAAMmgB,eAAe,OAAQ1N,EAAO1N,EAAMC,OAAOC,S,uCAK1D,IAAI4F,EAOJ,OALAA,EADezD,OAAOC,OAAO9G,KAAKP,MAAMwW,UACrBjJ,KAAI,SAACkJ,GACpB,OACI,4BAAQzP,IAAKyP,EAAEpV,GAAI4D,MAAOwR,EAAEpV,GAAI8P,MAAOsF,EAAEC,kBAG3C,CAAE,4BAAQ1P,IAAK,GAAI/B,MAAO,GAAIkM,MAAO,MAA3C,oBAAqDtG,M,qCAIjDtK,KAAK2S,aACmB,QAApB3S,KAAKN,MAAMoN,KACX9M,KAAKP,MAAMmgB,eAAe,OAE1B5f,KAAKP,MAAMmgB,eAAe,QAE9B5f,KAAKC,SAAS,CAACwf,MAAM,EAAO3b,SAAU,GAAIgJ,KAAM,Q,uCAKhDzN,OAAOwT,QAAQ,4EACf7S,KAAKP,MAAMmgB,eAAe,UAC1B5f,KAAKC,SAAS,CAACwf,MAAM,EAAO3b,SAAU,GAAIgJ,KAAM,Q,iCAKpD,MAA8C,KAA1C9M,KAAKP,MAAMogB,gBAAgB5c,YAC3B5D,OAAOsa,MAAM,+CACN,GACyC,KAAzC3Z,KAAKP,MAAMogB,gBAAgB5T,WAClC5M,OAAOsa,MAAM,8CACN,GACqC,KAArC3Z,KAAKP,MAAMogB,gBAAgBpK,OAClCpW,OAAOsa,MAAM,4CACN,GACqC,KAArC3Z,KAAKP,MAAMogB,gBAAgBC,OAClCzgB,OAAOsa,MAAM,yDACN,GACwC,KAAxC3Z,KAAKP,MAAMogB,gBAAgBhc,UAClCxE,OAAOsa,MAAM,iDACN,GACoB,QAApB3Z,KAAKN,MAAMoN,MAA0D,KAAxC9M,KAAKP,MAAMogB,gBAAgB/b,UAC/DzE,OAAOsa,MAAM,iDACN,GAC0C,KAA1C3Z,KAAKP,MAAMogB,gBAAgBlf,aAClCtB,OAAOsa,MAAM,+DACN,K,+BAKL,IAAD,OACL,OACA,oCACI,kBAACtY,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAUlV,KAAKP,MAAMogB,gBAAgB5c,WAAajD,KAAKP,MAAMogB,gBAAgB5c,WAAY,IAAKjD,KAAKP,MAAMogB,gBAAgB5T,UAAY,sBACrJjM,KAAKN,MAAM+f,KAWT,oCACI,kBAACvc,EAAA,EAAD,CAAQT,QAAQ,UAAUvB,MAAO,CAACgU,MAAO,QAAS6K,WAAY,QAAS5c,QAAS,kBAAM,EAAK6c,iBAA3F,QAGqB,QAApBhgB,KAAKN,MAAMoN,KACZ,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,SAASvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAK8c,mBAAtE,UAGE,MAlBN,oCAAGjgB,KAAKP,MAAMygB,cAAgBlgB,KAAKP,MAAMkgB,cACrC,kBAACzc,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAKlD,SAAS,CAACwf,MAAM,EAAM3S,KAAM,WAAhG,iBAIA,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAKlD,SAAS,CAACwf,MAAM,EAAM3S,KAAM,UAAhG,kBAiBZ,kBAACzL,EAAA,EAAKE,KAAN,KACMvB,KAAKN,MAAM+f,KAoBT,kBAACrQ,GAAA,EAAD,KAAO,+BACH,4BACI,4CACA,4BACI,kBAAC7J,EAAA,EAAKM,QAAN,CAAc/E,GAAG,mBAAmBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgB5c,eAG3G,4BACI,2CACA,4BACI,kBAACsC,EAAA,EAAKM,QAAN,CAAc/E,GAAG,kBAAkBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgB5T,cAG1G,4BACI,uCACA,4BACI,kBAAC1G,EAAA,EAAKM,QAAN,CAAc/E,GAAG,cAAciF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgBpK,UAGtG,4BACI,8CACA,4BACI,kBAAClQ,EAAA,EAAKM,QAAN,CAAc/E,GAAG,cAAciF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgBC,UAGtG,4BACI,0CACA,4BACI,kBAACva,EAAA,EAAKM,QAAN,CAAc/E,GAAG,iBAAiBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgBhc,aAGzG,4BACI,0CACA,4BACI,kBAAC0B,EAAA,EAAKM,QAAN,CAAcC,YAAiC,QAApB9F,KAAKN,MAAMoN,KAAiB,GAAK,yCAA0ChM,GAAG,iBAAiBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKN,MAAMoE,aAGjL,4BACI,yCACA,4BACI,kBAACyB,EAAA,EAAKM,QAAN,CAAcJ,GAAG,SAAS3E,GAAG,mBAAmBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAMogB,gBAAgBlf,YAC1GX,KAAKsW,sBA5DtB,kBAAClH,GAAA,EAAD,KAAO,+BACH,4BACI,0CACA,4BAAKpP,KAAKP,MAAMogB,gBAAgBhc,WAEpC,4BACI,uCACA,4BAAK7D,KAAKP,MAAMogB,gBAAgBpK,QAEpC,4BACI,8CACA,4BAAKzV,KAAKP,MAAMogB,gBAAgBC,QAEpC,4BACI,yCACA,4BAAK9f,KAAKP,MAAM0gB,eAAiBngB,KAAKP,MAAM0gB,eAAehK,aAAe,a,GAlI/ExU,aA6MRC,gBAlBS,SAAAlC,GAAK,MAAK,CAC9BmgB,gBAAiBngB,EAAMmgB,gBACvBM,eAAgBzgB,EAAMygB,eACtBlK,SAAUvW,EAAMuW,aAGO,SAAAnU,GAAQ,MAAK,CACpC8d,eAAgB,SAAC9S,GAAD,IAAOoF,EAAP,uDAAa,KAAMxN,EAAnB,uDAAyB,KAAzB,OAAkC5C,EAAS,CACvDE,KAAM,eACNC,QAAS,CACLD,KAAM,WACN8K,KAAMA,EACNoF,MAAOA,EACPxN,MAAOA,SAKJ9C,CAA6C4d,IC5MtDY,G,YACF,WAAY3gB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT+f,MAAM,EACN3S,KAAM,IAEhB,EAAK7I,aAAe,EAAKA,aAAaC,KAAlB,gBACd,EAAKmc,oBAAsB,EAAKA,oBAAoBnc,KAAzB,gBAPZ,E,gFAWAwb,GAEX1f,KAAKP,MAAMygB,eAAiBR,EAAUQ,cACtClgB,KAAKC,SAAS,CAACwf,MAAM,M,mCAIhBjb,GACT,IAAI0N,EAAQ1N,EAAMC,OAAO3D,GAAG4M,MAAM,KAAK,GACvC1N,KAAKP,MAAM6gB,cAAc,OAAQpO,EAAO1N,EAAMC,OAAOC,S,0CAGrC6b,EAAU/b,GAC1BxE,KAAKP,MAAM6gB,cAAc,eAAgBC,EAAU/b,EAAMC,OAAOC,S,oCAI5D1E,KAAK2S,aACmB,QAApB3S,KAAKN,MAAMoN,KACX9M,KAAKP,MAAM6gB,cAAc,OAEzBtgB,KAAKP,MAAM6gB,cAAc,QAE7BtgB,KAAKC,SAAS,CAACwf,MAAM,EAAO3b,SAAU,GAAIgJ,KAAM,Q,sCAKhDzN,OAAOwT,QAAQ,2EACf7S,KAAKP,MAAM6gB,cAAc,UACzBtgB,KAAKC,SAAS,CAACwf,MAAM,EAAO3b,SAAU,GAAIgJ,KAAM,Q,iCAKpD,MAA+C,KAA3C9M,KAAKP,MAAM0gB,eAAehK,cAC1B9W,OAAOsa,MAAM,iDACN,GACoC,KAApC3Z,KAAKP,MAAM0gB,eAAe1K,OACjCpW,OAAOsa,MAAM,4CACN,GACoC,KAApC3Z,KAAKP,MAAM0gB,eAAeL,OACjCzgB,OAAOsa,MAAM,yDACN,GACsC,KAAtC3Z,KAAKP,MAAM0gB,eAAepJ,UACjC1X,OAAOsa,MAAM,uDACN,K,+BAKL,IAAD,OACL,OACA,oCACI,kBAACtY,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAWlV,KAAKP,MAAM0gB,gBAAkBngB,KAAKP,MAAM0gB,eAAehK,aAAgBnW,KAAKP,MAAM0gB,eAAehK,aAAe,oBAC3InW,KAAKN,MAAM+f,KAWT,oCACI,kBAACvc,EAAA,EAAD,CAAQT,QAAQ,UAAUvB,MAAO,CAACgU,MAAO,QAAS6K,WAAY,QAAS5c,QAAS,kBAAM,EAAKqd,gBAA3F,QAGqB,QAApBxgB,KAAKN,MAAMoN,KACZ,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,SAASvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAKsd,kBAAtE,UAGE,MAlBN,oCAAIzgB,KAAKP,MAAMygB,cAAgBlgB,KAAKP,MAAM0gB,gBAAkBngB,KAAKP,MAAM0gB,eAAerf,GAClF,kBAACoC,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAKlD,SAAS,CAACwf,MAAM,EAAM3S,KAAM,WAAhG,gBAIA,kBAAC5J,EAAA,EAAD,CAAQT,QAAQ,OAAOvB,MAAO,CAACgU,MAAO,SAAU/R,QAAS,kBAAM,EAAKlD,SAAS,CAACwf,MAAM,EAAM3S,KAAM,UAAhG,iBAiBZ,kBAACzL,EAAA,EAAKE,KAAN,KACMvB,KAAKN,MAAM+f,KAYT,kBAACrQ,GAAA,EAAD,KAAO,+BACH,4BACI,8CACA,4BACI,kBAAC7J,EAAA,EAAKM,QAAN,CAAc/E,GAAG,qBAAqBiF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM0gB,eAAehK,iBAG5G,4BACI,uCACA,4BACI,kBAAC5Q,EAAA,EAAKM,QAAN,CAAc/E,GAAG,cAAciF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM0gB,eAAe1K,UAGrG,4BACI,uCACA,4BACI,kBAAClQ,EAAA,EAAKM,QAAN,CAAc/E,GAAG,cAAciF,SAAU/F,KAAKiE,aAAcS,MAAO1E,KAAKP,MAAM0gB,eAAeL,UAGrG,4BACI,kDACC9f,KAAKP,MAAM0gB,eAAepJ,QAAQ/J,KAAI,SAAC+J,EAAQ3J,GAAT,OAAmB,kBAAC7H,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBiF,SAAU,SAACgJ,GAAD,OAAO,EAAKsR,oBAAoBtJ,EAAShI,IAAIrK,MAAOqS,OACzJ,kBAACxR,EAAA,EAAKM,QAAN,CAAc/E,GAAG,gBAAgBiF,SAAU,SAACgJ,GAAD,OAAO,EAAKsR,oBAAoB,KAAMtR,SAjCzF,kBAACK,GAAA,EAAD,KAAO,+BACH,4BACI,uCACA,4BAAMpP,KAAKP,MAAMygB,cAAgBlgB,KAAKP,MAAMwW,SAASjW,KAAKP,MAAMygB,cAAiBlgB,KAAKP,MAAMwW,SAASjW,KAAKP,MAAMygB,cAAczK,MAAQ,OAE1I,4BACI,8CACA,4BAAMzV,KAAKP,MAAMygB,cAAgBlgB,KAAKP,MAAMwW,SAASjW,KAAKP,MAAMygB,cAAiBlgB,KAAKP,MAAMwW,SAASjW,KAAKP,MAAMygB,cAAcJ,MAAQ,e,GApG5Ine,aAyJPqE,eAAWpE,aAjBF,SAAAlC,GAAK,MAAK,CAC9BygB,eAAgBzgB,EAAMygB,eACtBlK,SAAUvW,EAAMuW,aAGO,SAAAnU,GAAQ,MAAK,CACpCwe,cAAe,SAACxT,GAAD,IAAOoF,EAAP,uDAAa,KAAMxN,EAAnB,uDAAyB,KAAzB,OAAkC5C,EAAS,CACtDE,KAAM,eACNC,QAAS,CACLD,KAAM,UACN8K,KAAMA,EACNoF,MAAOA,EACPxN,MAAOA,SAKO9C,CAA6Cwe,KCtJjEM,G,YACF,WAAYjhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,yEAMPihB,GACR3gB,KAAKP,MAAMmhB,KAAK,GAAID,K,mCAGX7f,EAAI6f,GACb3gB,KAAKP,MAAMmhB,KAAK9f,EAAI6f,K,uCAGN,IAAD,OACT3L,EAAO,GACXA,EAAKlQ,KAAK,kBAAC5B,EAAA,EAAD,CACIT,QAAS,QACTU,QAAS,kBAAM,EAAK0d,YAAY,KAChCpa,IAAK,IAHT,wBAOVuO,EAAKlQ,KAAK,wBAAI2B,IAAK,WACnB,IAVa,iBAUR,IAAMka,EAAO,KACd3L,EAAKlQ,KAAK,kBAACyV,GAAA,EAAUC,KAAX,CACNC,OAAQ,EAAKhb,MAAMygB,eAAiBS,EAAQ7f,GAC5CqC,QAAS,kBAAM,EAAK0d,YAAYF,EAAQ7f,KACxC2F,IAAKka,EAAQ7f,IAEZ6f,EAAQxK,gBANjB,MAAsBtP,OAAOC,OAAO9G,KAAKP,MAAMwW,UAA/C,eAA2D,IAS3D,OAAOjB,I,wCAGQ,IAAD,OACVA,EAAO,GACPiB,EAAWpP,OAAOC,OAAO9G,KAAKP,MAAMwW,UACR,KAA5BjW,KAAKP,MAAMygB,eACXjK,EAAW,CAACjW,KAAKP,MAAMwW,SAASjW,KAAKP,MAAMygB,gBAJjC,2BAMd,IANc,IAMd,EANc,iBAMHS,EANG,QAOJG,EAAYja,OAAOC,OAAO,EAAKrH,MAAMqhB,WAAW/Z,QAAO,SAAAiP,GAAC,OAAIA,EAAErV,aAAeggB,EAAQ7f,MAPjF,uBAQV,IARU,IAQV,EARU,iBAQCe,EARD,QASNmT,EAAKlQ,KAAK,kBAACyV,GAAA,EAAUC,KAAX,CACNC,OAAQ,EAAKhb,MAAMkgB,gBAAkB9d,EAASf,GAC9CqC,QAAS,kBAAM,EAAK4d,aAAalf,EAASf,GAAI6f,EAAQ7f,KACtD2F,IAAK5E,EAASf,IAEbe,EAASoB,WAAa,IAAMpB,EAASoK,aAN9C,EAAuB6U,EAAvB,+CAAmC,IARzB,oFAMd,EAAsB7K,EAAtB,+CAAiC,IANnB,kFAkBd,OAAOjB,I,+BAIP,OACI,kBAAC9P,EAAA,EAAD,CAAKhE,MAAO,CAAC8Y,YAAY,OAAQC,aAAa,OAAQzO,OAAQ,SAC1D,kBAAC1I,EAAA,EAAD,CAAKke,GAAI,EAAG9f,MAAO,CAACsK,OAAQ,SACxB,kBAACnK,EAAA,EAAD,CAAMH,MAAO,CAACsK,OAAQ,SAClB,kBAACnK,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,aAEJ,kBAAC7T,EAAA,EAAKE,KAAN,CAAWL,MAAO,CAACsO,SAAU,WACzB,kBAAC+K,GAAA,EAAD,KACKva,KAAKihB,qBAKtB,kBAACne,EAAA,EAAD,CAAKke,GAAI,EAAG9f,MAAO,CAACsK,OAAQ,SACxB,kBAACnK,EAAA,EAAD,CAAMH,MAAO,CAACsK,OAAQ,SAClB,kBAACnK,EAAA,EAAKC,OAAN,KACI,wBAAIJ,MAAO,CAACgU,MAAM,SAAlB,cAEJ,kBAAC7T,EAAA,EAAKE,KAAN,CAAWL,MAAO,CAACsO,SAAU,WACzB,kBAAC+K,GAAA,EAAD,KACKva,KAAKkhB,sBAKtB,kBAACpe,EAAA,EAAD,CAAKke,GAAI,EAAG9f,MAAO,CAACsK,OAAQ,SACxB,kBAACtG,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KAAK,kBAACzB,EAAA,EAAD,KACD,kBAAC,GAAD,CAAS6e,aAAclgB,KAAKP,MAAMygB,kBAG1C,6BACA,kBAAChb,EAAA,EAAD,KACI,kBAACpC,EAAA,EAAD,KAAK,kBAACzB,EAAA,EAAD,KACD,kBAAC,GAAD,CAAU6e,aAAclgB,KAAKP,MAAMygB,aAAcP,cAAe3f,KAAKP,MAAMkgB,yB,GA9FnFhe,aA4HLC,gBArBS,SAAAlC,GAAK,MAAK,CAC9BuW,SAAUvW,EAAMuW,SAChB6K,UAAWphB,EAAMohB,UACjBZ,aAAcxgB,EAAMqD,MAAMmd,aAC1BP,cAAejgB,EAAMqD,MAAM4c,kBAGJ,SAAA7d,GAAQ,MAAK,CACpCqf,MAAO,kBAAMrf,EAAS,CAClBE,KAAM,aACNC,QAAS,QAEb2e,KAAM,SAAC9f,EAAI6f,GAAL,OAAiB7e,EAAS,CAC5BE,KAAM,aACNC,QAAS,CACLnB,GAAIA,EACJ6f,QAASA,SAKN/e,CAA6C8e,ICrItDhK,G,YACF,WAAYjX,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAEnB,EAAKuE,aAAe,EAAKA,aAAaC,KAAlB,gBAJC,E,0EAOTM,M,+BASN,OACI,+E,GAlBQ7C,aA+BLC,gBANS,SAAAlC,GAAK,MAAK,MAGP,SAAAoC,GAAQ,MAAK,KAGzBF,CAA6C8U,ICVtD0K,G,iLAGE,OACI,yBAAKnc,UAAU,OACX,kBAAC,IAAD,KACI,0BACIoc,IAAI,aACJC,KAAK,wEACLC,UAAU,0EACVC,YAAY,cAEd1hB,IAAOC,KAAK,SAEVC,KAAKP,MAAMgiB,OACP,6BACI,kBAAC,IAAD,CACI3gB,GAAG,gBACH4gB,iBAAkB5hB,IAAOC,KAAK,mBAC9B4hB,UAAW,CAAC,WAEZ,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3gB,KAAK,aAAaqT,UAAWuN,KACpC,kBAAC,IAAD,CAAO5gB,KAAK,aAAaqT,UAAW9B,KACpC,kBAAC,IAAD,CAAOvR,KAAK,qBAAqBqT,UAAW+D,KAC5C,kBAAC,IAAD,CAAOpX,KAAK,mBAAmBqT,UAAW+E,KAC1C,kBAAC,IAAD,CAAOpY,KAAK,YAAYqT,UAAWP,KACnC,kBAAC,IAAD,CAAO9S,KAAK,mBAAmBqT,UAAWqH,KAC1C,kBAAC,IAAD,CAAO1a,KAAK,UAAUqT,UAAWwH,KACjC,kBAAC,IAAD,CAAO7a,KAAK,WAAWqT,UAAWyK,KAClC,kBAAC,IAAD,CAAO9d,KAAK,SAASqT,UAAWqM,KAChC,kBAAC,IAAD,CAAO1f,KAAK,IAAIqT,UAAWqC,QAIrC,kBAAC,EAAD,MAvBN,kBAAC,EAAD,Y,GAbN/U,aAmDHC,gBARS,SAAAlC,GAAK,MAAK,CAC9BuG,cAAevG,EAAMuG,cACrBwb,OAAQ/hB,EAAM+hB,WAGS,SAAA3f,GAAQ,MAAK,KAGzBF,CAA6Cwf,IC/DxCS,QACW,cAA7BxiB,OAAOC,SAASF,UAEe,UAA7BC,OAAOC,SAASF,UAEhBC,OAAOC,SAASF,SAAS0iB,MACvB,2D,iECDAC,GAAmB,CACrBhR,KAAM,GACND,OAAQ,GACR+D,OAAQ,GACRC,KAAM,GACNpV,MAAO,GACPqV,IAAK,GACLE,qBAAsB,GACtBtM,YAAa,CACTC,IAAK,EACL8C,IAAK,IAIPsW,GAAmB,CACrB5Q,WAAY,GACZD,KAAM,GACN+F,MAAO,GACPhG,GAAI,GACJsG,UAAW,GACXJ,eAAgB,GAChBC,aAAc,GACdC,UAAW,GACXC,eAAgB,EAChBJ,MAAO,EACP1F,QAAS,IAGPwQ,GAAqB,WAAqB,IAApBhU,EAAmB,uDAAb,SAC9B,MAAO,CACHA,IAAKA,EACLC,MAAO,GACPC,IAAK,KAIP+T,GAAgB,CAClBphB,GAAI,GACJ8M,UAAW,GACXuB,mBAAoB,GACpB8G,SAAU,GACVtW,OAAQ,SACR6N,cAAe,CACXvK,WAAY,GACZgJ,UAAW,GACXwJ,MAAO,GACPzC,aAAc,GACdC,WAAY,GACZH,wBAAyB,GACzB0D,SAAU,IAEdhB,kBAAmB,CACfvS,WAAY,GACZgJ,UAAW,GACXwJ,MAAO,GACPzC,aAAc,GACdC,WAAY,GACZH,wBAAyB,GACzB4C,aAAc,IAElByC,UAAW,CACPlV,WAAY,GACZgJ,UAAW,GACXwJ,MAAO,GACPzC,aAAc,GACdC,WAAY,GACZH,wBAAyB,IAE7BpE,UAAW,CAACqT,IACZxQ,eAAgB,CACZoF,UAAW,GACXnF,aAAc,GACdoF,iBAAkB,GAClBnF,QAAS,IAEbT,SAAU,CAACgR,IACXhU,gBAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGhB,KAAI,SAAAiB,GAAG,OAAIgU,GAAmBhU,MACrE6I,gBAAiB,CACbC,QAAS,KAIXoL,GAAa,CACfxiB,OAAQ,GACRmB,GAAI,GACJwI,MAAO,CACHrG,WAAY,GACZgJ,UAAW,GACXnL,GAAI,IAER+H,OAAQ,CACJ5F,WAAY,GACZgJ,UAAW,GACXnL,GAAI,GACJsR,QAAS4P,GACTI,iBAAkB,IAEtBhb,UAAW,CACPC,OAAQ,CACJsJ,QAAS,GACTrJ,KAAM,GACNmK,QAAS,GACT9I,YAAa,IAEjBf,QAAS,CACL+I,QAAS,GACTrJ,KAAM,GACNmK,QAAS,GACT9I,YAAa,KAGrB3B,UAAW,CACPrG,WAAY,GACZ0I,QAAS,CACLR,OAAQ,GACRS,MAAO,IAEXK,WAAY,CACRd,OAAQ,GACRS,MAAO,IAEXyJ,kBAAkB,EAClBsP,QAAS,GACTpb,KAAM,GACNqK,QAAS,GACTnI,gBAAiB,CACbmZ,QAAS,GACTlZ,UAAW,IAEfwI,KAAM,CACFuB,QAAQ,EACRoP,aAAc,OACd1Q,UAAW,GACXI,WAAY,MAKlBuQ,GAAgB,CAClB1hB,GAAI,GACJqV,aAAc,GACdV,MAAO,GACPqK,MAAO,GACP/I,QAAS,GACT0L,SAAU,IAGRC,GAAiB,CACnB5hB,GAAI,GACJmC,WAAY,GACZgJ,UAAW,GACXwJ,MAAO,GACPqK,MAAO,GACPhc,SAAU,GACVD,SAAU,GACVlD,WAAY,IAGVgiB,GAAe,CACjB1c,eAAe,EACfwb,QAAQ,EACR5f,SAAU,CACNoB,WAAY,GACZgJ,UAAW,GACXtL,WAAY,IAEhBsV,SAAU,GACVpJ,MAAO,GACPtG,MAAO,GACPua,UAAW,GAEXzL,eAAgBuN,KAAEC,UAAUX,IAC5BnW,YAAa6W,KAAEC,UAAUV,IACzBhC,eAAgByC,KAAEC,UAAUL,IAC5B3C,gBAAgB+C,KAAEC,UAAUH,IAC5B3f,MAAO,CACHmd,aAAc,GACdP,cAAe,KAwfRmD,GAjfQ,WAAmC,IAAlCpjB,EAAiC,uDAAzBijB,GAAcI,EAAW,uCACrD,OAAQA,EAAO/gB,MACX,IAAK,aAED,OADAkI,QAAQC,IAAIzK,GACLA,EAGX,IAAK,iBACD,IAAIsjB,EAAWJ,KAAEC,UAAUnjB,GAC3B,OAAOsjB,EAGX,IAAK,eACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAK3B,OAJAsjB,EAASnhB,SAASkB,MAAsC,UAA9BggB,EAAO9gB,QAAQtB,WACzCqiB,EAASnhB,SAASf,GAAKiiB,EAAO9gB,QAAQnB,GACtCkiB,EAASnhB,SAASoB,WAAa8f,EAAO9gB,QAAQgB,WAC9C+f,EAASnhB,SAASoK,UAAY8W,EAAO9gB,QAAQgK,UACtC+W,EAGX,IAAK,SACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAG3B,OAFAsjB,EAAS/c,eAAgB,EACzB+c,EAASvB,QAAS,EACXuB,EAGX,IAAK,OACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAC3B,OAAQqjB,EAAO9gB,QAAQC,KACnB,IAAK,SACD8gB,EAASvB,OAASsB,EAAO9gB,QAAQvB,KACjC,MACJ,IAAK,WACDsiB,EAAS/M,SAAW8M,EAAO9gB,QAAQvB,KACnC,MACJ,IAAK,QACDsiB,EAASnW,MAAQkW,EAAO9gB,QAAQvB,KAChC,MACJ,IAAK,QACDsiB,EAASzc,MAAQwc,EAAO9gB,QAAQvB,KAChC,MACJ,IAAK,YACDsiB,EAASlC,UAAYiC,EAAO9gB,QAAQvB,KAIhD,OAAOsiB,EAGX,IAAK,aACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAe3B,MAd+B,KAA3BqjB,EAAO9gB,QAAQ0e,SACfqC,EAAS7C,eAAiByC,KAAEC,UAAUL,IACtCQ,EAASjgB,MAAMmd,aAAe,KAE9B8C,EAAS7C,eAAiBzgB,EAAMuW,SAAS8M,EAAO9gB,QAAQ0e,SACxDqC,EAASjgB,MAAMmd,aAAe6C,EAAO9gB,QAAQ0e,SAEvB,KAAtBoC,EAAO9gB,QAAQnB,IACfkiB,EAASnD,gBAAkB+C,KAAEC,UAAUH,IACvCM,EAASjgB,MAAM4c,cAAgB,KAE/BqD,EAASnD,gBAAkBngB,EAAMohB,UAAUiC,EAAO9gB,QAAQnB,IAC1DkiB,EAASjgB,MAAM4c,cAAgBoD,EAAO9gB,QAAQnB,IAE3CkiB,EAGX,IAAK,eACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAC3B,GAA4B,aAAxBqjB,EAAO9gB,QAAQD,KACf,OAAQ+gB,EAAO9gB,QAAQ6K,MACnB,IAAK,MACD1M,IAAMuE,KAAKpF,EAAW,+BAAgC,CAACsC,SAAUmhB,EAASnD,iBAAkB,CACxFvf,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACjE+hB,EAASnD,gBAAgB/e,GAAKF,EAASF,KAAKI,GAE5CkiB,EAASlC,UAAUlgB,EAASF,KAAKI,IAAMkiB,EAASnD,mBAEpD,MAEJ,IAAK,OAC4B,aAAzBkD,EAAO9gB,QAAQiQ,MACf8Q,EAASnD,gBAAT,SAAuCoD,KAAOC,SAASH,EAAO9gB,QAAQyC,MAAO,IAE7Ese,EAASnD,gBAAgBkD,EAAO9gB,QAAQiQ,OAAS6Q,EAAO9gB,QAAQyC,MAEpE,MAEJ,IAAK,OACD,IAAIye,EAAUP,KAAEC,UAAUG,EAASnD,iBAGnCzf,IAAMgjB,IAAI7jB,EAAW,+BAAgC,CAACsC,SAAUshB,GAAU,CACtE7iB,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAACK,GACLd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACjE+hB,EAASlC,UAAUkC,EAASnD,gBAAgB/e,IAA5C,eAAsDkiB,EAASnD,gBAA/D,GAAmFsD,MAGvF,MAEJ,IAAK,SACD/iB,IAAMijB,OAAO9jB,EAAW,+BAAgC,CACpDmB,KAAM,CAAC4iB,YAAaN,EAASnD,gBAAgB/e,IAC7CR,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAACK,GACLd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,cAC1D+hB,EAASlC,UAAUkC,EAASnD,gBAAgB/e,IACnDkiB,EAAS7C,eAAiByC,KAAEC,UAAUL,IACtCQ,EAASnD,gBAAkB+C,KAAEC,UAAUL,YAIhD,GAA4B,YAAxBO,EAAO9gB,QAAQD,KACtB,OAAQ+gB,EAAO9gB,QAAQ6K,MACnB,IAAK,MACD1M,IAAMuE,KAAKpF,EAAW,6BAA8B,CAACohB,QAASqC,EAAS7C,gBAAiB,CACpF7f,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,OACjE+hB,EAAS7C,eAAerf,GAAKF,EAASF,KAAKI,GAC3CkiB,EAAS/M,SAASrV,EAASF,KAAKI,IAAMkiB,EAAS7C,eAC/C6C,EAASjgB,MAAMmd,aAAetf,EAASF,KAAKI,GAC5C,GAAKyiB,iBAET,MAEJ,IAAK,OACDP,EAAS7C,eAAe4C,EAAO9gB,QAAQiQ,OAAS6Q,EAAO9gB,QAAQyC,MAC/D,MAEJ,IAAK,eACD,IAAM0I,EAAQ4V,EAAS7C,eAAepJ,QAAQkF,QAAQ8G,EAAO9gB,QAAQiQ,OACjE9E,GAAS,GACT4V,EAAS7C,eAAepJ,QAAQyM,OAAOpW,EAAO,GAE9C2V,EAAO9gB,QAAQyC,OAASqe,EAAO9gB,QAAQyC,MAAMiJ,OAAS,GACtDqV,EAAS7C,eAAepJ,QAAQjS,KAAKie,EAAO9gB,QAAQyC,OAExD,MAEJ,IAAK,OACDtE,IAAMgjB,IAAI7jB,EAAW,6BAA8B,CAACohB,QAASqC,EAAS7C,gBAAiB,CACnF7f,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAGrE+hB,EAAS/M,SAAS+M,EAAS7C,eAAerf,IAAM8hB,KAAEC,UAAUG,EAAS7C,gBACrE,MAEJ,IAAK,SACG6C,EAASlC,YAAeja,OAAOkD,KAAKiZ,EAASlC,WAAWvM,SAASyO,EAAS7C,eAAerf,KACzFV,IAAMijB,OAAO9jB,EAAW,6BAA8B,CAClDmB,KAAM,CAACC,WAAYqiB,EAAS7C,eAAerf,IAC3CR,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,iBAE9D+hB,EAASrC,QAAQqC,EAAS7C,eAAerf,IAChDkiB,EAAS7C,eAAiByC,KAAEC,UAAUL,IACtCQ,EAASnD,gBAAkB+C,KAAEC,UAAUL,IACvC,GAAKe,eAILlkB,OAAOsa,MAAM,oFAK7B,OAAOqJ,EAGX,IAAK,WACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASnW,MAAMkW,EAAO9gB,QAAQnB,IAAOiiB,EAAO9gB,QACrC+gB,EAGX,IAAK,uBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAAS3N,eAAiBuN,KAAEC,UAAUX,IAC/Bc,EAGX,IAAK,kBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAAS3N,eAAiB0N,EAAO9gB,QAC1B+gB,EAGX,IAAK,gBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASS,cAAgBV,EAAO9gB,QACzB+gB,EAGX,IAAK,eACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GACvB,OAAQqjB,EAAO9gB,QAAQnB,IACnB,IAAK,YACDkiB,EAAS3N,eAAe0N,EAAO9gB,QAAQnB,IAAMiiB,EAAO9gB,QAAQyC,MAC5D,MACJ,IAAK,qBACDse,EAAS3N,eAAe0N,EAAO9gB,QAAQnB,IAAMiiB,EAAO9gB,QAAQyC,MAC5Dse,EAAS3N,eAAeY,SAAW,CAAC8M,EAAO9gB,QAAQyC,OACnD,MACJ,IAAK,cACDse,EAAS3N,eAAe3G,UAAU5J,KAAK8d,KAAEC,UAAUd,KACnD,MACJ,IAAK,iBACDiB,EAAS3N,eAAe3G,UAAU8U,OAAOT,EAAO9gB,QAAQyC,MAAO,GAC/D,MACJ,IAAK,cACDse,EAAS3N,eAAerE,SAASlM,KAAK8d,KAAEC,UAAUb,KAClD,MACJ,IAAK,iBACDgB,EAAS3N,eAAerE,SAASwS,OAAOT,EAAO9gB,QAAQyC,MAAO,GAC9D,MACJ,IAAK,gBACDse,EAAS3N,eAAerH,gBAAgBlJ,KAAK8d,KAAEC,UAAUZ,OACzD,MACJ,IAAK,mBACDe,EAAS3N,eAAerH,gBAAgBwV,OAAOT,EAAO9gB,QAAQyC,MAAO,GACrE,MACJ,QACgC,cAAxBqe,EAAO9gB,QAAQD,KACyB,QAApC+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,GAC7BsV,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAI/E,YAAYoa,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAMqV,EAAO9gB,QAAQyC,MACjG,QAApCqe,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,GACpCsV,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAI/E,YAAYoa,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAMqV,EAAO9gB,QAAQyC,MAE5Ise,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAIqV,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAMqV,EAAO9gB,QAAQyC,MAErG,aAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAIqV,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAMqV,EAAO9gB,QAAQyC,MACjG,oBAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAIqV,EAAO9gB,QAAQnB,GAAG4M,MAAM,KAAK,IAAMqV,EAAO9gB,QAAQyC,MAEhIse,EAAS3N,eAAe0N,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQnB,IAAMiiB,EAAO9gB,QAAQyC,MAIjG,OAAOse,EAGX,IAAK,YACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAC3B,GAA4B,SAAxBqjB,EAAO9gB,QAAQD,KACfghB,EAASjX,YAAY/E,UAAUC,KAAO8b,EAAO9gB,QAAQyC,WAClD,GAA4B,YAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAASjX,YAAY/E,UAAUsK,QAAUyR,EAAO9gB,QAAQyC,WACrD,GAA4B,eAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAASjX,YAAY/E,UAAU4K,KAAK8R,WAAaX,EAAO9gB,QAAQyC,WAC7D,GAA4B,iBAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAASjX,YAAY/E,UAAU4K,KAAK2Q,aAAeQ,EAAO9gB,QAAQyC,WAC/D,GAA4B,qBAAxBqe,EAAO9gB,QAAQD,KACtBghB,EAASjX,YAAY/E,UAAU+L,iBAAmBgQ,EAAO9gB,QAAQyC,WAC9D,GAA4B,YAAxBqe,EAAO9gB,QAAQD,KAAoB,CAC1C,IAAIoQ,EAAU4Q,EAASnW,MAAMkW,EAAO9gB,QAAQiQ,OAAOlB,SAASjK,QAAO,SAACkK,GAChE,OAAOA,EAAIC,KAAO6R,EAAO9gB,QAAQyC,SAClC,GACHse,EAASjX,YAAYlD,OAAOuJ,QAAUA,OACnC,GAA4B,mBAAxB2Q,EAAO9gB,QAAQD,KAA2B,CACjD,IAAI8K,EAAOiW,EAAO9gB,QAAQiQ,MAAMxE,MAAM,KACtC,GAAgB,QAAZZ,EAAK,GACW,WAAZA,EAAK,GACLkW,EAASjX,YAAY/E,UAAU4K,KAAKC,UAAYkR,EAAO9gB,QAAQyC,MAC5C,YAAZoI,EAAK,KACZkW,EAASjX,YAAY/E,UAAU4K,KAAKK,WAAa8Q,EAAO9gB,QAAQyC,WAEjE,CACH,IAAIif,EAAUZ,EAAO9gB,QAAQyC,MAAMgJ,MAAM,KACrCiD,EAAUjR,EAAMmN,MAAM8W,EAAQ,IAAIjV,UAAU3H,QAAO,SAAC+G,GACpD,OAAOA,EAAEgD,SAAW6S,EAAQ,MAC7B,GACa,WAAZ7W,EAAK,IACLkW,EAASjX,YAAY3E,UAAU2b,EAAO9gB,QAAQiQ,OAAOvB,QAAUA,EAAQG,OACvEkS,EAASjX,YAAY3E,UAAU2b,EAAO9gB,QAAQiQ,OAAOvJ,YAAcgI,EAAQhI,YAC3Eqa,EAASjX,YAAY/E,UAAU4K,KAAKC,WAAY,GAC7B,YAAZ/E,EAAK,KACZkW,EAASjX,YAAY3E,UAAU2b,EAAO9gB,QAAQiQ,OAAOvB,QAAUA,EAAQG,OACvEkS,EAASjX,YAAY3E,UAAU2b,EAAO9gB,QAAQiQ,OAAOvJ,YAAcgI,EAAQhI,YAC3Eqa,EAASjX,YAAY/E,UAAU4K,KAAKK,YAAa,SAIzD+Q,EAASjX,YAAY3E,UAAU2b,EAAO9gB,QAAQD,MAAM+gB,EAAO9gB,QAAQiQ,OAAS6Q,EAAO9gB,QAAQyC,MAE/F,OAAOse,EAGX,IAAK,uBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAY3B,MAX4B,UAAxBqjB,EAAO9gB,QAAQD,MACfghB,EAASjX,YAAYzC,MAAMrG,WAAa8f,EAAO9gB,QAAQF,KAAKyL,cAAcvK,WAC1E+f,EAASjX,YAAYzC,MAAM2C,UAAY8W,EAAO9gB,QAAQF,KAAKyL,cAAcvB,UACzE+W,EAASjX,YAAYzC,MAAMxI,GAAKiiB,EAAO9gB,QAAQF,KAAKjB,GACpDkiB,EAASjX,YAAY/E,UAAUrG,WAAaoiB,EAAO9gB,QAAQF,KAAKoN,oBACjC,WAAxB4T,EAAO9gB,QAAQD,OACtBghB,EAASjX,YAAYlD,OAAO5F,WAAa8f,EAAO9gB,QAAQF,KAAKyL,cAAcvK,WAC3E+f,EAASjX,YAAYlD,OAAOoD,UAAY8W,EAAO9gB,QAAQF,KAAKyL,cAAcvB,UAC1E+W,EAASjX,YAAYlD,OAAOF,YAAcoa,EAAO9gB,QAAQF,KAAK2M,UAAU,GAAG/F,YAC3Eqa,EAASjX,YAAYlD,OAAO/H,GAAKiiB,EAAO9gB,QAAQF,KAAKjB,IAElDkiB,EAGX,IAAK,cACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAEvB0N,EAAQ4V,EAAS3N,eAAevU,GAWpC,OAVIsM,IACA4V,EAASnW,MAAMO,GAAS4V,EAAS3N,eACjCjV,IAAMgjB,IAAI7jB,EAAW,uBAAwB,CAACwC,KAAMihB,EAAS3N,gBAAiB,CAC1E/U,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,WAGlE+hB,EAGX,IAAK,kBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAe3B,OAdAU,IAAMwjB,MAAMrkB,EAAW,8BAA+B,CAClDskB,QAASb,EAAS3N,eAAevU,GACjCnB,OAAQ,YACT,CACCW,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAErE+hB,EAAS3N,eAAe1V,OAAS,WAGjCqjB,EAASnW,MAAMmW,EAAS3N,eAAevU,IAAInB,OAAS,SAC7CqjB,EAEX,IAAK,gBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAa3B,OAZAU,IAAMwjB,MAAMrkB,EAAW,8BAA+B,CAACskB,QAASb,EAAS3N,eAAevU,GAAInB,OAAQ,UAAW,CAC3GW,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAErE+hB,EAAS3N,eAAe1V,OAAS,SAGjCqjB,EAASnW,MAAMmW,EAAS3N,eAAevU,IAAInB,OAAS,SAE7CqjB,EAEX,IAAK,oBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAW3B,OAVAU,IAAMijB,OAAO9jB,EAAW,uBAAwB,CAC5CmB,KAAM,CAACmjB,QAASb,EAAS3N,eAAevU,IACxCR,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,iBAE9D+hB,EAASnW,MAAMmW,EAAS3N,eAAevU,IAC9CkiB,EAAS3N,eAAiBuN,KAAEC,UAAUX,IAC/Bc,EAGP,IAAK,cACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAU3B,OATAU,IAAMijB,OAAO9jB,EAAW,uBAAwB,CAC5CmB,KAAM,CAAC4hB,QAASS,EAAO9gB,SACvB3B,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,iBAE9D+hB,EAASzc,MAAMwc,EAAO9gB,SACtB+gB,EAGX,IAAK,YACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAW3B,OAVAU,IAAMgjB,IAAI7jB,EAAW,uBAAwB,CACzC6G,KAAM2c,EAAO9gB,SACd,CACC3B,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAErE+hB,EAASzc,MAAMwc,EAAO9gB,QAAQnB,IAAMiiB,EAAO9gB,QACpC+gB,EAEX,IAAK,kBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GACvBkb,EAASmI,EAAO9gB,QAYpB,OAXA7B,IAAMwjB,MAAMrkB,EAAW,8BAA+B,CAClD+iB,QAAS1H,EACTjb,OAAQ,YACT,CACCW,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAErE+hB,EAASzc,MAAMqU,GAAQjb,OAAS,WACzBqjB,EAGX,IAAK,kBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GACvBkb,EAASmI,EAAO9gB,QAYpB,OAXA7B,IAAMwjB,MAAMrkB,EAAW,8BAA+B,CAClD+iB,QAAS1H,EACTjb,OAAQ,UACT,CACCW,QAAS,CACL,cAAiB,UAAY8B,IAAQrC,KAAK,YAE/CQ,MAAK,SAAAK,GACJd,IAAOiB,KAAK,QAASH,EAASN,QAAQT,MAAO,CAACmB,KAAM,IAAKC,OAAQ,UAErE+hB,EAASzc,MAAMqU,GAAQjb,OAAS,SACzBqjB,EAGX,IAAK,WACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASzc,MAAMwc,EAAO9gB,QAAQnB,IAAOiiB,EAAO9gB,QACrC+gB,EAGX,IAAK,qBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASjX,YAAc6W,KAAEC,UAAUE,EAAO9gB,SACnC+gB,EAGX,IAAK,oBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAU3B,OATAsjB,EAASjX,YAAc6W,KAAEC,UAAUV,IACnCa,EAASjX,YAAY3E,UAAUQ,QAAQ+I,QAAUjR,EAAMqM,YAAY3E,UAAUC,OAAOsJ,QACpFqS,EAASjX,YAAY3E,UAAUC,OAAOsJ,QAAUjR,EAAMqM,YAAY3E,UAAUQ,QAAQ+I,QACpFqS,EAASjX,YAAY3E,UAAUQ,QAAQe,YAAcjJ,EAAMqM,YAAY3E,UAAUC,OAAOsB,YACxFqa,EAASjX,YAAY3E,UAAUC,OAAOsB,YAAcjJ,EAAMqM,YAAY3E,UAAUQ,QAAQe,YACxFqa,EAASjX,YAAY/E,UAAUC,KAAOvH,EAAMqM,YAAY/E,UAAUC,KAClE+b,EAASjX,YAAY/E,UAAUrG,WAAajB,EAAMqM,YAAY/E,UAAUrG,WACxEqiB,EAASjX,YAAYzC,MAAQ5J,EAAMqM,YAAYzC,MAC/C0Z,EAASjX,YAAY/E,UAAU4K,KAAKuB,QAAS,EACtC6P,EAGX,IAAK,cACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASjX,YAAc6W,KAAEC,UAAUE,EAAO9gB,SACnC+gB,EAGX,IAAK,oBACD,IAAIA,EAAWJ,KAAEC,UAAUnjB,GAE3B,OADAsjB,EAASjX,YAAc6W,KAAEC,UAAUV,IAC5Ba,EAGX,QACI,OAAOtjB,IC7qBnB,ICLuCijB,GDKjCmB,ICLiCnB,GDKLtjB,OAAO0kB,mBCJvBC,aAAYC,GAAStB,KDMvCuB,IAASC,OAAO,kBAAC,IAAD,CAAeC,MAAON,IAAY,kBAAC,GAAD,OAAwBpgB,SAASC,eAAe,SFwH5F,kBAAmB0gB,WACrBA,UAAUC,cAAcC,MAAMhkB,MAAK,SAAAgY,GACjCA,EAAaiM,kB",
  "file": "static/js/main.5dc52e46.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/VillageValetLogo.c991a6eb.jpg\";",
    "const apiVersion = 'v1';\r\nlet hostname = window && window.location && window.location.hostname;\r\nif (hostname === 'localhost') {\r\n    hostname += ':4200'\r\n}\r\n\r\nexport const API_ROOT = `http://${hostname}/api/${apiVersion}`;\r\n\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\"\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport {API_ROOT} from \"../modules/api\";\r\nimport cookie from 'react-cookies'\r\nimport * as jwt from \"jsonwebtoken\"\r\n\r\n\r\nclass LoadData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: 0,\r\n            message: \"\",\r\n        };\r\n    }\r\n\r\n\tcomponentDidMount() {\r\n        //Load the villages\r\n        const token = cookie.load('token')\r\n        this.setState({message: \"Loading Operator\"})\r\n        const jwtPayload = jwt.decode(token)\r\n        axios.get(API_ROOT + \"/database/operators/self\", {\r\n            headers: {\r\n                \"Authorization\": \"BEARER \" + token\r\n            }\r\n        }).then((resp) => {\r\n            this.props.updateAuth(resp.data)\r\n            if (jwtPayload.village_id === 'admin') {\r\n                axios.get(API_ROOT + \"/database/operators/all\", {\r\n                    headers: {\r\n                        \"Authorization\": \"BEARER \" + token\r\n                    }\r\n                }).then(response => {\r\n                    let data = {};\r\n                    for (const item of response.data) {\r\n                        data[item.id] = item;\r\n                    }\r\n                    this.props.load(\"operators\", data);\r\n                })\r\n            }\r\n            this.setState({message: \"Loading Village\"});\r\n            axios.get(API_ROOT + \"/database/villages/all\", {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + token\r\n                }\r\n            }).then(response => {\r\n                let data = {};\r\n                for (const item of response.data) {\r\n                    data[item.id] = item;\r\n                }\r\n                this.props.load(\"villages\", data);\r\n            }).then(() => {\r\n                this.setState({status: 20});\r\n            }).then(() => {\r\n                this.setState({message: \"Loading Users\"});\r\n                axios.get(API_ROOT + \"/database/users/all\", {\r\n                    headers: {\r\n                        \"Authorization\": \"BEARER \" + token\r\n                    }\r\n                }).then(response => {\r\n                    let data = {};\r\n                    for (const item of response.data) {\r\n                        data[item.id] = item;\r\n                    }\r\n                    this.props.load(\"users\", data);\r\n                }).then(() => {\r\n                    this.setState({status: 60});\r\n                }).then(() => {\r\n                    //Load the Rides\r\n                    this.setState({message: \"Loading Rides\"});\r\n                    axios.get(API_ROOT + \"/database/rides/all\", {\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + token\r\n                        }\r\n                    }).then(response => {\r\n                        let data = {};\r\n                        for (const item of response.data) {\r\n                            data[item.id] = item;\r\n                        }\r\n                        this.props.load(\"rides\", data);\r\n                    }).then(() => {\r\n                        this.setState({status: 80});\r\n                    }).then(() => {\r\n                        axios.get(API_ROOT + \"/admin/googlemaps\", {\r\n                            headers: {\r\n                                \"Authorization\": \"BEARER \" + token\r\n                            }\r\n                        }).then((response) => {\r\n                            cookie.save('googlemapstoken', response.data.token, {path: '/', maxAge: 3600})\r\n                            cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                            this.setState({status: 100});\r\n                        }).then(() => {\r\n                            this.props.load(\"loaded\", true);\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{padding: 100}}>\r\n                <Container>\r\n                    <Card>\r\n                    <Card.Header>Loading...</Card.Header>\r\n                        <Card.Body>\r\n                            <ProgressBar animated now={this.state.status} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    village_id: state.operator.village_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAuth: (user) => dispatch({\r\n        type: \"authenticate\",\r\n        payload: user\r\n    }),\r\n    load: (tag, data) => dispatch({\r\n        type: \"load\",\r\n        payload: {\r\n            tag: tag,\r\n            data: data\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadData);\r\n",
    "import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport cookies from \"react-cookies\"\r\n\r\nimport \"../App.css\";\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    logout() {\r\n        cookies.remove('token');\r\n        cookies.remove('googlemapstoken');\r\n        cookies.remove('is_admin');\r\n        cookies.remove('operator_id');\r\n        window.location.reload()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"light\" variant=\"light\" style={{width: \"100%\"}}>\r\n                    <Navbar.Brand>\r\n                        <Link to=\"/Dashboard\" style={{textDecoration: 'none'}}>Village Valet</Link>\r\n                    </Navbar.Brand>\r\n                    <Col>\r\n                        <Link to=\"/Scheduler\" style={{textDecoration: 'none'}}>Scheduler</Link>\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to=\"/Profiles\" style={{textDecoration: 'none'}}>Profiles</Link>\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to=\"/Ledger\" style={{textDecoration: 'none'}}>Ledger</Link>\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to=\"/Metrics\" style={{textDecoration: 'none'}}>Metrics</Link>\r\n                    </Col>\r\n                    <Col>\r\n                        {this.props.operator.admin ?\r\n                            <Link to=\"/Admin\" style={{textDecoration: 'none'}}>Admin</Link>\r\n                            : null}\r\n                    </Col>\r\n                    <Col style={{textAlign: \"right\"}}>\r\n                        <span>Operator:&nbsp;{this.props.operator.first_name}</span>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button variant=\"dark\" onClick={this.logout}> Logout </Button>\r\n                </Col>\r\n            </Navbar>\r\n            <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    operator: state.operator,\r\n    village_id: state.operator.village_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport Image from \"react-bootstrap/Image\";\r\nimport logo from \"../assets/VillageValetLogo.jpg\"\r\n\r\nimport \"../App.css\";\r\nimport cookie from 'react-cookies'\r\n\r\n\r\nimport {API_ROOT} from \"../modules/api\"\r\n\r\n// Above are all the imports for this file.\r\n// Every file will need React, Component, connect\r\n// withRouter, firestore, bcrypt relate to the specific function of this page\r\n\r\n// The seconf section of imports are React Bootstrap components.  These allow for easy styling\r\n// and layout without much need for custom CSS or HTML.\r\n\r\n// Finally, the last three imports are for the logo and custom css\r\n\r\n//Components in a react webapp are classes (for the most part)\r\nclass Login extends Component {\r\n    // The construction will be pretty constant.  The \"props\" are variables passed down from\r\n    // the components parent (through an HTML attribute)\r\n    // The state is basically the member variables of a component.\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n\t\t\tshowPassword: false,\r\n            errorMessage: \"\"\r\n        };\r\n        // You basically just need to do this if you want access to state in a functiton\r\n        // other than render\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n        this.componentWillUnmount = this.componentWillUnmount.bind(this);\r\n    }\r\n\r\n    // This is a lifecycle state function of react.  It is called every time a component loads.\r\n    // There are a couple of these methods, but DidMount is the most useful imo.\r\n    componentDidMount() {\r\n        //When the enter key is pressed while on the login page, process the login\r\n        document.addEventListener('keyup', this.key_function);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keyup', this.key_function);\r\n    }\r\n\r\n    //This was done to remove the bug that hitting enter caused the page to crash because \"login_button\" was not rendered\r\n    key_function = (k) => {\r\n        if (k.keyCode === 13) {\r\n            k.preventDefault();\r\n            document.getElementById(\"login_button\").click();\r\n        }\r\n    }\r\n\r\n    // I like to use a single handler for each \"thing\" I want a component to do.\r\n    // This function handles when a user changes the text fields on the page.  It saves\r\n    // information to the state.  I usually use this function to save information to the\r\n    // store (reducer) but the login is a niche case.\r\n    handleChange(event) {\r\n\t\tif (event.target.id === \"username\") {\r\n\t\t\tthis.setState({username: event.target.value})\r\n\t\t} else if (event.target.id === \"password\") {\r\n\t\t\tthis.setState({password: event.target.value})\r\n\t\t}\r\n\t}\r\n\r\n    // This function handles the login and is called when the login button is pressed.\r\n    // It just does some firebase calls checking against the operators table.\r\n    // The two important React things are the \"this.props.updateAuth\" and \"this.setState\"\r\n    // The first as discussed above saves things only to this component. (Updating the state\r\n    // triggers a \"re-render\", so by changing the text of errorMessage I can make it appear\r\n    // on the page without any code besides assigning a variable.)\r\n    // The this.props.updateAuth is a dispatch function (defined at the bottom of the file)\r\n    // It passes a message to the reducer stack to be \"reduced\" into the store.\r\n    handleLogin() {\r\n        axios.post(API_ROOT + \"/admin/login\", {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password\r\n        }).then((response) => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                const user = {...response.data};\r\n                this.props.updateAuth(user);\r\n                this.props.history.push('/Dashboard');\r\n                window.location.reload();\r\n            }\r\n        ).catch(error => {\r\n            this.setState({errorMessage: \"Login Failed: \" + error.response.data.error})\r\n        })\r\n    }\r\n\r\n    // render() is the bread and butter of react.  JSX (a mix of JS and HTML) is used to\r\n    // create the actual layout of the page.  This can basically be thought of as writing\r\n    // HTML and then using { } whenever you want to include code.  One example is in the second\r\n    // <Row> which includes a ternery that causes a conditional render of the <Alert> which also\r\n    // uses {this.state.errorMessage} to display the errorMessage as the elemets innerHTML\r\n    // The second example is the some of the attributes like sm={2} or onClick={this.handleLogin}\r\n    // In these cases the value of the attribue is being supplied as \"code\" instead of text\r\n    render() {\r\n        return (\r\n            <Container className=\"Login\">\r\n            <br/>\r\n            <Row>\r\n                <Col>\r\n                    <Image src={logo} className=\"Login-Logo\"/>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col>\r\n                {this.state.errorMessage ?\r\n                    <Alert variant=\"danger\">\r\n                        {this.state.errorMessage}\r\n                    </Alert>\r\n                : null}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                <Card className=\"Login-Box\">\r\n                    <Form>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>Username:</Form.Label>\r\n                            <Col>\r\n                                <Form.Control id=\"username\" placeholder=\"Username\" onChange={this.handleChange}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>Password:</Form.Label>\r\n                            <Col>\r\n                                <Form.Control type=\"password\" id=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Button id=\"login_button\" variant=\"primary\" onClick={this.handleLogin}>\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// mapStateToProps and mapDispatchToProps are part of the Redux implementation.\r\n// mapStateToProps allows you to read variables from the store\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.authenticated\r\n});\r\n\r\n//mapDispatchToProps allows you to define function that pass information to the reducer\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAuth: (user) => dispatch({\r\n        type: \"authenticate\",\r\n        payload: user\r\n    }),\r\n});\r\n\r\n//This is the export it is REQUIRED unless a compenet will never have a parent or need to be imported\r\n// Most components will not need the withRouter(), it exists here because of the forced page routing\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass RidesTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n    }\r\n\r\n    handleClick = ride => {\r\n        this.props.changeRideBreakdown(ride)\r\n    };\r\n\r\n    createTable = () => {\r\n        if (this.props.rides == null) return;\r\n        let table = [];\r\n        for (const ride of this.props.rides) {\r\n            table.push(<Row style={{padding: \"5px\"}} key={ride.id}><Button size=\"lg\" variant=\"light\" block={true}\r\n                                                                           onClick={() => this.handleClick(ride)}>{`Ride Id: ${ride.id}`}</Button></Row>)\r\n        }\r\n        return table\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {this.createTable()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeRideBreakdown: (ride) => dispatch({\r\n        type: \"active_ride\",\r\n        payload: ride,\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RidesTable);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as moment from 'moment';\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport RidesTable from \"./RidesTable\";\r\n\r\nclass ActiveRides extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n    }\r\n\r\n    filterRides() {\r\n        if (this.props.rides) {\r\n            return Object.values(this.props.rides).filter(ride => ride.ride_data.date ===\r\n                moment().format('YYYY-MM-DD')\r\n                && moment(ride.locations.pickup.time, 'HH:mm').isSameOrBefore({\r\n                    h: moment().hours(),\r\n                    m: moment().minutes()\r\n                }) &&\r\n                moment(ride.locations.dropoff.time, \"HH:mm\").isSameOrAfter({\r\n                    h: moment().hours(),\r\n                    m: moment().minutes()\r\n                }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>Active Rides</Card.Header>\r\n                <Card.Body style={{alignItems: 'center'}}>\r\n                    <RidesTable rides={this.filterRides()}/>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    rides: state.rides\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActiveRides);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\"\r\nimport RidesTable from \"./RidesTable\";\r\nimport * as moment from \"moment\";\r\n\r\n\r\nclass UpcomingRides extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n    }\r\n\r\n    filterRides() {\r\n        if (this.props.rides) {\r\n            return Object.values(this.props.rides).filter(ride => ride.ride_data.date ===\r\n                moment().format('YYYY-MM-DD') &&\r\n                moment(ride.locations.pickup.time, \"HH:mm\").isAfter({h: moment().hours(), m: moment().minutes()}))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>Upcoming Rides</Card.Header>\r\n                <Card.Body>\r\n                    <RidesTable rides={this.filterRides()}/>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    rides: state.rides\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpcomingRides);\r\n",
    "import React, {Component} from 'react';\r\nimport {DirectionsRenderer, DirectionsService, GoogleMap} from '@react-google-maps/api';\r\nimport * as moment from 'moment';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass MapContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            directions_cache: new Map()\r\n        };\r\n        this.locations = {};\r\n        this.timePast = false;\r\n        this.timeNow = null;\r\n        this.directionsCallback = this.directionsCallback.bind(this)\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (((nextProps.ride.locations['pickup'].geolocation !== \"\" && nextProps.ride.locations['dropoff'].geolocation !== \"\") &&\r\n            (this.props.ride.locations['pickup'].geolocation.lat !== nextProps.ride.locations['pickup'].geolocation.lat ||\r\n                this.props.ride.locations['dropoff'].geolocation.lat !== nextProps.ride.locations['dropoff'].geolocation.lat)) ||\r\n            (nextState.response != null && this.state.response !== nextState.response)\r\n        ) {\r\n            return true\r\n        }\r\n        return this.props.ride.driver.id !== nextProps.ride.driver.id;\r\n\r\n    }\r\n\r\n    convertMetersToMiles(meters) {\r\n        return Math.round((meters * 0.00062137 + Number.EPSILON) * 100) / 100\r\n    }\r\n\r\n    storeRouteInfo(response) {\r\n        if (this.props.ride.ride_data.associated_ride && this.props.ride.ride_data.associated_ride.driver_id === this.props.ride.driver.id) {\r\n            this.props.ride.ride_data.mileage.rider = this.convertMetersToMiles(response.routes[0].legs[0].distance.value);\r\n            this.props.ride.ride_data.time_total.rider = response.routes[0].legs[0].duration.value\r\n        } else {\r\n            this.props.ride.ride_data.mileage.rider = this.convertMetersToMiles(response.routes[0].legs[1].distance.value);\r\n            this.props.ride.ride_data.time_total.rider = response.routes[0].legs[1].duration.value\r\n        }\r\n        if (this.props.ride.driver.id) {\r\n            this.props.ride.ride_data.mileage.driver = this.convertMetersToMiles(response.routes[0].legs[0].distance.value) + this.convertMetersToMiles(response.routes[0].legs[1].distance.value);\r\n            this.props.ride.ride_data.time_total.driver = response.routes[0].legs[0].duration.value + response.routes[0].legs[1].duration.value;\r\n        }\r\n        this.props.updateActiveRide(this.props.ride)\r\n    }\r\n\r\n    checkTimeInPast() {\r\n        this.timeNow = moment();\r\n        if (this.props.ride.ride_data.date === '' || this.props.ride.locations.pickup.time === '') {\r\n            this.timePast = true;\r\n            return\r\n        }\r\n        this.timePast = moment(this.props.ride.ride_data.date + ' ' + this.props.ride.locations.pickup.time, \"YYYY-MM-DD HH:mm\").isBefore(this.timeNow);\r\n    }\r\n\r\n    directionsCallback(response) {\r\n        if (response !== null) {\r\n            if (response.status === 'OK') {\r\n                let key;\r\n                if ('waypoint' in Object.keys(this.locations)) {\r\n                    key = this.locations['origin'].lat + this.locations['destination'].lat + this.locations['waypoint'].location.lat\r\n                } else {\r\n                    key = this.locations['origin'].lat + this.locations['destination'].lat\r\n                }\r\n                this.storeRouteInfo(response)\r\n                this.state.directions_cache.set(key, response);\r\n                this.setState({directions_cache: this.state.directions_cache, response: response});\r\n            } else {\r\n                console.log('response: ', response)\r\n            }\r\n        }\r\n    }\r\n\r\n    locationOrder() {\r\n        if (this.props.ride.locations.dropoff == null || this.props.ride.locations.pickup == null) return;\r\n        if (this.props.ride.driver.id) {\r\n            if (this.props.ride.ride_data.associated_ride && this.props.ride.ride_data.associated_ride.driver_id === this.props.ride.driver.id) {\r\n                this.locations['origin'] = this.props.ride.locations.pickup.geolocation;\r\n                this.locations['destination'] = this.props.ride.driver.geolocation;\r\n                this.locations['waypoint'] = [{\r\n                    location: this.props.ride.locations.dropoff.geolocation,\r\n                    stopover: true\r\n                }];\r\n            } else {\r\n                this.locations['origin'] = this.props.ride.driver.geolocation;\r\n                this.locations['destination'] = this.props.ride.locations.dropoff.geolocation;\r\n                this.locations['waypoint'] = [{\r\n                    location: this.props.ride.locations.pickup.geolocation,\r\n                    stopover: true\r\n                }];\r\n            }\r\n        } else {\r\n            this.locations['origin'] = this.props.ride.locations.pickup.geolocation;\r\n            this.locations['destination'] = this.props.ride.locations.dropoff.geolocation;\r\n        }\r\n    }\r\n    makeDirections() {\r\n        if (!this.locations['origin'].lat || !this.locations['destination'].lat) {\r\n            return;\r\n        }\r\n        let key;\r\n        if ('waypoint' in Object.keys(this.locations)) {\r\n            key = this.locations['origin'].lat + this.locations['destination'].lat + this.locations['waypoint'].location.lat\r\n        } else {\r\n            key = this.locations['origin'].lat + this.locations['destination'].lat\r\n        }\r\n        if (this.state.directions_cache.has(key)) {\r\n            this.setState({\r\n                directions_cache: this.state.directions_cache,\r\n                response: this.state.directions_cache.get(key)\r\n            });\r\n            return;\r\n        }\r\n        return <DirectionsService\r\n            options={{\r\n                origin: this.locations['origin'],\r\n                destination: this.locations['destination'],\r\n                travelMode: 'DRIVING',\r\n                waypoints: this.locations['waypoint'],\r\n                optimizeWaypoints: false,\r\n                drivingOptions: {\r\n                    departureTime: this.timePast ? this.timeNow.toDate() : moment(this.props.ride.ride_data.date + ' ' + this.props.ride.locations.pickup.time, \"YYYY-MM-DD HH:mm\").toDate(),\r\n                    trafficModel: 'pessimistic'\r\n                }\r\n            }}\r\n            callback={resp => {\r\n                this.directionsCallback(resp);\r\n            }}\r\n            onLoad={directionsService => {\r\n                console.log('DirectionsService onLoad directionsService: ', directionsService)\r\n            }}\r\n            onUnmount={directionsService => {\r\n                console.log('DirectionsService onUnmount directionsService: ', directionsService)\r\n            }}\r\n        />;\r\n    }\r\n\r\n    renderDirections() {\r\n        if (!this.state.response) return;\r\n        return <DirectionsRenderer\r\n            options={{\r\n                directions: this.state.response\r\n            }}\r\n            onLoad={directionsRenderer => {\r\n                console.log('DirectionsRenderer onLoad directionsRenderer: ', directionsRenderer)\r\n            }}\r\n            onUnmount={directionsRenderer => {\r\n                console.log('DirectionsRenderer onUnmount directionsRenderer: ', directionsRenderer)\r\n            }}\r\n        />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <GoogleMap\r\n                id='map'\r\n                zoom={8}\r\n                mapContainerStyle={{width: \"100%\", height: \"100%\"}}\r\n                center={{lat: 42.6526, lng: -73.7562}}\r\n            >\r\n                {this.locationOrder()}\r\n                {this.checkTimeInPast()}\r\n                {this.locations && this.makeDirections()}\r\n                {this.renderDirections()}\r\n            </GoogleMap>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    ride: state.active_ride,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateActiveRide: (ride) => dispatch({\r\n        type: \"update_active_ride\",\r\n        payload: ride,\r\n    }),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as moment from \"moment\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass RideDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(event) {\r\n    }\r\n\r\n    displayDetails() {\r\n        if (this.props.ride.id === \"\") {\r\n            return <div/>\r\n        }\r\n        return <div>\r\n            Ride Id: {this.props.ride.id}<br/>\r\n            Rider Name: {`${this.props.ride.rider.first_name} ${this.props.ride.rider.last_name}`} <br/>\r\n            Driver Name: {`${this.props.ride.driver.first_name} ${this.props.ride.driver.last_name}`} <br/>\r\n            Date: {this.props.ride.ride_data.date} <br/>\r\n            Pickup Time: {moment(this.props.ride.locations.pickup.time, \"HH:mm\").format('hh:mm a')} <br/>\r\n            Dropoff Time: {moment(this.props.ride.locations.dropoff.time, \"HH:mm\").format('hh:mm a')} <br/>\r\n        </div>\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {this.displayDetails()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ride: state.active_ride\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RideDetails);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\"\r\nimport MapContainer from \"../google-maps/MapContainer\";\r\nimport RideDetails from \"./RideDetails\";\r\n\r\nclass RideBreakdown extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{height:'100%'}}>\r\n                <Card.Header>Ride Breakdown</Card.Header>\r\n                <Card.Body>\r\n                    <RideDetails/>\r\n                    <div style={{ position: 'relative', width: '100%', height: '300px' }}>\r\n                        <MapContainer/>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RideBreakdown);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport ActiveRides from \"./ActiveRides.js\";\r\nimport UpcomingRides from \"./UpcomingRides.js\";\r\nimport RideBreakdown from \"./RideBreakdown.js\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t}\r\n\r\n    render() {\r\n        // Three columns: upcoming rides, active rides, ride summary\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <Row>\r\n                    <Col>\r\n                        <UpcomingRides/>\r\n                    </Col>\r\n                    <Col>\r\n                        <ActiveRides/>\r\n                    </Col>\r\n                    <Col>\r\n                        <RideBreakdown/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport fuzzysort from \"fuzzysort\";\r\nimport moment from \"moment\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n/**\r\n * Profile Table\r\n * @typedef {Object} ProfileTable\r\n * @property {string} selcted_row - which row in the table has been selected (darkly highlighted on screen)\r\n */\r\nclass ProfileTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected_row: \"\",\r\n        };\r\n        this.generateTableData = this.generateTableData.bind(this);\r\n        this.generateTableHeaders = this.generateTableHeaders.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Handles when row is selected\r\n     *\r\n     * @param {Object} event - profile of row selected\r\n     */\r\n    handleSelect(event) {\r\n        //Highlight the row\r\n        this.setState({selected_row: event.target.id});\r\n\r\n        //Update the active_profile\r\n        //First convert id into index\r\n        this.props.setActiveUser(this.props.users[event.target.id]);\r\n\r\n        // If \"all\" -> open the profile\r\n        // If \"rider\" or \"driver\" -> add to active_ride\r\n        if (this.props.mode === \"all\") {\r\n            this.props.history.push('/Profiles/User/'+event.target.id);\r\n        } else {\r\n            if (this.props.mode === \"rider\") {\r\n                this.props.setRideParticipant(\"rider\", this.props.users[event.target.id]);\r\n            } else if (this.props.mode === \"driver\") {\r\n                this.props.setRideParticipant(\"driver\", this.props.users[event.target.id])\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates Profile Table Headers\r\n     *\r\n     * @returns {HTMLTableHeaderCellElement[]} Header names\r\n     */\r\n    generateTableHeaders() {\r\n        let headers;\r\n        switch (this.props.mode) {\r\n            case \"driver\":\r\n                headers = [\"Picture\", \"First Name\", \"Last Name\", \"Village\", \"Database ID\"];\r\n                break;\r\n            case \"rider\":\r\n                headers = [\"Picture\", \"First Name\", \"Last Name\", \"Village\", \"Database ID\"];\r\n                break;\r\n            case \"all\":\r\n                headers = [\"User Type\", \"Last Name\", \"First Name\", \"Village\", \"Status\", \"Database ID\"];\r\n                break;\r\n            default:\r\n                headers = [\"User Type\", \"First Name\", \"Last Name\", \"Village\", \"Database ID\"];\r\n                break;\r\n        }\r\n        return headers.map((h) => {\r\n            return <th key={h}>{h}</th>\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Generates Profile Table Body\r\n     *\r\n     * @returns {HTMLTableDataCellElement[][]} Array of rows, each row having array of user information\r\n     */\r\n    generateTableData(){\r\n        let profile_table=[];\r\n\r\n        //FIRST STEP.  Filter the users.\r\n        //Users are filtered by type and then by search term\r\n        let filtered_users;\r\n        if (this.props.search_term) {\r\n            let index = -1;\r\n            filtered_users = fuzzysort.go(this.props.search_term, Object.values(this.props.users).map((p) => {\r\n                index++;\r\n                return p.personal_info.first_name + p.personal_info.last_name + \"|\" + index;\r\n            })).filter((p) => {\r\n                // This was choosed arbitrarily... It is the match criteria index,\r\n                // More negative means a worse match\r\n                return p.score > -2000;\r\n            }).map((p) => {\r\n                //Convert back to the user objects\r\n                return Object.values(this.props.users)[p.target.split(\"|\")[p.target.split(\"|\").length-1]]\r\n            })\r\n        } else {\r\n            //If no search term, return all\r\n            filtered_users = Object.values(this.props.users);\r\n        }\r\n\r\n        //Could optimize by skipping in \"all\" case\r\n        filtered_users = filtered_users.filter((user) => {\r\n            switch(this.props.mode) {\r\n                case \"driver\":\r\n                    return user.user_type === \"driver\" && user.status === \"active\";\r\n                case \"rider\":\r\n                    return user.user_type === \"rider\" && user.status === \"active\";\r\n                case \"all\":\r\n                    return true;\r\n                default:\r\n                    return true;\r\n            }\r\n        });\r\n\r\n        // This can be optimised, but it works for now\r\n        // Estimate that sort takes 1 second per 100,000 items based on one google\r\n        if (this.props.mode === \"driver\" && this.props.active_ride.locations.pickup.time && this.props.active_ride.locations.dropoff.time) {\r\n            // Get rid of all the drivers who are not active or not driving when needed\r\n            let ride_date = moment(this.props.active_ride.ride_data.date, 'YYYY-MM-DD');\r\n            filtered_users = filtered_users.filter((a) => {\r\n                if (a.status === \"inactive\") {\r\n                    return false;\r\n                }\r\n                // make sure that they're volunteering during pickup/dropoff window\r\n                // should be making sure they are volunteering when driver leaves their house\r\n                for (let i = 0; i < a.volunteer_hours.length; i++) {\r\n                    console.log(ride_date.day() % 7, Number(a.volunteer_hours[i].day))\r\n                    if (ride_date.day() % 7 === Number(a.volunteer_hours[i].day)) {\r\n                        if (moment(a.volunteer_hours[i].start, \"HH:mm\").isBefore(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\"))\r\n                            && moment(a.volunteer_hours[i].end, \"HH:mm\").isAfter(moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\"))) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false\r\n            });\r\n            filtered_users = filtered_users.filter((a) => {\r\n                for (let ride of Object.values(this.props.rides)) {\r\n                    let driver_leaves_home_time = moment(ride.locations.dropoff.time, \"HH:mm\").subtract(ride.ride_data.time_total.driver, 'second');\r\n                    if (ride_date === moment(ride.ride_data.date, \"YYYY-MM-DD\") && a.id === ride.driver.id && ride.rider.id === this.props.active_ride.rider.id) {\r\n                        if (driver_leaves_home_time.isAfter(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\"))\r\n                            && driver_leaves_home_time.isBefore(moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\"))) {\r\n                            return false;\r\n                        }\r\n                        if (moment(ride.locations.dropoff.time, \"HH:mm\").isAfter(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\"))\r\n                            && moment(ride.locations.dropoff.time, \"HH:mm\").isBefore(moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\"))) {\r\n                            return false;\r\n                        }\r\n                    } else if (ride_date === moment(ride.ride_data.date, \"YYYY-MM-DD\") && a.id === ride.driver.id) {\r\n                        if (driver_leaves_home_time.isAfter(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\").subtract(30, 'minute'))\r\n                            && driver_leaves_home_time.isBefore(moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\"))) {\r\n                            return false;\r\n                        }\r\n                        if (moment(ride.locations.dropoff.time, \"HH:mm\").isAfter(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\").subtract(30, 'minute'))\r\n                            && moment(ride.locations.dropoff.time, \"HH:mm\").isBefore(moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\"))) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n            filtered_users.sort((a, b) => {\r\n                let dist_a = Math.pow(Math.pow((a.addresses[0].geolocation.lat - this.props.active_ride.locations.pickup.geolocation.lat), 2) + Math.pow((a.addresses[0].geolocation.lng - this.props.active_ride.locations.pickup.geolocation.lng), 2), .5);\r\n                let dist_b = Math.pow(Math.pow((b.addresses[0].geolocation.lat - this.props.active_ride.locations.dropoff.geolocation.lat), 2) + Math.pow((b.addresses[0].geolocation.lng - this.props.active_ride.locations.dropoff.geolocation.lng), 2), .5);\r\n                if (dist_a < dist_b) {\r\n                    return -1;\r\n                } else if (dist_a === dist_b) {\r\n                    return 0;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            filtered_users.sort((a, b) => {\r\n                if (a.status === b.status) {\r\n                    if (a.user_type === b.user_type) {\r\n                        if (a.personal_info.last_name === b.personal_info.last_name) {\r\n                            if (a.personal_info.first_name > b.personal_info.first_name) return 1;\r\n                            return -1;\r\n                        } else {\r\n                            if (a.personal_info.last_name > b.personal_info.last_name) return 1;\r\n                            return -1;\r\n                        }\r\n                    } else {\r\n                        if (a.user_type === \"rider\") return -1;\r\n                        return 1;\r\n                    }\r\n                } else {\r\n                    if (a.status === \"active\") return -1;\r\n                    return 1;\r\n                }\r\n            });\r\n        }\r\n\r\n        //could also be done with a map function return\r\n        for (let index in filtered_users) {\r\n            let user = filtered_users[index];\r\n            profile_table.push(\r\n                <tr key={user.id} style={this.state.selected_row === user.id ? {\r\n                    background: \"#cce4ff\",\r\n                    display: \"table\",\r\n                    width: '100%',\r\n                    tableLayout: 'fixed'\r\n                } : {display: \"table\", width: '100%', tableLayout: 'fixed'}}>\r\n                    {this.props.mode === \"all\" ?\r\n                        <td id={user.id}\r\n                            onClick={(e) => this.handleSelect(e)}>{user.user_type.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                        :\r\n                        <td id={user.id} onClick={(e) => this.handleSelect(e)}>PICTURE</td>\r\n                    }\r\n                    {this.props.mode === \"all\" ?\r\n                        <>\r\n                            <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.personal_info.last_name}</td>\r\n                            <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.personal_info.first_name}</td>\r\n                        </>\r\n                    :\r\n                        <>\r\n                            <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.personal_info.first_name}</td>\r\n                            <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.personal_info.last_name}</td>\r\n                        </>\r\n                    }\r\n                    <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.primary_village_id}</td>\r\n                    {this.props.mode === \"all\" ?\r\n                        <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.status.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                    :\r\n                        null\r\n                    }\r\n                    <td id={user.id} onClick={(e) => this.handleSelect(e)}>{user.id}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return profile_table;\r\n    }\r\n\r\n    /**\r\n     * Displays the profile table\r\n     *\r\n     * @returns {HTMLDocument}\r\n     */\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Table striped bordered hover style={{width: '100%'}}>\r\n                    <thead style={{display: \"table\"}}>\r\n                    <tr style={{display: 'table', tableLayout: 'fixed', width: '100%'}}>\r\n                        {this.generateTableHeaders()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody style={{display: 'block', height: '100%', width: '100%', overflow: 'auto'}}>\r\n                    {this.generateTableData()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Pulls users and active ride from state\r\n */\r\nconst mapStateToProps = state => ({\r\n    users: state.users,\r\n    active_ride : state.active_ride,\r\n    rides: state.rides,\r\n});\r\n\r\n/**\r\n * Sets up functions to send selected profile information to reducer\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    setActiveUser: (user) => dispatch({\r\n        type: \"set_active_user\",\r\n        payload: user\r\n    }),\r\n    setRideParticipant: (type, user) => dispatch({\r\n        type: \"set_ride_participant\",\r\n        payload: {\r\n            type: type,\r\n            user: user\r\n        }\r\n    }),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfileTable));\r\n",
    "import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport ProfileTable from \"../profiles/ProfileTable\";\r\n\r\nclass SelectRider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search_term: \"\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({search_term: event.target.value})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"SelectRider\" style={{minWidth: \"100%\"}}>\r\n                <h1>Select Rider</h1>\r\n                <Row>\r\n                    <Col sm={12}><Form.Control type=\"search\" id=\"search\" placeholder=\"Search\"\r\n                                               onChange={this.handleChange}/></Col>\r\n                </Row>\r\n                <hr/>\r\n                <ProfileTable search_term={this.state.search_term} mode={\"rider\"}/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.users,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectRider);\r\n",
    "import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\"\r\nimport {Autocomplete} from \"@react-google-maps/api\";\r\nimport MapContainer from \"../google-maps/MapContainer\";\r\nimport moment from \"moment\";\r\n\r\n//import './pic_placeholder.png';\r\n\r\nclass RideInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addresses: {},\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCommonAddress = this.handleCommonAddress.bind(this);\r\n\r\n        this.autocomplete = {};\r\n        this.count = 0;\r\n\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onPlaceChanged = this.onPlaceChanged.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let today = moment()\r\n        //Set the default day to be one week in advance\r\n        if (!this.props.active_ride.ride_data.date) {\r\n            this.props.updateScheduler(\"date\", null, today.add(8, 'days').format(\"YYYY-MM-DD\"));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        let label_flag = event.target.id.split(\"_\");\r\n        if (label_flag[1] === \"date\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[1], null, event.target.value);\r\n        } else if (label_flag[1] === \"purpose\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[1], null, event.target.value);\r\n        } else if (label_flag[1] === \"meta\" && label_flag[2] === \"samereturn\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[2], null, event.target.checked)\r\n        } else {\r\n            //updating the location\r\n            this.props.updateScheduler(label_flag[1], label_flag[2], event.target.value)\r\n        }\r\n    };\r\n\r\n    handleCommonAddress(event, type) {\r\n        if (event.target.value === \"other\") {\r\n            //Update store\r\n            this.props.updateScheduler(\"common_address\", \"set|\"+type, event.target.value);\r\n        } else {\r\n            this.props.updateScheduler(\"common_address\", type, this.props.active_ride.rider.id+\"|\"+event.target.value.replace(\"addr_\", \"\"));\r\n        }\r\n    }\r\n\r\n    getSelectedItems() {\r\n        let items = [];\r\n        let addresses = [];\r\n        for (let i = 0; i < this.props.users.length; i++) {\r\n            if (this.props.users[i].id === this.props.active_ride.rider.id) {\r\n                // this.setState({addresses: this.props.users[i].addresses});\r\n                let addresses = this.props.users[i].addresses\r\n            }\r\n        }\r\n        for (let i = 0; i < addresses.length; i++) {\r\n            items.push(<option key={i} value={i}>{i}</option>);\r\n        }\r\n        return items\r\n    }\r\n\r\n    onLoad(autocomplete) {\r\n        this.autocomplete[this.count] = autocomplete;\r\n        this.count += 1\r\n    }\r\n\r\n    onPlaceChanged(variable, number) {\r\n        if (this.autocomplete[number] != null) {\r\n            const place = this.autocomplete[number].getPlace();\r\n            if (place.geometry !== null) {\r\n                this.props.updateScheduler(variable, \"address\", place.formatted_address);\r\n                this.props.updateScheduler(variable, \"geolocation\", {\r\n                    lat: place.geometry.location.lat(),\r\n                    lng: place.geometry.location.lng()\r\n                });\r\n            }\r\n\r\n        } else {\r\n            console.log('Autocomplete is not loaded yet!')\r\n        }\r\n    }\r\n\r\n    getCommonAddresses(mode) {\r\n        let options = [];\r\n        if (!this.props.active_ride.locations[mode].address) options.push(<option value={\"\"} label={\"\"} key=\"null\"/>);\r\n        if (!this.props.active_ride.rider.id) return options;\r\n        options.push(...this.props.users[this.props.active_ride.rider.id].addresses.map((loc)=>{\r\n            return <option value={\"addr_\"+loc.line_1} label={loc.name} key={loc.name}/>\r\n        }));\r\n        options.push(<option value={\"other\"} label={\"--Other--\"} key=\"other\"/>)\r\n        return options;\r\n    }\r\n\r\n    vehicleOptions() {\r\n        let options = [<option value={\"\"} label={\"\"}/>];\r\n        if (!this.props.active_ride.driver.id) return options;\r\n        options.push(...this.props.users[this.props.active_ride.driver.id].vehicles.map((car)=>{\r\n            return <option value={car.lp} label={car.year + \" \" + car.make_model}/>\r\n        }));\r\n        return options;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"RideInformation\" style={{minWidth: \"100%\"}}>\r\n                <h1>Ride Information</h1>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Options</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Name:</td>\r\n                                        <td>{`${this.props.active_ride.rider.first_name}`} {`${this.props.active_ride.rider.last_name}`}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Date:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"date\" placeholder=\"\" id='sched_date' onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.ride_data.date}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Trip Purpose:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\" placeholder=\"\" id='sched_purpose' onChange={this.handleChange} value={this.props.active_ride.ride_data.purpose}>\r\n                                                {[\"\", \"Medical Appointments\", \"Pharmacy\", \"Grocery\", \"Congregate Meal\", \"Social Activity\", \"Religious\", \"Personal Care\", \"Errands\", \"Vet (Pet)\", \"Gym\", \"Restaurant\"]\r\n                                                    .map((item) => {\r\n                                                        return <option label={item} value={item} key={item}/>\r\n                                                    })}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            Mobility Aid:\r\n                                        </td>\r\n                                        <td>\r\n                                            {this.props.users[this.props.active_ride.rider.id].accommodations.mobility_aid ? `${this.props.users[this.props.active_ride.rider.id].accommodations.mobility_aid}` : \"N/A\"}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            Special Accommodations:\r\n                                        </td>\r\n                                        <td>\r\n                                            {this.props.users[this.props.active_ride.rider.id].accommodations.special ? `${this.props.users[this.props.active_ride.rider.id].accommodations.special}` : \"N/A\"}\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                Pickup to Dropoff\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row style={{position: 'relative', width: '100%', height: '250px'}}>\r\n                                    <MapContainer/>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>Estimated Rider Trip Duration:</Col>\r\n                                    <Col>\r\n                                        {this.props.active_ride.ride_data.time_total.rider ?\r\n                                            moment(\"2015-01-01\").startOf('day')\r\n                                            .seconds(this.props.active_ride.ride_data.time_total.rider)\r\n                                            .format('H:mm:ss') : \"\"}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>Based on dropoff time, pickup time should be:</Col>\r\n                                    <Col>\r\n                                        {console.log(moment(this.props.active_ride.locations.dropoff.time))}\r\n                                        {(this.props.active_ride.locations.dropoff.time) ?\r\n                                            moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\")\r\n                                                .subtract(this.props.active_ride.ride_data.time_total.rider, 'second')\r\n                                                .format('hh:mm:ss A') : \"\"}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Pickup</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Address:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\"\r\n                                                          id='sched_pickup_address' onChange={(e) => this.handleCommonAddress(e, \"pickup\")}\r\n                                                          value={this.props.active_ride.ride_data.meta.pickup_CA}>\r\n                                                  {this.getCommonAddresses(\"pickup\")}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <Autocomplete\r\n                                                onLoad={this.onLoad}\r\n                                                onPlaceChanged={() => this.onPlaceChanged('pickup', 0)}\r\n                                            >\r\n                                                <Form.Control type=\"text\" placeholder=\"Pickup Location\"\r\n                                                              disabled = {this.props.active_ride.ride_data.meta.pickup_CA !== \"other\"}\r\n                                                              id='sched_pickup_address' onChange={this.handleChange}\r\n                                                              value={this.props.active_ride.locations.pickup.address}/>\r\n                                            </Autocomplete>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Time:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"time\" id='sched_pickup_time'\r\n                                                          onChange={(e) => this.handleChange(e)}\r\n                                                          value={this.props.active_ride.locations.pickup.time}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Special Instructions:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"text\" placeholder=\"Pickup Instructions\"\r\n                                                          id='sched_pickup_special' onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.locations.pickup.special}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Dropoff</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Address:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control as=\"select\"\r\n                                                          id='sched_dropoff_address'\r\n                                                          onChange={(e) => this.handleCommonAddress(e, \"dropoff\")}\r\n                                                          value={this.props.active_ride.ride_data.meta.dropbox_CA}>\r\n                                                {this.getCommonAddresses(\"dropoff\")}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <Autocomplete\r\n                                                onLoad={this.onLoad}\r\n                                                onPlaceChanged={() => this.onPlaceChanged('dropoff', 1)}\r\n                                            >\r\n                                                <Form.Control type=\"text\" placeholder=\"Dropoff Location\"\r\n                                                              id='sched_dropoff_address' onChange={this.handleChange}\r\n                                                              disabled = {this.props.active_ride.ride_data.meta.dropoff_CA !== \"other\"}\r\n                                                              value={this.props.active_ride.locations.dropoff.address}/>\r\n                                            </Autocomplete>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Time:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"time\" id='sched_dropoff_time'\r\n                                                          onChange={(e) => this.handleChange(e)}\r\n                                                          value={this.props.active_ride.locations.dropoff.time}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Special Instructions:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"text\" placeholder=\"Dropoff Instructions\"\r\n                                                          id='sched_dropoff_special' onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.locations.dropoff.special}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_ride: state.active_ride,\r\n    users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateScheduler: (type, field, value) => dispatch({\r\n        type: \"scheduler\",\r\n        payload: {\r\n            type: type,\r\n            field: field,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RideInformation);\r\n",
    "import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport MapContainer from \"../google-maps/MapContainer\";\r\nimport ProfileTable from \"../profiles/ProfileTable\";\r\nimport moment from \"moment\";\r\n\r\nclass SelectDriver extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search_term: \"\",\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        if (event.target.id === \"search\") this.setState({search_term: event.target.value});\r\n        else if (event.target.id === \"sched_vehicle\") this.props.updateScheduler(\"vehicle\", this.props.active_ride.driver.id, event.target.value);\r\n    };\r\n\r\n    vehicleOptions() {\r\n        let options = [<option value={\"\"} label={\"\"} key={\"null\"}/>];\r\n        if (!this.props.active_ride.driver.id) return options;\r\n        if (this.props.active_ride.driver.vehicle.lp) options = [];\r\n        options.push(...this.props.users[this.props.active_ride.driver.id].vehicles.map((car)=>{\r\n            return <option key={car.lp} value={car.lp} label={car.year + \" \" + car.make_model}/>\r\n        }));\r\n        return options;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"SelectDriver\" style={{minWidth: \"100%\"}}>\r\n                <h1>Select Driver</h1>\r\n                <Form>\r\n                    <Form.Group as={Row}>\r\n                        <Col>\r\n                            <Form.Control type=\"search\" id=\"search\" placeholder=\"Search Drivers\" onChange={this.handleChange}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n                <hr/>\r\n                <Row style={{height: \"30%\"}}>\r\n                    <ProfileTable search_term={this.state.search_term} mode={\"driver\"}/>\r\n                </Row>\r\n                <hr/>\r\n                <Row>\r\n                    <Col>\r\n                        <div style={{position: 'relative', width: '100%', height: '250px'}}>\r\n                            <MapContainer/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col>Driver:</Col>\r\n                            <Col>{`${this.props.active_ride.driver.first_name}`} {`${this.props.active_ride.driver.last_name}`}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Select Vehicle:</Col>\r\n                            <Col>\r\n                                <Form.Control as=\"select\" id=\"sched_vehicle\" onChange={this.handleChange}\r\n                                              value={this.props.active_ride.driver.vehicle.lp ? this.props.active_ride.driver.vehicle.lp : \"\"}>\r\n                                    {this.vehicleOptions()}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>Trip Duration:</Col>\r\n                            <Col>{this.props.active_ride.ride_data.time_total.driver ? moment(\"2015-01-01\").startOf('day')\r\n                                .seconds(this.props.active_ride.ride_data.time_total.driver)\r\n                                .format('H [hours] mm [minutes]') : \"\"}</Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_ride: state.active_ride,\r\n    users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateScheduler: (type, field, value) => dispatch({\r\n        type: \"scheduler\",\r\n        payload: {\r\n            type: type,\r\n            field: field,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectDriver);\r\n",
    "import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Table from \"react-bootstrap/Table\"\r\n\r\nimport MapContainer from \"../google-maps/MapContainer.js\";\r\nimport moment from \"moment\";\r\n\r\n\r\n// Above are all the imports for this file.\r\n// Every file will need React, Component, connect\r\n\r\n// The second section of imports are React Bootstrap components.  These allow for easy styling\r\n// and layout without much need for custom CSS or HTML.\r\n\r\n/**\r\n * Confirmation\r\n * @typedef {Object} Confirmation\r\n *\r\n */\r\nclass Confirmation extends Component {\r\n    /**\r\n     * Confirmation Constructor\r\n     * @params {Object} props - Dictionary of all local variables\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n    };\r\n\r\n    /**\r\n     * Displays the confirmation page.\r\n     *\r\n     * @returns {HTMLDocument}\r\n     *\r\n     */\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <MapContainer>Trip Summary</MapContainer>\r\n                    </Col>\r\n                    <Col>\r\n                        <Table>\r\n                            <tr>\r\n                                <td>Name:</td>\r\n                                <td>{`${this.props.active_ride.rider.first_name}`} {`${this.props.active_ride.rider.last_name}`}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pickup Location:</td>\r\n                                <td>{this.props.active_ride.locations.pickup.address}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Pickup Time:</td>\r\n                                <td>{moment(this.props.active_ride.locations.pickup.time, 'HH:mm').format('hh:mm a')}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dropoff Location:</td>\r\n                                <td>{this.props.active_ride.locations.dropoff.address}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Dropoff Time:</td>\r\n                                <td>{moment(this.props.active_ride.locations.dropoff.time, 'HH:mm').format('hh:mm a')}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Driver Trip Duration:</td>\r\n                                <td>{this.props.active_ride.ride_data.time_total.driver ? moment(\"2015-01-01\").startOf('day')\r\n                                    .seconds(this.props.active_ride.ride_data.time_total.driver)\r\n                                    .format('H [hours] mm [minutes]') : \"\"}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Driver:</td>\r\n                                <td>{this.props.active_ride.driver.first_name} {this.props.active_ride.driver.last_name}</td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Pulls active_ride and users from state *\r\n *\r\n */\r\n\r\nconst mapStateToProps = state => ({\r\n    active_ride: state.active_ride,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirmation);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport moment from 'moment';\r\n\r\nimport SelectRider from \"./SelectRider\";\r\nimport RideInformation from \"./RideInformation\";\r\nimport SelectDriver from \"./SelectDriver\";\r\nimport Confirmation from \"./Confirmation\";\r\nimport axios from \"axios\";\r\nimport {API_ROOT} from \"../../modules/api\";\r\nimport cookie from \"react-cookies\";\r\n\r\nconst PAGE_MAX = 3;\r\n\r\nclass Scheduler extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scheduler_page: 0,\r\n            error_message: \"\",\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.props.clearRide();\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (window.confirm(\"Are you sure you want to schedule this ride for \" + this.props.active_ride.rider.first_name + \" \" + this.props.active_ride.rider.last_name + \" on \" + this.props.active_ride.ride_data.date)) {\r\n            switch (this.props.users[this.props.active_ride.driver.id].personal_info.preferred_communication) {\r\n                case \"email\":\r\n                    break;\r\n                case \"mobile\":\r\n                    this.props.active_ride.ride_data.driver_confirmed = window.confirm(\"Call this number to confirm: \" + this.props.users[this.props.active_ride.driver.id].personal_info.phone_mobile + \". Did they confirm?\");\r\n                    break;\r\n                case \"home\":\r\n                    this.props.active_ride.ride_data.driver_confirmed = window.confirm(\"Call this number to confirm: \" + this.props.users[this.props.active_ride.driver.id].personal_info.phone_home + \". Did they confirm?\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            axios.post(API_ROOT + '/database/rides/ride',\r\n                {ride: this.props.active_ride},\r\n                {\r\n                    headers: {\r\n                        'Authorization': 'BEARER ' + cookie.load('token')\r\n                    }\r\n                }\r\n            ).then((response) => {\r\n                this.props.addRide(this.props.active_ride, response.data.id);\r\n                if (this.props.active_ride.ride_data.meta.return === false && window.confirm(\"Would you like to schedule a return ride for \" + this.props.active_ride.rider.first_name + \" \" + this.props.active_ride.rider.last_name + \" on \" + this.props.active_ride.ride_data.date)) {\r\n                    this.props.returnRide();\r\n                    this.setState({scheduler_page: 1});\r\n                } else {\r\n                    this.props.clearRide();\r\n                    //This is part of react-router and allows forced page routing\r\n                    this.props.history.push('/Dashboard');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    changePage(increment) {\r\n        if (increment <= 0 || this.validate()) {\r\n            let proposed_page = this.state.scheduler_page + increment;\r\n            //Handle minimum\r\n            if (proposed_page < 0) proposed_page = 0;\r\n\r\n            //Handle highest page number\r\n            if (proposed_page > 3) proposed_page = 3;\r\n\r\n            this.setState({scheduler_page: proposed_page, error_message: \"\"});\r\n        } else {\r\n            document.body.scrollTop = 0; // For Safari\r\n            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        }\r\n    }\r\n\r\n    showPage() {\r\n        switch (this.state.scheduler_page) {\r\n            case 0: //Rider\r\n                return (<SelectRider/>);\r\n            case 1: //Info\r\n                return (<RideInformation/>);\r\n            case 2: //Driver\r\n                return (<SelectDriver/>);\r\n            case 3: //Confirm\r\n                return (<Confirmation/>);\r\n            default:\r\n                return (<SelectRider/>);\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        switch (this.state.scheduler_page) {\r\n            case 0:\r\n                //Need to select a rider\r\n                if (this.props.active_ride.rider.id === \"\") {\r\n                    this.setState({error_message: \"Please select a rider.\"});\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 1:\r\n                //Need to specify a date\r\n                const date = moment(this.props.active_ride.ride_data.date, \"YYYY-MM-DD\")\r\n                if (this.props.active_ride.ride_data.date === \"\") {\r\n                    this.setState({error_message: \"INVALID DATE: Please provide a date.\"});\r\n                    return false;\r\n                } else if (date.isBefore(moment().add('1', 'week'))) {\r\n                    this.setState({error_message: \"INVALID DATE: Rides must be scheduled at least one (1) week in advance.\"});\r\n                    return false;\r\n                } else if (date.isAfter(moment().add('4', 'week'))) {\r\n                    this.setState({error_message: \"INVALID DATE: Rides must be scheduled no more than four (4) weeks in advance.\"});\r\n                    return false;\r\n                } else if (!this.props.active_ride.locations.pickup.geolocation) {\r\n                    this.setState({error_message: \"INVALID PICKUP ADDRESS: Please provide pickup address.\"});\r\n                    return false;\r\n                } else if (!this.props.active_ride.locations.dropoff.geolocation) {\r\n                    this.setState({error_message: \"INVALID DROPOFF ADDRESS: Please provide dropoff address.\"});\r\n                    return false;\r\n                } else if (!this.props.active_ride.locations.pickup.time) {\r\n                    this.setState({error_message: \"INVALID PICKUP TIME: Please provide pickup time.\"});\r\n                    return false;\r\n                } else if (!this.props.active_ride.locations.dropoff.time || moment(this.props.active_ride.locations.dropoff.time, \"HH:mm\").isBefore(moment(this.props.active_ride.locations.pickup.time, \"HH:mm\"))) {\r\n                    this.setState({error_message: \"INVALID DROPOFF TIME: Please provide dropoff time.\"});\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 2:\r\n                //Need to pick a driver\r\n                if (this.props.active_ride.driver.id === \"\") {\r\n                    this.setState({error_message: \"INVALID DATE: Please select a driver.\"});\r\n                    return false;\r\n                } else if (!this.props.active_ride.driver.vehicle.make_model) {\r\n                    this.setState({error_message: \"INVALID VEHICLE: Please select a vehicle.\"});\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 3:\r\n                return false;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                {this.state.error_message ? <Alert variant=\"danger\">{this.state.error_message}</Alert> : null}\r\n                {this.showPage()}\r\n                <Row style={{\r\n                    textAlign: \"center\",\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    bottom: \"0\",\r\n                    height: \"60px\",\r\n                    width: \"100%\",\r\n                }}>\r\n                    <Col></Col>\r\n                    <Col>\r\n                        {this.state.scheduler_page !== 0 ?\r\n                            <Button variant=\"dark\" disabled={this.state.scheduler_page === 0} size=\"lg\" id=\"prev_button\"\r\n                                    onClick={() => {\r\n                                        this.changePage(-1)\r\n                                    }}>\r\n                                PREV\r\n                            </Button>\r\n                            : null}\r\n                    </Col>\r\n                    <Col>\r\n                        {this.state.scheduler_page === PAGE_MAX ?\r\n                            <Button disabled={this.state.scheduler_page !== PAGE_MAX} size=\"lg\" id=\"sched_submit_button\"\r\n                                    onClick={() => {\r\n                                        this.handleSubmit()\r\n                                    }}>\r\n                                Submit Ride\r\n                            </Button>\r\n                            : null}\r\n                    </Col>\r\n                    <Col>\r\n                        {this.state.scheduler_page !== PAGE_MAX ?\r\n                            <Button variant=\"dark\" size=\"lg\" id=\"next_button\" onClick={() => {\r\n                                this.changePage(1)\r\n                            }}>\r\n                                NEXT\r\n                            </Button>\r\n                            : null}\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_ride: state.active_ride,\r\n    users: state.users,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addRide: (user, id) => dispatch({\r\n        type: \"add_ride\",\r\n        payload: {...user, id: id}\r\n    }),\r\n    clearRide: () => dispatch({\r\n        type: \"clear_active_ride\",\r\n        payload: null\r\n    }),\r\n    returnRide: () => dispatch({\r\n        type: \"setup_return_ride\",\r\n        payload: null\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scheduler);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport ProfileTable from \"./ProfileTable\";\r\n\r\n/**\r\n * Profiles\r\n * @typedef {Object} Profiles\r\n * @property {string} search_term - word used for profile table fuzzysort\r\n */\r\nclass Profiles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search_term: \"\",\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Handles when search_term is changed\r\n     *\r\n     * @param {Object} event - what search_term is set to\r\n     */\r\n\thandleChange(event) {\r\n        this.setState({search_term: event.target.value})\r\n\t}\r\n\r\n    /**\r\n     * Displays the profiles based on the search term\r\n     *\r\n     * @returns {HTMLDocument}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <Row>\r\n                    <Col sm={4}><Form.Control type=\"search\" id=\"search\" placeholder=\"Search\" onChange={this.handleChange}/></Col>\r\n                    <Col sm={1}>\r\n                    </Col>\r\n                    <Col sm={5}/>\r\n                    <Col sm={2}>\r\n                        <Button id=\"register_button\" onClick={() => {this.props.clearRegistration(); this.props.history.push('/Profiles/Register');}}>\r\n                            Register\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <hr/>\r\n                <Row><Col>\r\n                    <ProfileTable search_term={this.state.search_term} mode=\"all\"/>\r\n                </Col></Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\n/**\r\n * Sets up function to clear current registration information in reducer\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearRegistration: () => dispatch({\r\n        type: \"clear_active_profile\",\r\n        payload: null\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profiles);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./registration.css\"\r\nimport {Autocomplete} from \"@react-google-maps/api\";\r\n\r\nclass CommonAddresses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            autocomplete_help: {}\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.autocomplete = {};\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onPlaceChanged = this.onPlaceChanged.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        let id = event.target.id.split(\"|\")[0].replace(\"addr_\", \"\");\r\n        let field = event.target.id.split(\"|\")[1];\r\n        switch (field) {\r\n            case \"autocomplete\":\r\n                this.props.updateRegistration(\"addresses\", id + \"|autocomplete\", event.target.value);\r\n                break;\r\n            default:\r\n                this.props.updateRegistration(\"addresses\", id + \"|\" + field, event.target.value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onLoad(autocomplete, index) {\r\n        this.autocomplete[index] = autocomplete;\r\n    }\r\n\r\n    onPlaceChanged(index) {\r\n        let street_number = 0;\r\n        if (this.autocomplete[index] != null) {\r\n            index = index - 1;\r\n            const place = this.autocomplete[index + 1].getPlace();\r\n            this.props.updateRegistration(\"addresses\", index + \"|autocomplete\",place.formatted_address);\r\n            for (const component of place.address_components) {\r\n                if (component.types.includes('street_number')) {\r\n                    street_number = component.long_name\r\n                    this.props.updateRegistration(\"addresses\", index + \"|street_number\", component.long_name);\r\n                } else if (component.types.includes('route')) {\r\n                    this.props.updateRegistration(\"addresses\", index + \"|line_1\", `${street_number} ${component.short_name}`);\r\n                } else if (component.types.includes('locality')) {\r\n                    this.props.updateRegistration(\"addresses\", index + \"|city\", component.short_name);\r\n                } else if (component.types.includes('administrative_area_level_1')) {\r\n                    this.props.updateRegistration(\"addresses\", index + \"|state\", component.short_name);\r\n                } else if (component.types.includes('postal_code')) {\r\n                    this.props.updateRegistration(\"addresses\", index + \"|zip\", component.short_name);\r\n                }\r\n            }\r\n            if (place.geometry.location) {\r\n                this.props.updateRegistration(\"addresses\", index + \"|lat\", place.geometry.location.lat());\r\n                this.props.updateRegistration(\"addresses\", index + \"|lng\", place.geometry.location.lng());\r\n            }\r\n\r\n            //Nolonger needed now that things are going through the reducer\r\n            //this.props.triggerUpdate();\r\n        } else {\r\n            console.log('Autocomplete is not loaded yet!')\r\n        }\r\n    }\r\n\r\n    generateAddressForms() {\r\n        let body = [];\r\n        let index = 0;\r\n        if (this.props.addresses.length === 0) body.push(<br key={\"break\"}/>);\r\n        for (let a in this.props.addresses) { // eslint-disable-line no-unused-vars\r\n            body.push(\r\n                <Card.Body key={index}>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2}>Address Name:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|name\"} placeholder=\"--Address Name--\"\r\n                                           onChange={this.handleChange} value={this.props.addresses[index].name}/></Col>\r\n                        <Col sm={3} lg={2}>\r\n                            {this.props.mode === \"rider\" ?\r\n                            <Button id={index} variant=\"danger\" onClick={(e) => this.props.removeAddress(e.target.id)}>\r\n                                Remove Address\r\n                            </Button>\r\n                            : null }\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2}><strong>Address Search:</strong></Form.Label>\r\n                        <Col>\r\n                            <Autocomplete\r\n                                onLoad={(autocomplete) => {\r\n                                    this.onLoad(autocomplete, index)\r\n                                }}\r\n                                onPlaceChanged={() => this.onPlaceChanged(index)}\r\n                            >\r\n                                <Form.Control id={\"addr_\" + index + \"|autocomplete\"} placeholder=\"--Address--\"\r\n                                              onChange={this.handleChange} value={this.props.addresses[index].autocomplete}/>\r\n                            </Autocomplete>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2}>Address Line 1:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|line_1\"}\r\n                                           readOnly\r\n                                           placeholder=\"--Primary Address Information--\" onChange={this.handleChange}\r\n                                           value={this.props.addresses[index].line_1}/></Col>\r\n                        <Form.Label column sm={2} lg={2}>Address Line 2:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|line_2\"} placeholder=\"--Unit/Care Of/Attention--\"\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.addresses[index].line_2}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2}>City:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|city\"} placeholder=\"--City--\"\r\n                                           readOnly\r\n                                           onChange={this.handleChange} value={this.props.addresses[index].city}/></Col>\r\n                        <Form.Label column sm={2} lg={2}>State:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|state\"} placeholder=\"--State--\"\r\n                                           readOnly\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.addresses[index].state}/></Col>\r\n                        <Form.Label column sm={2} lg={2}>Zip:</Form.Label>\r\n                        <Col><Form.Control id={\"addr_\" + index + \"|zip\"} placeholder=\"--ZIP--\"\r\n                                           readOnly\r\n                                           onChange={this.handleChange} value={this.props.addresses[index].zip}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2}>Special Instructions:</Form.Label>\r\n                        <Col><Form.Control as=\"textarea\" rows={5} id={\"addr_\" + index + \"|special_instructions\"}\r\n                                           placeholder=\"Please include any additional information that a driver would need to know when picking up or dropping off from this location.\"\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.addresses[index].special_instructions}/></Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            );\r\n            //Divide all the addresses (do not place a break after the last value)\r\n            if (index !== this.props.addresses.length-1) body.push(<hr key={index + \"_break\"}/>);\r\n\r\n            index++;\r\n        }\r\n        return(body);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    {this.props.mode === \"rider\" ?\r\n                        <h5 style={{float: \"left\"}}>Common Addresses</h5>\r\n                    :\r\n                        <h5 style={{float: \"left\"}}>Address</h5>\r\n                    }\r\n                    {this.props.mode === \"rider\" ?\r\n                    <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.props.addAddress()}>\r\n                        Add Address\r\n                    </Button>\r\n                    : null}\r\n                </Card.Header>\r\n                {this.generateAddressForms()}\r\n                <h6>{\" \"}</h6>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    addresses: state.active_profile.addresses,\r\n    user_type: state.active_profile.user_type\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n    addAddress: () => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"add_address\",\r\n            value: null\r\n        }\r\n    }),\r\n    removeAddress: (id) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"remove_address\",\r\n            value: id\r\n        }\r\n    }),\r\n    triggerUpdate: () => dispatch({\r\n        type: \"trigger_update\",\r\n        payload: null\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonAddresses);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"./registration.css\"\r\n\r\n// May wish to add the ability for multiple emergency_contacts\r\n// Accounting for this later\r\n\r\nclass EmergencyInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        switch (event.target.id) {\r\n            default:\r\n                this.props.updateRegistration(\"emergency_contact\", event.target.id.replace('reg_',''), event.target.value)\r\n                break;\r\n        }\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float:\"left\"}}>Emergency Contact</h5>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>First Name:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_first_name\" placeholder=\"First Name\" onChange={this.handleChange} value={this.props.emergency_contact.first_name}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Last Name:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_last_name\" placeholder=\"Last Name\" onChange={this.handleChange} value={this.props.emergency_contact.last_name}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Email:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_email\" placeholder=\"Email Address\" onChange={this.handleChange} value={this.props.emergency_contact.email}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Mobile Phone:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_phone_mobile\" placeholder=\"Mobile Phone\" onChange={this.handleChange} value={this.props.emergency_contact.phone_mobile}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Home Phone:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_phone_home\" placeholder=\"Home Phone\" onChange={this.handleChange} value={this.props.emergency_contact.phone_home}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Communication Preference:</Form.Label>\r\n                        <Col><Form.Control as=\"select\" id=\"reg_preferred_communication\" onChange={this.handleChange} value={this.props.emergency_contact.preferred_communication}>\r\n                            <option value=\"\" label=\"\"/>\r\n                            <option value=\"email\" label=\"Email\"/>\r\n                            <option value=\"mobile\" label=\"Mobile Phone\"/>\r\n                            <option value=\"home\" label=\"Home Phone\"/>\r\n                        </Form.Control></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Relationship:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_relationship\" placeholder=\"Relationship\" onChange={this.handleChange} value={this.props.emergency_contact.relationship}/></Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    emergency_contact: state.active_profile.emergency_contact,\r\n    user_type: state.active_profile.user_type\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmergencyInformation);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"./registration.css\"\r\n\r\nclass GeneralInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //by default have the village id match the operator's village\r\n        if (!this.props.village_id) {\r\n            this.props.updateRegistration(\"personal_info\", \"primary_village_id\", this.props.operator_village);\r\n        }\r\n    }\r\n\r\n\thandleChange(event) {\r\n        switch (event.target.id) {\r\n            case \"reg_language\":\r\n                //Language is a multiselect and needs to be handled differently\r\n                this.props.updateRegistration(\"personal_info\", event.target.id.replace('reg_', ''), Array.from(event.target.selectedOptions).map((o) => {\r\n                    return o.value\r\n                }));\r\n                break;\r\n            case \"reg_primary_village_id\":\r\n                this.props.updateRegistration(\"personal_info\", event.target.id.replace('reg_', ''), event.target.value)\r\n                break;\r\n            default:\r\n                this.props.updateRegistration(\"personal_info\", event.target.id.replace('reg_', ''), event.target.value);\r\n                break;\r\n        }\r\n\t}\r\n\r\n    villageOptions() {\r\n        let options = [];\r\n        let villages = Object.keys(this.props.villages);\r\n        options = villages.map((v) => {\r\n            return(\r\n                <option key={this.props.villages[v].id} value={this.props.villages[v].id} label={this.props.villages[v].village_name}/>\r\n            )\r\n        })\r\n        return options;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.props.partial ? <React.Fragment>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row className=\"reg_row\">\r\n                                <Form.Label column sm={4}  lg={2}>Account Type:</Form.Label>\r\n                                <Col><Form.Control as=\"select\" id=\"reg_user_type\" onChange={this.handleChange} value={this.props.user_type}>\r\n                                    <option value=\"\" label=\"\"/>\r\n                                    <option value=\"rider\" label=\"Rider\"/>\r\n                                    <option value=\"driver\" label=\"Driver\"/>\r\n                                </Form.Control></Col>\r\n                            </Row>\r\n                            <Row className=\"reg_row\">\r\n                                <Form.Label column sm={4} lg={2}>Village Membership:</Form.Label>\r\n                                <Col><Form.Control as=\"select\" id=\"reg_primary_village_id\" onChange={this.handleChange}\r\n                                                   value={this.props.village_id}>\r\n                                    {this.villageOptions()}\r\n                                </Form.Control></Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <br/>\r\n                </React.Fragment>\r\n                :\r\n                null}\r\n                <Card>\r\n                    <Card.Header>\r\n                        <h5 style={{float:\"left\"}}>General Information</h5>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>First Name:</Form.Label>\r\n                            <Col><Form.Control id=\"reg_first_name\" placeholder=\"--First Name--\" onChange={this.handleChange} value={this.props.personal_info.first_name}/></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Last Name:</Form.Label>\r\n                            <Col><Form.Control id=\"reg_last_name\" placeholder=\"--Last Name--\" onChange={this.handleChange} value={this.props.personal_info.last_name}/></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Communication Preference:</Form.Label>\r\n                            <Col><Form.Control as=\"select\" id=\"reg_preferred_communication\" onChange={this.handleChange} value={this.props.personal_info.preferred_communication}>\r\n                                <option value=\"\" label=\"\"/>\r\n                                <option value=\"email\" label=\"Email\"/>\r\n                                <option value=\"mobile\" label=\"Mobile Phone\"/>\r\n                                <option value=\"home\" label=\"Home Phone\"/>\r\n                            </Form.Control></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Email:</Form.Label>\r\n                            <Col><Form.Control id=\"reg_email\" placeholder=\"--Email Address--\" onChange={this.handleChange} value={this.props.personal_info.email}/></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Mobile Phone:</Form.Label>\r\n                            <Col><Form.Control id=\"reg_phone_mobile\" placeholder=\"--Mobile Phone--\" onChange={this.handleChange} value={this.props.personal_info.phone_mobile}/></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Home Phone:</Form.Label>\r\n                            <Col><Form.Control id=\"reg_phone_home\" placeholder=\"--Home Phone--\" onChange={this.handleChange} value={this.props.personal_info.phone_home}/></Col>\r\n                        </Row>\r\n                        <Row className=\"reg_row\">\r\n                            <Form.Label column sm={4}  lg={2}>Preferred Language:</Form.Label>\r\n                            <Col><Form.Control multiple={true} as=\"select\" id=\"reg_language\" onChange={this.handleChange} value={this.props.personal_info.language}>\r\n                                {/*https://names.mongabay.com/languages/counties/Albany_County_NY.html*/}\r\n                                <option value=\"english\" label=\"English\"/>\r\n                                <option value=\"spanish\" label=\"Spanish\"/>\r\n                                <option value=\"french\" label=\"French\"/>\r\n                                <option value=\"italian\" label=\"Italian\"/>\r\n                                <option value=\"chinese\" label=\"Chinese\"/>\r\n                                <option value=\"korean\" label=\"Korean\"/>\r\n                                <option value=\"arabic\" label=\"Arabic\"/>\r\n                            </Form.Control></Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    personal_info: state.active_profile.personal_info,\r\n    user_type: state.active_profile.user_type,\r\n    village_id: state.active_profile.primary_village_id,\r\n    user_villages: state.active_profile.villages,\r\n    villages: state.villages,\r\n    operator_village: state.operator.village_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralInformation);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Error extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        switch (event.target.id) {\r\n            default:\r\n                this.props.updateRegistration(\"accommodations\", event.target.id.replace('reg_',''), event.target.value);\r\n                break;\r\n        }\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float:\"left\"}}>Special Accommodations</h5>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Allergy Information:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_allergies\" placeholder=\"Ex. Cats/Dogs, Dust, Leather\" onChange={this.handleChange} value={this.props.accommodations.allergies}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Mobility Aid:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_mobility_aid\" placeholder=\"Ex. Walker, Cane, Wheelchair\" onChange={this.handleChange} value={this.props.accommodations.mobility_aid}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4}  lg={2}>Smoke-Free:</Form.Label>\r\n                        <Col><Form.Control as=\"select\" id=\"reg_smoke_preference\" onChange={this.handleChange} value={this.props.accommodations.smoke_preference}>\r\n                            <option value=\"\" label=\"\"/>\r\n                            <option value=\"yes\" label=\"Yes\"/>\r\n                            <option value=\"no\" label=\"No\"/>\r\n                        </Form.Control></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={2} lg={2} >Special Instructions:</Form.Label>\r\n                        <Col><Form.Control as=\"textarea\" rows={5} id={\"reg_special\"}\r\n                            placeholder=\"Please provide any additional infomation that would be pertinent to a volunteer that would be driving you.\"\r\n                            onChange={this.handleChange}\r\n                            value={this.props.accommodations.special}/></Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    accommodations: state.active_profile.accommodations,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass DriverSpecific extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        switch (event.target.id) {\r\n            default:\r\n                this.props.updateRegistration(\"driver_specific\", event.target.id.replace('driver_',''), event.target.value);\r\n                break;\r\n        }\r\n\t}\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Body>\r\n                <Row className=\"reg_row\">\r\n                    <Form.Label column sm={3} lg={2}>Date Vetted:</Form.Label>\r\n                    <Col><Form.Control type=\"date\" id={\"driver_vetting\"} placeholder=\"--Date Vetted--\" onChange={this.handleChange} value={this.props.driver_specific.vetting}/></Col>\r\n                </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    driver_specific: state.active_profile.driver_specific\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DriverSpecific);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./registration.css\"\r\n\r\nclass VehicleInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let id = event.target.id.split(\"|\")[0].replace(\"car_\", \"\");\r\n        let field = event.target.id.split(\"|\")[1];\r\n        switch (field) {\r\n            default:\r\n                this.props.updateRegistration(\"vehicles\", id+\"|\"+field, event.target.value);\r\n                break;\r\n        }\r\n\t}\r\n\r\n    generateVehicleForms() {\r\n        let body = [];\r\n        let index = 0;\r\n        if (this.props.vehicles.length === 0) body.push(<br key={\"break\"}/>);\r\n        for (let a in this.props.vehicles) { // eslint-disable-line no-unused-vars\r\n            body.push(\r\n                <Card.Body key={index}>\r\n                    <div className=\"reg_row\">\r\n                        <h6>Vehicle Information</h6>\r\n                    </div>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Vehicle Make/Model:</Form.Label>\r\n                        <Col><Form.Control id={\"car_\"+index+\"|make_model\"} placeholder=\"--Make/Model--\" onChange={this.handleChange} value={this.props.vehicles[index].make_model}/></Col>\r\n                        <Col sm={3} lg={2}>\r\n                            <Button id={index} variant=\"danger\" onClick={(e) => this.props.removeVehicle(e.target.id)}>\r\n                                Remove Vehicle\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Vehicle Year:</Form.Label>\r\n                        <Col><Form.Control type=\"number\" id={\"car_\"+index+\"|year\"} placeholder=\"--Year--\" onChange={this.handleChange} value={this.props.vehicles[index].year}/></Col>\r\n                        <Form.Label column sm={3} lg={2}>Vehicle Color:</Form.Label>\r\n                        <Col><Form.Control id={\"car_\"+index+\"|color\"} placeholder=\"--Color--\" onChange={this.handleChange} value={this.props.vehicles[index].color}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>License Plate:</Form.Label>\r\n                        <Col><Form.Control id={\"car_\"+index+\"|lp\"} placeholder=\"--License Plate--\" onChange={this.handleChange} value={this.props.vehicles[index].lp}/></Col>\r\n                        <Form.Label column sm={3} lg={2}>Number of Seats:</Form.Label>\r\n                        <Col><Form.Control type=\"number\" id={\"car_\"+index+\"|seats\"} placeholder=\"--Number of Seats--\" onChange={this.handleChange} value={this.props.vehicles[index].seats}/></Col>\r\n                    </Row>\r\n                    <hr/>\r\n                    <div className=\"reg_row\">\r\n                        <h6>Insurance Information</h6>\r\n                    </div>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Provider:</Form.Label>\r\n                        <Col><Form.Control id={\"car_\" + index + \"|insur_provider\"} placeholder=\"--Insurance Provider--\"\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].insur_provider}/></Col>\r\n                        <Form.Label column sm={3} lg={2}>Policy Number:</Form.Label>\r\n                        <Col><Form.Control id={\"car_\" + index + \"|insur_policy\"} placeholder=\"--Policy Number--\"\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].insur_policy}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Insurance Expiration:</Form.Label>\r\n                        <Col><Form.Control type=\"date\" id={\"car_\" + index + \"|insur_exp\"}\r\n                                           placeholder=\"--Expiration Date--\" onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].insur_exp}/></Col>\r\n                        <Form.Label column sm={3} lg={2}>Coverage Amount:</Form.Label>\r\n                        <Col><Form.Control type=\"number\" id={\"car_\" + index + \"|insur_coverage\"}\r\n                                           placeholder=\"--Coverage Amount--\" onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].insur_coverage}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Date of Last Inspection:</Form.Label>\r\n                        <Col><Form.Control type=\"date\" id={\"car_\" + index + \"|insp_date\"}\r\n                                           placeholder=\"--Date of Previous Inspection--\" onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].insp_date}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={3} lg={2}>Additional Notes:</Form.Label>\r\n                        <Col><Form.Control as=\"textarea\" rows={5} id={\"car_\" + index + \"|special\"}\r\n                                           placeholder=\"\"\r\n                                           onChange={this.handleChange}\r\n                                           value={this.props.vehicles[index].special}/></Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            );\r\n            //Divide all the vehicles (do not place a break after the last value)\r\n            if (index !== this.props.vehicles.length-1) body.push(<hr key={index + \"_break\"}/>);\r\n\r\n            index++;\r\n        }\r\n        return(body);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float:\"left\"}}>Vehicles</h5>\r\n                    <Button variant=\"dark\" style={{float:\"right\"}} onClick={() => this.props.addVehicle()}>\r\n                        Add Vehicle\r\n                    </Button>\r\n                </Card.Header>\r\n                {this.generateVehicleForms()}\r\n                <h6>{\" \"}</h6>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    vehicles: state.active_profile.vehicles,\r\n    user_type: state.active_profile.user_type\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n    addVehicle: () => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"add_vehicle\",\r\n            value: null\r\n        }\r\n    }),\r\n    removeVehicle: (id) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"remove_vehicle\",\r\n            value: id\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VehicleInformation);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass VolunteerSchedule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let id = event.target.id.split(\"|\")[0].replace(\"vol_\", \"\");\r\n        let field = event.target.id.split(\"|\")[1];\r\n        switch (field) {\r\n            default:\r\n                this.props.updateRegistration(\"volunteer_hours\", id+\"|\"+field, event.target.value);\r\n                break;\r\n        }\r\n\t}\r\n\r\n    generateHourRows() {\r\n        let hour_rows = [];\r\n        let last_index = String(this.props.volunteer_hours.length-1);\r\n        for (let index in this.props.volunteer_hours) {\r\n            hour_rows.push(\r\n                <Row className=\"reg_row\" key={index}>\r\n                    <Col><Form.Control as=\"select\" id={\"vol_\" + index + \"|day\"} onChange={this.handleChange}\r\n                                       value={this.props.volunteer_hours[index].day}>\r\n                        <option label=\"Sunday\" value={0}/>\r\n                        <option label=\"Monday\" value={1}/>\r\n                        <option label=\"Tuesday\" value={2}/>\r\n                        <option label=\"Wednesday\" value={3}/>\r\n                        <option label=\"Thursday\" value={4}/>\r\n                        <option label=\"Friday\" value={5}/>\r\n                        <option label=\"Saturday\" value={6}/>\r\n                    </Form.Control></Col>\r\n                    <Form.Label column sm={2} lg={2}>Starting Time:</Form.Label>\r\n                    <Col><Form.Control type=\"time\" id={\"vol_\" + index + \"|start\"} onChange={this.handleChange}\r\n                                       value={this.props.volunteer_hours[index].start}/></Col>\r\n                    <Form.Label column sm={2} lg={2}>Ending Time:</Form.Label>\r\n                    <Col><Form.Control type=\"time\" id={\"vol_\" + index + \"|end\"} onChange={this.handleChange}\r\n                                       value={this.props.volunteer_hours[index].end}/></Col>\r\n                    <Col><Button variant=\"danger\"\r\n                                 onClick={(e) => this.props.removeVolHours(e.target.id)}>Delete</Button></Col>\r\n                </Row>\r\n            );\r\n            if (index !== last_index) hour_rows.push(<hr key={\"break_\"+index}/>);\r\n        }\r\n        return hour_rows;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float: \"left\"}}>Volunteer Hours</h5>\r\n                    <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.props.addVolHours()}>\r\n                        Add Volunteer Day\r\n                    </Button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {this.generateHourRows()}\r\n                </Card.Body>\r\n                <h6>{\" \"}</h6>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    volunteer_hours: state.active_profile.volunteer_hours,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n    addVolHours: () => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"add_vol_hours\",\r\n            value: null\r\n        }\r\n    }),\r\n    removeVolHours: (id) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: null,\r\n            id: \"remove_vol_hours\",\r\n            value: id\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerSchedule);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport \"./registration.css\"\r\n\r\n// May wish to add the ability for multiple caregivers\r\n// Accounting for this later\r\n\r\nclass CaregiverInformation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        switch (event.target.id) {\r\n            default:\r\n                this.props.updateRegistration(\"caregiver\", event.target.id.replace('reg_', ''), event.target.value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float: \"left\"}}>Caregiver Contact</h5>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>First Name:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_first_name\" placeholder=\"First Name\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.first_name}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>Last Name:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_last_name\" placeholder=\"Last Name\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.last_name}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>Email:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_email\" placeholder=\"Email Address\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.email}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>Mobile Phone:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_phone_mobile\" placeholder=\"Mobile Phone\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.phone_mobile}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>Home Phone:</Form.Label>\r\n                        <Col><Form.Control id=\"reg_phone_home\" placeholder=\"Home Phone\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.phone_home}/></Col>\r\n                    </Row>\r\n                    <Row className=\"reg_row\">\r\n                        <Form.Label column sm={4} lg={2}>Communication Preference:</Form.Label>\r\n                        <Col><Form.Control as=\"select\" id=\"reg_preferred_communication\" onChange={this.handleChange}\r\n                                           value={this.props.caregiver.preferred_communication}>\r\n                            <option value=\"\" label=\"\"/>\r\n                            <option value=\"email\" label=\"Email\"/>\r\n                            <option value=\"mobile\" label=\"Mobile Phone\"/>\r\n                            <option value=\"home\" label=\"Home Phone\"/>\r\n                        </Form.Control></Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    caregiver: state.active_profile.caregiver,\r\n    user_type: state.active_profile.user_type\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateRegistration: (type, id, value) => dispatch({\r\n        type: \"registration\",\r\n        payload: {\r\n            type: type,\r\n            id: id,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CaregiverInformation);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nimport CommonAddresses from \"./registration/CommonAddresses.js\";\r\nimport EmergencyInformation from \"./registration/EmergencyInformation.js\";\r\nimport GeneralInformation from \"./registration/GeneralInformation.js\";\r\nimport SpecialAccommodations from \"./registration/SpecialAccommodations.js\";\r\nimport DriverSpecific from \"./registration/DriverSpecific.js\";\r\nimport VehicleInformation from \"./registration/VehicleInformation.js\";\r\nimport VolunteerSchedule from \"./registration/VolunteerSchedule.js\";\r\nimport CaregiverInformation from \"./registration/CaregiveInformation\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {API_ROOT} from \"../../modules/api\";\r\nimport cookies from \"react-cookies\";\r\n\r\n// This page will build a user in its state then export that to the firebase.\r\n// It should hopefully not \"hit\" the reducer to minimize clutter.\r\n// Once a user is made it should be added to the store so another pull is not needed tho!\r\n\r\nconst DRIVER_MAX = 5;\r\nconst RIDER_MAX = 4;\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error_message: \"\",\r\n            page: 0\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n        this.validateRegistration = this.validateRegistration.bind(this);\r\n        this.changePage = this.changePage.bind(this);\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t}\r\n\r\n    changePage(increment) {\r\n        if (increment <= 0 || this.validateRegistration()) {\r\n            let proposed_page = this.state.page + increment;\r\n            //Handle minimum\r\n            if (proposed_page < 0) proposed_page = 0;\r\n\r\n            //Handle highest page number\r\n            if (this.props.registration.user_type === \"rider\" && proposed_page > RIDER_MAX) {\r\n                proposed_page = RIDER_MAX;\r\n            } else if (proposed_page > DRIVER_MAX) {\r\n                proposed_page = DRIVER_MAX;\r\n            }\r\n\r\n            this.setState({page: proposed_page, error_message: \"\"});\r\n        } else {\r\n            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        }\r\n    }\r\n\r\n    generatePage() {\r\n        // The directory of pages should change based on a rider/driver, 0\r\n        // will always be the same\r\n        if (this.props.registration.user_type === \"driver\") {\r\n            switch(this.state.page) {\r\n                case 0: return (<GeneralInformation/>);\r\n                case 1: return (<CommonAddresses mode=\"driver\"/>);\r\n                case 2: return (<EmergencyInformation/>);\r\n                case 3: return (<VehicleInformation/>);\r\n                case 4: return (<VolunteerSchedule/>);\r\n                case 5: return (<DriverSpecific/>);\r\n                default: break;\r\n            }\r\n        } else {\r\n            switch (this.state.page) {\r\n                case 0: return (<GeneralInformation/>);\r\n                case 1: return (<CommonAddresses mode=\"rider\"/>);\r\n                case 2: return (<EmergencyInformation/>);\r\n                case 3: return (<CaregiverInformation/>);\r\n                case 4: return (<SpecialAccommodations/>);\r\n                default: break;\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        let emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return emailPattern.test(email);\r\n    }\r\n\r\n    validatePhoneNumber(number){\r\n        let phoneNumberPattern = /^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$/;\r\n        return phoneNumberPattern.test(number);\r\n    }\r\n\r\n    validateZipCode(zip){\r\n        let zipCodePattern = /^\\d{5}$|^\\d{5}-\\d{4}$/;\r\n        return zipCodePattern.test(zip);\r\n    }\r\n\r\n    validateRegistration() {\r\n        //Validate the registration\r\n        // Might want to have a \"list of errors and then display a bunch of them? might be ugly\"\r\n        // THis solution works for now\r\n        switch (this.state.page) {\r\n            case 0:\r\n                if (!this.props.registration.user_type) {\r\n                    this.setState({error_message: \"INVALID ACCOUNT TYPE: Please select an account type.\"});\r\n                    return false;\r\n                } else if (!this.props.registration.personal_info.first_name) {\r\n                    this.setState({error_message: \"INVALID FIRST NAME: Please provide a first name.\"});\r\n                    return false;\r\n                } else if (!this.props.registration.personal_info.last_name) {\r\n                    this.setState({error_message: \"INVALID LAST NAME: Please provide a last name.\"});\r\n                    return false;\r\n                }\r\n                switch (this.props.registration.personal_info.preferred_communication) {\r\n                    case \"email\":\r\n                        if (!this.validateEmail(this.props.registration.personal_info.email)) {\r\n                            this.setState({error_message: \"INVALID EMAIL: Please provide a properly formatted email.\"});\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case \"mobile\":\r\n                        if (!this.validatePhoneNumber(this.props.registration.personal_info.phone_mobile)) {\r\n                            this.setState({error_message: \"INVALID MOBILE PHONE: Please provide a properly formatted mobile phone number.\"});\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    case \"home\":\r\n                        if (!this.validatePhoneNumber(this.props.registration.personal_info.phone_home)) {\r\n                            this.setState({error_message: \"INVALID HOME PHONE: Please provide a properly formatted home phone number.\"});\r\n                            return false;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this.setState({error_message: \"INVALID COMMUNICATION PREFERENCE: Please select a form of communication.\"})\r\n                        return false;\r\n                }\r\n                if (this.props.registration.personal_info.language.length === 0) {\r\n                    this.setState({error_message: \"INVALID LANGUAGE: Please provide a language.\"});\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 1:\r\n                if (this.props.registration.user_type === \"rider\") {\r\n                    let address_names = new Set();\r\n                    for (let i = 0; i < this.props.registration.addresses.length; i++) {\r\n                        if (address_names.has(this.props.registration.addresses[i].name)) {\r\n                            this.setState({error_message: \"REDUNDANT ADDRESS NAME: Please provide a unique address name.\"});\r\n                            address_names.clear();\r\n                            return false;\r\n                        } else if (!this.props.registration.addresses[i].name) {\r\n                            this.setState({error_message: \"INVALID ADDRESS NAME: Please provide an address name.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.addresses[i].line_1) {\r\n                            this.setState({error_message: \"INVALID ADDRESS LINE 1: Please provide an address.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.addresses[i].city) {\r\n                            this.setState({error_message: \"INVALID CITY: Please provide a city.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.addresses[i].state) {\r\n                            this.setState({error_message: \"INVALID STATE: Please provide a state.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.addresses[i].zip) {\r\n                            this.setState({error_message: \"INVALID ZIP CODE: Please provide a zip code.\"});\r\n                            return false;\r\n                        }\r\n                        address_names.add(this.props.registration.addresses[i].name);\r\n                    }\r\n                    address_names.clear();\r\n                    return true;\r\n                }\r\n                else if (this.props.registration.user_type === \"driver\") {\r\n                    if (!this.props.registration.addresses[0].name) {\r\n                        this.setState({error_message: \"INVALID ADDRESS NAME: Please provide an address name.\"});\r\n                        return false;\r\n                    } else if (!this.props.registration.addresses[0].line_1) {\r\n                        this.setState({error_message: \"INVALID ADDRESS LINE 1: Please provide an address.\"});\r\n                        return false;\r\n                    } else if (!this.props.registration.addresses[0].city) {\r\n                        this.setState({error_message: \"INVALID CITY: Please provide a city.\"});\r\n                        return false;\r\n                    } else if (!this.props.registration.addresses[0].state) {\r\n                        this.setState({error_message: \"INVALID STATE: Please provide a state.\"});\r\n                        return false;\r\n                    } else if (!this.validateZipCode(this.props.registration.addresses[0].zip)) {\r\n                        this.setState({error_message: \"INVALID ZIP CODE: Please provide a zip code.\"});\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            case 2:\r\n                if (!this.props.registration.emergency_contact.first_name) {\r\n                    this.setState({error_message: \"INVALID FIRST NAME: Please provide a first name.\"});\r\n                    return false;\r\n                } else if (!this.props.registration.emergency_contact.last_name) {\r\n                    this.setState({error_message: \"INVALID LAST NAME: Please provide a last name.\"});\r\n                    return false;\r\n                } else if (this.props.registration.emergency_contact.email) {\r\n                    if (!this.validateEmail(this.props.registration.emergency_contact.email)) {\r\n                        this.setState({error_message: \"INVALID EMAIL: Please provide a properly formatted email.\"});\r\n                        return false;\r\n                    }\r\n                } else if (!this.props.registration.emergency_contact.phone_home && !this.props.registration.emergency_contact.phone_mobile) {\r\n                    this.setState({error_message: \"INVALID PHONE NUMBER: Please provide a phone number.\"});\r\n                    return false;\r\n                } else if (this.props.registration.emergency_contact.phone_home) {\r\n                    if (!this.validatePhoneNumber(this.props.registration.emergency_contact.phone_home)) {\r\n                        this.setState({error_message: \"INVALID HOME PHONE: Please provide a properly formatted home phone number.\"});\r\n                        return false;\r\n                    }\r\n                } else if (this.props.registration.emergency_contact.phone_mobile) {\r\n                    if (!this.validatePhoneNumber(this.props.registration.emergency_contact.phone_mobile)) {\r\n                        this.setState({error_message: \"INVALID MOBILE PHONE: Please provide a properly formatted mobile phone number.\"});\r\n                        return false;\r\n                    }\r\n                } else if (!this.props.registration.emergency_contact.relationship) {\r\n                    this.setState({error_message: \"INVALID RELATIONSHIP: Please provide a relationship.\"});\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 3:\r\n                if (this.props.registration.user_type === \"rider\") {\r\n                    return true;\r\n                }\r\n                else if (this.props.registration.user_type === \"driver\") {\r\n                    let license_plates = new Set();\r\n                    for (let i = 0; i < this.props.registration.vehicles.length; i++) {\r\n                        if (license_plates.has(this.props.registration.vehicles[i].lp)) {\r\n                            this.setState({error_message: \"REDUNDANT LICENSE PLATE: Please provide a unique license plate.\"});\r\n                            license_plates.clear();\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].make_model) {\r\n                            this.setState({error_message: \"INVALID VEHICLE MAKE/MODEL: Please provide a vehicle make/model.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].year) {\r\n                            this.setState({error_message: \"INVALID VEHICLE YEAR: Please provide a vehicle year.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].color) {\r\n                            this.setState({error_message: \"INVALID VEHICLE YEAR: Please provide a vehicle color.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].lp) {\r\n                            this.setState({error_message: \"INVALID LICENSE PLATE: Please provide a license plate.\"});\r\n                            return false;\r\n                        } else if (this.props.registration.vehicles[i].seats === 0) {\r\n                            this.setState({error_message: \"INVALID SEAT NUMBER: Please provide a seat number.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].insur_provider) {\r\n                            this.setState({error_message: \"INVALID INSURANCE PROVIDER: Please provide an insurance provider.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].insur_policy) {\r\n                            this.setState({error_message: \"INVALID INSURANCE POLICY: Please provide an insurance policy.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].insur_exp) {\r\n                            this.setState({error_message: \"INVALID INSURANCE EXPIRATION DATE: Please provide an insurance expiration date.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].insur_coverage) {\r\n                            this.setState({error_message: \"INVALID INSURANCE COVERAGE: Please provide insurance coverage.\"});\r\n                            return false;\r\n                        } else if (!this.props.registration.vehicles[i].insp_date) {\r\n                            this.setState({error_message: \"INVALID INSPECTION DATE: Please provide an inspection date.\"});\r\n                            return false;\r\n                        }\r\n                        license_plates.add(this.props.registration.vehicles[i].lp);\r\n                    }\r\n                    license_plates.clear();\r\n                    return true;\r\n                }\r\n                return false;\r\n            case 4:\r\n                if (this.props.registration.user_type === \"rider\") {\r\n                    if (!this.props.registration.accommodations.smoke_preference) {\r\n                        this.setState({error_message: \"INVALID SMOKE PREFERENCE: Please select a smoke preference.\"});\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                else if (this.props.registration.user_type === \"driver\") {\r\n                    for (let i = 0; i < this.props.registration.volunteer_hours.length; i++) {\r\n                        if (this.props.registration.volunteer_hours[i].start) {\r\n                            if (!this.props.registration.volunteer_hours[i].end || moment(this.props.registration.volunteer_hours[i].start, \"HH:mm\").isAfter(moment(this.props.registration.volunteer_hours[i].end, \"HH:mm\"))) {\r\n                                this.setState({error_message: \"INVALID END TIME: Please provide an end time after start time.\"});\r\n                                return false;\r\n                            }\r\n                        } else if (this.props.registration.volunteer_hours[i].end) {\r\n                            if (!this.props.registration.volunteer_hours[i].start) {\r\n                                this.setState({error_message: \"INVALID START TIME: Please provide a start time.\"});\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            case 5:\r\n                if (this.props.registration.user_type === \"driver\") {\r\n                    if (!this.props.registration.driver_specific.vetting) {\r\n                        this.setState({error_message: \"INVALID VETTING: Please provide date last vetted.\"});\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.validateRegistration() && window.confirm(\"Are you sure you want to register this account for \" + this.props.registration.personal_info.first_name + \" \" + this.props.registration.personal_info.last_name + \"?\")) {\r\n            axios.post(API_ROOT + \"/database/users/user\", {user: this.props.registration}, {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                this.props.addUser(this.props.registration, response.data.id);\r\n                this.props.clearRegistration();\r\n                //This is part of react-router and allows forced page routing\r\n                this.props.history.push('/Profiles');\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                {this.state.error_message ? <Alert variant=\"danger\">{this.state.error_message}</Alert> : null}\r\n                {this.generatePage()}\r\n                <br/>\r\n                <Row style={{\r\n                    textAlign: \"center\",\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    bottom: \"0\",\r\n                    height: \"60px\",\r\n                    width: \"100%\",\r\n                }}>\r\n                    <Col></Col>\r\n                    <Col>\r\n                        <Button variant=\"dark\" size=\"lg\" id=\"prev_button\"\r\n                                disabled={(this.state.page === 0)}\r\n                                onClick={() => {this.changePage(-1)}}>\r\n                            PREV\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button size=\"lg\" id=\"reg_submit_button\"\r\n                                disabled={(this.props.registration.user_type === \"rider\" && this.state.page !== RIDER_MAX) || (this.props.registration.user_type === \"driver\" && this.state.page !== DRIVER_MAX)}\r\n                                onClick={() => {this.handleSubmit()}}>\r\n                            Submit\r\n                        </Button>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button variant=\"dark\" size=\"lg\" id=\"next_button\"\r\n                                disabled={(this.props.registration.user_type === \"rider\" && this.state.page === RIDER_MAX) || (this.props.registration.user_type === \"driver\" && this.state.page === DRIVER_MAX)}\r\n                                onClick={() => {this.changePage(1)}}>\r\n                            NEXT\r\n                        </Button>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <br/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    registration: state.active_profile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addUser: (user, id) => dispatch({\r\n        type: \"add_user\",\r\n        payload: {...user, id: id}\r\n    }),\r\n    clearRegistration: () => dispatch({\r\n        type: \"clear_active_profile\",\r\n        payload: null\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport GI from \"../registration/GeneralInformation.js\";\r\nimport EC from \"../registration/EmergencyInformation.js\";\r\nimport CI from \"../registration/CaregiveInformation.js\"\r\nimport CA from \"../registration/CommonAddresses.js\";\r\nimport SA from \"../registration/SpecialAccommodations.js\";\r\n\r\nimport VE from \"../registration/VehicleInformation.js\";\r\nimport VS from \"../registration/VolunteerSchedule.js\";\r\nimport VT from \"../registration/DriverSpecific.js\";\r\n\r\nconst DOW = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n/**\r\n * Profile\r\n * @typedef {Object} Profile\r\n * @property {string} sub_page - page to view within the profile\r\n * @property {string} mode - read-only vs read/write (edit)\r\n */\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sub_page: \"general_info\",\r\n            mode: \"view\"\r\n        };\r\n        this.changePage = this.changePage.bind(this);\r\n        this.genSubPage = this.genSubPage.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Sets the sub_page object variable\r\n     *\r\n     * @param {string} page - what search_term is set to\r\n     */\r\n    changePage(page) {\r\n        this.setState({sub_page: page});\r\n    }\r\n\r\n    /**\r\n     * Displays the sub_page depending on mode\r\n     *\r\n     * @returns {HTMLDocument}\r\n     */\r\n    genSubPage() {\r\n        switch (this.state.sub_page) {\r\n            case \"general_info\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered><tbody>\r\n                            <tr>\r\n                                <th>First Name</th><td>{this.props.user.personal_info.first_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Last Name</th>\r\n                                <td>{this.props.user.personal_info.last_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <td>{this.props.user.personal_info.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Home Phone</th>\r\n                                <td>{this.props.user.personal_info.phone_home}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Mobile Phone</th>\r\n                                <td>{this.props.user.personal_info.phone_mobile}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Preferred Communication</th>\r\n                                <td>{this.props.user.personal_info.preferred_communication.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Language</th>\r\n                                <td>{this.props.user.personal_info.language.map((l) => {\r\n                                    return l.replace(/^\\w/, c => c.toUpperCase()) + \", \"\r\n                                })}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Status</th>\r\n                                <td>{this.props.user.status.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                    return <GI partial={true}/>;\r\n                }\r\n                break;\r\n            case \"caregiver\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered>\r\n                            {this.props.user.caregiver ?\r\n                                <tbody>\r\n                                <tr>\r\n                                    <th>First Name</th>\r\n                                    <td>{this.props.user.caregiver.first_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Last Name</th>\r\n                                    <td>{this.props.user.caregiver.last_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Email</th>\r\n                                    <td>{this.props.user.caregiver.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Home Phone</th>\r\n                                    <td>{this.props.user.caregiver.phone_home}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Mobile Phone</th>\r\n                                    <td>{this.props.user.caregiver.phone_mobile}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Preferred Communication</th>\r\n                                    <td>{this.props.user.caregiver.preferred_communication.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                                : null}\r\n                        </Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                    return <CI/>;\r\n                }\r\n                break;\r\n            case \"emergency\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered>\r\n                            <tbody>\r\n                            <tr>\r\n                                <th>First Name</th>\r\n                                <td>{this.props.user.emergency_contact.first_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Last Name</th>\r\n                                <td>{this.props.user.emergency_contact.last_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Email</th>\r\n                                <td>{this.props.user.emergency_contact.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Home Phone</th>\r\n                                <td>{this.props.user.emergency_contact.phone_home}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Mobile Phone</th>\r\n                                <td>{this.props.user.emergency_contact.phone_mobile}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Preferred Communcation</th>\r\n                                <td>{this.props.user.emergency_contact.preferred_communication.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                    return <EC/>;\r\n                }\r\n                break;\r\n            case \"vehicles\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        this.props.user.vehicles.map((car) => {\r\n                            return (\r\n                                <React.Fragment key={car.lp+car.make_model}><Table striped bordered><tbody>\r\n                                    <tr>\r\n                                        <th colSpan=\"2\">{car.year + \" \" + car.make_model}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Make/Model</th>\r\n                                        <td>{car.make_model}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Year</th>\r\n                                        <td>{car.year}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Color</th>\r\n                                        <td>{car.color}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>License Plate</th>\r\n                                        <td>{car.lp}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Number of Seats</th>\r\n                                        <td>{car.seats}</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <th colSpan=\"2\">Insurance</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Provder</th>\r\n                                        <td>{car.insur_provider}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Policy Number</th>\r\n                                        <td>{car.insur_policy}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Coverage Amount</th>\r\n                                        <td>{car.insur_coverage}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Insurance Expiration</th>\r\n                                        <td>{car.insur_exp}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Last Inspection</th>\r\n                                        <td>{car.insp_date}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Additional Notes</th>\r\n                                        <td>{car.special}</td>\r\n                                    </tr>\r\n                                </tbody></Table>\r\n                                <hr/></React.Fragment>\r\n                            );\r\n                        })\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                   return <VE/>;\r\n                }\r\n                break;\r\n            case \"schedule\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Day</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.props.user.volunteer_hours.map((item) => {\r\n                            return (\r\n                                <tr key={item.day+item.start+item.end}>\r\n                                    <td>{DOW[item.day]}</td>\r\n                                    <td>{item.start}</td>\r\n                                    <td>{item.end}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                        </tbody></Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                   return <VS/>;\r\n                }\r\n                break;\r\n            case \"vetting\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered><tbody>\r\n                            <tr>\r\n                                <th>Vetting Date</th><td>{this.props.user.driver_specific.vetting}</td>\r\n                            </tr>\r\n                        </tbody></Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                   return <VT/>;\r\n                }\r\n                break;\r\n            case \"addresses\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        this.props.user.addresses.map((loc) => {\r\n                            return (\r\n                                <React.Fragment key={loc.name+loc.line_1}><Table striped bordered><tbody>\r\n                                    <tr>\r\n                                        <th colSpan=\"2\">{loc.name}</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Line 1</th>\r\n                                        <td>{loc.line_1}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Line 2</th>\r\n                                        <td>{loc.line_2}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>City</th>\r\n                                        <td>{loc.city}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>State</th>\r\n                                        <td>{loc.state}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Zip</th>\r\n                                        <td>{loc.zip}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Special Instructions</th>\r\n                                        <td>{loc.special_instructions}</td>\r\n                                    </tr>\r\n                                </tbody></Table>\r\n                                <hr/></React.Fragment>\r\n                            );\r\n                        })\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                    return (<CA/>);\r\n                }\r\n                break;\r\n            case \"special\":\r\n                if (this.state.mode === \"view\") {\r\n                    return (\r\n                        <Table striped bordered><tbody>\r\n                            <tr>\r\n                                <th>Allergies</th><td>{this.props.user.accommodations.allergies}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Mobility Aid</th><td>{this.props.user.accommodations.mobility_aid}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Smoke Free</th><td>{this.props.user.accommodations.smoke_preference.replace(/^\\w/, c => c.toUpperCase())}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Additional Accommodations</th><td>{this.props.user.accommodations.special}</td>\r\n                            </tr>\r\n                        </tbody></Table>\r\n                    );\r\n                } else if (this.state.mode === \"edit\") {\r\n                   return <SA/>;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Saves profile information when save is clicked in edit mode\r\n     */\r\n    handleSave() {\r\n        this.setState({mode: \"view\"});\r\n        //Moving firestore call to VillageReducer\r\n        this.props.updateUser(this.props.user.id);\r\n    }\r\n\r\n    /**\r\n     * Deactivates user when deactivate is clicked in edit mode\r\n     */\r\n    handleDeactivate() {\r\n        if (window.confirm(\"Are you sure you want to DEACTIVATE this user?\")) {\r\n            this.props.deactivateUser();\r\n            let name = this.props.user.personal_info.first_name + \" \" + this.props.user.personal_info.last_name;\r\n            window.alert(\"DEACTIVATED: \" + name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reactivates user when reactivate is clicked in edit mode\r\n     */\r\n    handleReactivate() {\r\n        if (window.confirm(\"Are you sure you want to ACTIVATE this user?\")) {\r\n            this.props.activateUser();\r\n            let name = this.props.user.personal_info.first_name + \" \" + this.props.user.personal_info.last_name;\r\n            window.alert(\"ACTIVATED: \" + name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Permanently deletes user when delete is clicked in edit mode\r\n     */\r\n    handlePermaDelete() {\r\n        if (window.confirm(\"Are you sure you want to DELETE this user?\")) {\r\n            let check_value = this.props.user.personal_info.first_name + \" \" + this.props.user.personal_info.last_name;\r\n            if (window.prompt(\"To delete this user please enter check value: \" + check_value + \"\\n THIS OPERATION CANNOT BE UNDONE!\") === check_value) {\r\n                this.props.deleteUser();\r\n                this.props.history.push(\"/Profiles/\");\r\n                window.alert(\"DELETED: \" + check_value);\r\n            } else {\r\n                window.alert(\"Check value did not match, operation canceled.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays the profile selected based on mode\r\n     *\r\n     * @returns {HTMLDocument}\r\n     */\r\n    render() {\r\n        return (\r\n            <div style={{paddingLeft: \"3%\", paddingRight: \"3%\"}}>\r\n            <Card>\r\n                <Card.Header>\r\n                    <h5 style={{float:\"left\"}}>{this.props.user.personal_info.first_name + \" \" + this.props.user.personal_info.last_name}</h5>\r\n                    <div style={{float:\"right\"}}>\r\n                        {this.props.user.status === \"active\" ?\r\n                        <React.Fragment>\r\n                            {this.state.mode === \"view\" ?\r\n                                <Button variant=\"warning\" style={{marginRight: \"10px\"}} onClick={() => this.setState({mode: \"edit\"})}>\r\n                                    Edit\r\n                                </Button>\r\n                            :\r\n                                <Button variant=\"success\" style={{marginRight: \"10px\"}} onClick={() => this.handleSave()}>\r\n                                    Save\r\n                                </Button>\r\n                            }\r\n                            <Button variant=\"danger\" onClick={() => this.handleDeactivate()}>\r\n                                Deactivate\r\n                            </Button>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Button variant=\"warning\" style={{marginRight: \"10px\"}} onClick={() => this.handleReactivate()}>\r\n                                Reactivate\r\n                            </Button>\r\n                            <Button variant=\"danger\" onClick={() => this.handlePermaDelete()}>\r\n                                Permanently Delete\r\n                            </Button>\r\n                        </React.Fragment>\r\n                        }\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Row>\r\n                    <Col sm={3}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item active={this.state.sub_page === \"general_info\"} onClick={() => this.changePage(\"general_info\")}>General Information</ListGroup.Item>\r\n                            <ListGroup.Item active={this.state.sub_page === \"emergency\"} onClick={() => this.changePage(\"emergency\")}>Emergency Contact</ListGroup.Item>\r\n                            {this.props.user.user_type === \"driver\" ?\r\n                                <>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"addresses\"} onClick={() => this.changePage(\"addresses\")}>Address</ListGroup.Item>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"vehicles\"} onClick={() => this.changePage(\"vehicles\")}>Vehicles</ListGroup.Item>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"schedule\"} onClick={() => this.changePage(\"schedule\")}>Volunteer Schedule</ListGroup.Item>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"vetting\"} onClick={() => this.changePage(\"vetting\")}>Vetting</ListGroup.Item>\r\n                                </>\r\n                            :\r\n                                <>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"caregiver\"}\r\n                                                    onClick={() => this.changePage(\"caregiver\")}>Caregiver Information</ListGroup.Item>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"addresses\"}\r\n                                                    onClick={() => this.changePage(\"addresses\")}>Addresses</ListGroup.Item>\r\n                                    <ListGroup.Item active={this.state.sub_page === \"special\"}\r\n                                                    onClick={() => this.changePage(\"special\")}>Special Accommodations</ListGroup.Item>\r\n                                </>\r\n                            }\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        {this.genSubPage()}\r\n                    </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Pulls user from state\r\n */\r\nconst mapStateToProps = state => ({\r\n    user: state.active_profile,\r\n});\r\n\r\n/**\r\n * Sets up functions to change users in reducer\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    deactivateUser: () => dispatch({\r\n        type: \"user_deactivate\",\r\n        payload: null\r\n    }),\r\n    activateUser: () => dispatch({\r\n        type: \"user_activate\",\r\n        payload: null\r\n    }),\r\n    deleteUser: () => dispatch({\r\n        type: \"user_perma_delete\",\r\n        payload: null\r\n    }),\r\n    updateUser: (id) => dispatch({\r\n        type: \"user_update\",\r\n        payload: id\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nclass LedgerTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        // this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * Switches to the Edit ride functionality\r\n     */\r\n    handleSelect(event) {\r\n        // event.target.id is the id of the ride\r\n        // Highlight the row\r\n        this.setState({selected_row: event.target.id.replace('edit','')});\r\n        // This is the ride being selected\r\n        this.props.setActiveRide(this.props.rides[event.target.id.replace('edit','')]);\r\n        // When clicked go to schedule ride to edit ride\r\n        this.props.history.push('/Ledger/EditRide/');\r\n    }\r\n\r\n    /**\r\n     * Permanently deletes ride\r\n     */\r\n    handleCancel(rideID) {\r\n        if (window.confirm(\"Are you sure you want to DELETE this ride?\")) {\r\n            this.props.cancelRide(rideID);\r\n            window.alert(\"CANCELLED: \" + rideID);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deactivates ride when deactivate is clicked\r\n     */\r\n    handleDeactivateRide(rideID) {\r\n        if (window.confirm(\"Are you sure you want to DEACTIVATE this ride?\")) {\r\n            this.props.deactivateRide(rideID);\r\n            window.alert(\"DEACTIVATED: \" + rideID);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reactivates an inactive ride when reactivate is clicked\r\n     */\r\n    handleReactivateRide(rideID) {\r\n        if (window.confirm(\"Are you sure you want to REACTIVATE this ride?\")) {\r\n            this.props.reactivateRide(rideID);\r\n            window.alert(\"REACTIVATED: \" + rideID);\r\n        }\r\n    }\r\n\r\n    futureButtons1(rides) {\r\n        return(\r\n            <td>\r\n                <Button id={rides.id + \"edit\"} variant=\"primary\" className=\"mr-1\" size=\"sm\"\r\n                           onClick={(e) => this.handleSelect(e)}>\r\n                Edit\r\n                </Button>\r\n\r\n                <Button id={rides.id + \"deactivate\"} variant=\"warning\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={() => this.handleDeactivateRide(rides.id)}>\r\n                    Deactivate\r\n                </Button>\r\n                <Button id={rides.id + \"cancel\"} variant=\"danger\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={() => this.handleCancel(rides.id)}>\r\n                    Cancel\r\n                </Button>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    futureButtons2(rides) {\r\n        return(\r\n            <td>\r\n                <Button id={rides.id + \"edit\"} variant=\"primary\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={(e) => this.handleSelect(e)}>\r\n                    Edit\r\n                </Button>\r\n\r\n                <Button id={rides.id + \"reactivate\"} variant=\"success\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={() => this.handleReactivateRide(rides.id)}>\r\n                    Reactivate\r\n                </Button>\r\n                <Button id={rides.id + \"cancel\"} variant=\"danger\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={() => this.handleCancel(rides.id)}>\r\n                    Cancel\r\n                </Button>\r\n            </td>\r\n        )\r\n    }\r\n\r\n    passedButtons(rides){\r\n        return(\r\n            <td>\r\n                <Button id={rides.id + \"cancel\"} variant=\"danger\" className=\"mr-1\" size=\"sm\"\r\n                        onClick={() => this.handleCancel(rides.id)}>\r\n                    Cancel\r\n                </Button>\r\n            </td>\r\n                )\r\n\r\n\r\n}\r\n\r\n    /**\r\n     *\r\n     * Displays Ledger table information with appropriate status tags and buttons\r\n     */\r\n    renderTableData() {\r\n        let rides = this.props.rides;\r\n        let keys = Object.keys(rides);\r\n        return keys.map((key) => {\r\n\r\n            /**\r\n             * check if ride is confirmed\r\n             */\r\n            let button_set;\r\n            let status;\r\n            const confirm_check = rides[key].ride_data.driver_confirmed ? <tr>D: Confirmed </tr> : <tr>D: Pending </tr>\r\n            const date = moment(rides[key].ride_data.date, \"YYYY-MM-DD\")\r\n            if (rides[key].status === \"inactive\") {\r\n                button_set = this.futureButtons2(rides[key]);\r\n                status = <tr>Inactive</tr>;\r\n\r\n            } else {\r\n                button_set = this.futureButtons1(rides[key]);\r\n                status = <tr>Active</tr>;\r\n\r\n            }\r\n            if (date.isBefore(moment().format(\"YYYY-MM-DD\"))) {\r\n                button_set = this.passedButtons(rides[key])\r\n                status = <tr>Passed</tr>\r\n            }\r\n            return (\r\n                <tr>\r\n                    <td>{rides[key].id}</td>\r\n                    <td>{rides[key].driver.first_name} {rides[key].driver.last_name}</td>\r\n                    <td>{rides[key].rider.first_name} {rides[key].rider.last_name}</td>\r\n                    <td>{rides[key].locations.pickup.address}</td>\r\n                    <td>{rides[key].locations.dropoff.address}</td>\r\n                    <td>{rides[key].ride_data.date}</td>\r\n                    <td>\r\n                        {status}\r\n                        {confirm_check}\r\n                    </td>\r\n                    {button_set}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Displays Ledger table Headers/Column Titles with\r\n     */\r\n    renderTableHeader() {\r\n        let header = ['Ride', 'Driver', 'Rider', 'Origin', 'Destination', 'Date','Status', 'Action'];\r\n        return header.map((item) => {\r\n            return <th key={item}>{item}</th>\r\n        })\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns The full table with headers and information\r\n     */\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        {this.renderTableHeader()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.renderTableData()}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Pulls users and rides from state\r\n * @param state\r\n * @returns {{rides: {}, users: {}}}\r\n */\r\nconst mapStateToProps = state => ({\r\n    rides: state.rides,\r\n    users: state.users\r\n});\r\n\r\n/**\r\n * Handles the backend calls for ride changes (reducer)\r\n * @param dispatch\r\n * @returns {{reactivateRide: (function(*=): *), deactivateRide: (function(*=): *), cancelRide: (function(*=): *), setActiveRide: (function(*=): *)}}\r\n */\r\nconst mapDispatchToProps = dispatch => ({\r\n    setActiveRide: (ride) => dispatch({\r\n        type: \"active_ride\",\r\n        payload: ride\r\n    }),\r\n\r\n    cancelRide: (rideID) => dispatch({\r\n        type: \"ride_cancel\",\r\n        payload: rideID\r\n    }),\r\n\r\n    deactivateRide: (rideID) => dispatch({\r\n        type: \"ride_deactivate\",\r\n        payload: rideID\r\n    }),\r\n\r\n    reactivateRide: (rideID) => dispatch({\r\n        type: \"ride_reactivate\",\r\n        payload: rideID\r\n    }),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LedgerTable));\r\n\r\n",
    "import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\"\r\nimport {Autocomplete} from \"@react-google-maps/api\";\r\nimport MapContainer from \"../google-maps/MapContainer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n//import './pic_placeholder.png';\r\n\r\nclass EditRide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            addresses: {},\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCommonAddress = this.handleCommonAddress.bind(this);\r\n\r\n        this.autocomplete = {};\r\n        this.count = 0;\r\n\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onPlaceChanged = this.onPlaceChanged.bind(this)\r\n        console.log('HERE')\r\n        console.log(this.props.active_ride);\r\n    }\r\n\r\n    handleBack(event){\r\n        this.props.history.push('/Ledger/');\r\n    }\r\n\r\n    handleSave(event){\r\n        this.props.saveRide(this.props.active_ride)\r\n        console.log(this.props.active_ride)\r\n        window.alert('Saved!')\r\n    }\r\n\r\n    handleChange(event) {\r\n        let label_flag = event.target.id.split(\"_\");\r\n        if (label_flag[1] === \"date\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[1], null, event.target.value);\r\n        } else if (label_flag[1] === \"purpose\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[1], null, event.target.value);\r\n        } else if (label_flag[1] === \"meta\" && label_flag[2] === \"samereturn\") {\r\n            //updating the date\r\n            this.props.updateScheduler(label_flag[2], null, event.target.checked)\r\n        } else if (label_flag[1] === \"driverconfirmed\") {\r\n            console.log(event.target)\r\n            this.props.updateScheduler(\"driver_confirmed\", null, event.target.checked);\r\n        } else {\r\n            //updating the location\r\n            this.props.updateScheduler(label_flag[1], label_flag[2], event.target.value)\r\n        }\r\n    };\r\n\r\n    handleCommonAddress(event, type) {\r\n        if (event.target.value === \"other\") {\r\n            //Update store\r\n            this.props.updateScheduler(\"common_address\", \"set\"+\"|\"+type, null)\r\n        } else {\r\n            this.props.updateScheduler(\"common_address\", type, this.props.active_ride.rider.id+\"|\"+event.target.value.replace(\"addr_\", \"\"))\r\n        }\r\n    }\r\n\r\n    getSelectedItems() {\r\n        let items = [];\r\n        let addresses = [];\r\n        for (let i = 0; i < this.props.users.length; i++) {\r\n            if (this.props.users[i].id === this.props.active_ride.rider.id) {\r\n                // this.setState({addresses: this.props.users[i].addresses});\r\n                let addresses = this.props.users[i].addresses\r\n            }\r\n        }\r\n        for (let i = 0; i < addresses.length; i++) {\r\n            items.push(<option key={i} value={i}>{i}</option>);\r\n        }\r\n        return items\r\n    }\r\n\r\n    onLoad(autocomplete) {\r\n        this.autocomplete[this.count] = autocomplete;\r\n        this.count += 1\r\n    }\r\n\r\n    onPlaceChanged(variable, number) {\r\n        if (this.autocomplete[number] != null) {\r\n            const place = this.autocomplete[number].getPlace();\r\n            this.props.updateScheduler(variable, \"address\", place.formatted_address);\r\n            this.props.updateScheduler(variable, \"geolocation\", {\r\n                lat: place.geometry.location.lat(),\r\n                lng: place.geometry.location.lng()\r\n            });\r\n\r\n        } else {\r\n            console.log('Autocomplete is not loaded yet!')\r\n        }\r\n    }\r\n\r\n    getCommonAddresses(mode) {\r\n        let options = [];\r\n        if (!this.props.active_ride.locations[mode].address) options.push(<option value={\"\"} label={\"\"} key=\"null\"/>);\r\n        if (!this.props.active_ride.rider.id) return options;\r\n        options.push(...this.props.users[this.props.active_ride.rider.id].addresses.map((loc)=>{\r\n            return <option value={\"addr_\"+loc.line_1} label={loc.name} key={loc.name}/>\r\n        }));\r\n        options.push(<option value={\"other\"} label={\"--Other--\"} key=\"other\"/>)\r\n        return options;\r\n    }\r\n\r\n    vehicleOptions() {\r\n        let options = [<option value={\"\"} label={\"\"}/>];\r\n        if (!this.props.active_ride.driver.id) return options;\r\n        options.push(...this.props.users[this.props.active_ride.driver.id].vehicles.map((car)=>{\r\n            return <option value={car.lp} label={car.year + \" \" + car.make_model}/>\r\n        }));\r\n        return options;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"Edit Ride\" style={{minWidth: \"100%\"}}>\r\n                {/*h1 {text-align: center;}*/}\r\n                <Row>\r\n                    <Col sm={2}>\r\n                    <td>\r\n\r\n                        <Button variant=\"secondary\" className=\"mr-1\" size=\"lg\" style={{ marginRight: \"auto\" }}\r\n                                onClick={(e) => this.handleBack(e)}>\r\n                            Back\r\n                        </Button>\r\n\r\n                    <Button variant=\"primary\" className=\"mr-1\" size=\"lg\" style={{ marginRight: \"auto\" }}\r\n                            onClick={(e) => this.handleSave(e)}>\r\n                        Save\r\n                    </Button>\r\n                        </td>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <h1>Edit Ride</h1>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Options</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>Name:</td>\r\n                                        <td>{`${this.props.active_ride.rider.first_name}`} {`${this.props.active_ride.rider.last_name}`}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Date:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"date\" placeholder=\"\" id='sched_date'\r\n                                                          onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.ride_data.date}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Driver Confirm:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            {console.log()}\r\n                                            <Form.Control type=\"checkbox\" placeholder=\"\" id='sched_driverconfirmed'\r\n                                                          onChange={this.handleChange}\r\n                                                          checked={this.props.active_ride.ride_data.driver_confirmed}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                Pickup to Dropoff\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div style={{ position: 'relative', width: '100%', height: '250px' }}>\r\n                                    <MapContainer/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Pickup</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Address:</Form.Label>\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <Autocomplete\r\n                                                onLoad={this.onLoad}\r\n                                                onPlaceChanged={() => this.onPlaceChanged('pickup', 0)}\r\n                                            >\r\n                                                <Form.Control type=\"text\" placeholder=\"Pickup Location\"\r\n                                                              disabled = {this.props.active_ride.ride_data.meta.pickup_CA}\r\n                                                              id='sched_pickup_address' onChange={this.handleChange}\r\n                                                              value={this.props.active_ride.locations.pickup.address}/>\r\n                                            </Autocomplete>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Time:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"time\" id='sched_pickup_time'\r\n                                                          onChange={(e) => this.handleChange(e)}\r\n                                                          value={this.props.active_ride.locations.pickup.time}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Special Instructions:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"text\" placeholder=\"Pickup Instructions\"\r\n                                                          id='sched_pickup_special' onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.locations.pickup.special}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <h5>Dropoff</h5>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Table borderless>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <Form.Label>Address:</Form.Label>\r\n                                        <td>\r\n                                            <Autocomplete\r\n                                                onLoad={this.onLoad}\r\n                                                onPlaceChanged={() => this.onPlaceChanged('dropoff', 1)}\r\n                                            >\r\n                                                <Form.Control type=\"text\" placeholder=\"Dropoff Location\"\r\n                                                              id='sched_dropoff_address' onChange={this.handleChange}\r\n                                                              disabled = {this.props.active_ride.ride_data.meta.dropoff_CA}\r\n                                                              value={this.props.active_ride.locations.dropoff.address}/>\r\n                                            </Autocomplete>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Time:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"time\" id='sched_dropoff_time'\r\n                                                          onChange={(e) => this.handleChange(e)}\r\n                                                          value={this.props.active_ride.locations.dropoff.time}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Form.Label>Special Instructions:</Form.Label>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Form.Control type=\"text\" placeholder=\"Dropoff Instructions\"\r\n                                                          id='sched_dropoff_special' onChange={this.handleChange}\r\n                                                          value={this.props.active_ride.locations.dropoff.special}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_ride: state.active_ride,\r\n    users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    updateScheduler: (type, field, value) => dispatch({\r\n        type: \"scheduler\",\r\n        payload: {\r\n            type: type,\r\n            field: field,\r\n            value: value\r\n        }\r\n    }),\r\n\r\n    saveRide: (ride) => dispatch({\r\n        type: \"ride_save\",\r\n        payload: ride\r\n    })\r\n\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditRide));\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport LedgerTable from \"./LedgerTable\";\r\nimport EditRide from \"./EditRide\";\r\n\r\nclass Ledger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n    };\r\n\r\n    /**\r\n     * Displays the Container for Ledger Table\r\n     * @returns {*}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <Row>\r\n                <LedgerTable/>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ledger);",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport moment from \"moment\";\r\n\r\nclass Riders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Populates Table with Riders' information\r\n     * @returns {*[]}\r\n     */\r\n    renderTableData() {\r\n        const results = {}\r\n        let riders = Object.values(this.props.users).filter((user) => {\r\n            return (user.user_type === 'rider')\r\n        });\r\n        const rides = Object.values(this.props.rides).filter(ride => moment(ride.ride_data.date, 'YYYY-MM-DD').isBefore(moment()))\r\n        for (const rider of riders) {\r\n            for (const ride of rides) {\r\n                if (Object.keys(results).indexOf(rider.id) === -1) {\r\n                    results[rider.id] = {}\r\n                    results[rider.id]['rides'] = 0\r\n                    results[rider.id]['mileage'] = 0\r\n                    results[rider.id]['village_id'] = rider.primary_village_id\r\n                }\r\n                if (ride.rider.id !== rider.id) continue;\r\n                results[rider.id]['rides'] += 1\r\n                results[rider.id]['mileage'] += ride.ride_data.mileage.rider ? ride.ride_data.mileage.rider : 0\r\n            }\r\n        }\r\n        return riders.map((rider) => {\r\n          if (!(rider.id in results)) return null;\r\n            return (\r\n                <tr key={rider.id} style={{display: 'table', tableLayout: 'fixed', width: '100%'}}>\r\n                    <td>{rider.id}</td>\r\n                    <td>{rider.personal_info.first_name} {rider.personal_info.last_name}</td>\r\n                    <td>{results[rider.id]['rides']}</td>\r\n                    <td>{/*results[rider.id]['mileage'].isFixed(2)*/}</td>\r\n                    <td>{results[rider.id]['village_id']}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Renders the Riders table's headers\r\n     * @returns {*[]}\r\n     */\r\n    renderTableHeader() {\r\n        let header = ['Rider Id', 'Rider', 'Rides', 'Mileage', 'Village'];\r\n        return header.map((item) => {\r\n            return <th key={item}>{item}</th>\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n    };\r\n\r\n    /**\r\n     * Renders everything formatted\r\n     * @returns {*}\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead style={{display: \"table\", width: 'calc( 100% - 17px )'}}>\r\n                    <tr style={{display: 'table', tableLayout: 'fixed', width: '100%'}}>\r\n                        {this.renderTableHeader()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody style={{display: 'block', height: '400px', width: '100%', overflow: 'auto'}}>\r\n                    {this.renderTableData()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Gets rides and users from state\r\n * @param state\r\n * @returns {{rides: {}, users: {}}}\r\n */\r\nconst mapStateToProps = state => ({\r\n    rides: state.rides,\r\n    users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Riders);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport moment from \"moment\";\r\n\r\nclass Drivers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Populates Drivers table with information from database\r\n     * @returns {*[]}\r\n     */\r\n    renderTableData() {\r\n        const results = {}\r\n        let drivers = Object.values(this.props.users).filter((user) => {\r\n            return (user.user_type === 'driver')\r\n        });\r\n        const rides = Object.values(this.props.rides).filter(ride => moment(ride.ride_data.date, 'YYYY-MM-DD').isBefore(moment()))\r\n        for (const driver of drivers) {\r\n            for (const ride of rides) {\r\n                if (Object.keys(results).indexOf(driver.id) === -1) {\r\n                    results[driver.id] = {}\r\n                    results[driver.id]['rides'] = 0\r\n                    results[driver.id]['mileage'] = 0\r\n                    results[driver.id]['time'] = 0\r\n                }\r\n                if (ride.driver.id !== driver.id) continue;\r\n                results[driver.id]['rides'] += 1\r\n                results[driver.id]['mileage'] += ride.ride_data.mileage.driver ? ride.ride_data.mileage.driver : 0\r\n                results[driver.id]['time'] += ride.ride_data.time_total.driver ? ride.ride_data.time_total.driver : 0\r\n\r\n            }\r\n        }\r\n        return drivers.map((driver) => {\r\n          if (!(driver.id in results)) return null;\r\n            return (\r\n                <tr key={driver.id} style={{display: 'table', tableLayout: 'fixed', width: '100%'}}>\r\n                    <td>{driver.id}</td>\r\n                    <td>{driver.personal_info.first_name} {driver.personal_info.last_name}</td>\r\n                    <td>{results[driver.id]['rides']}</td>\r\n                    <td>{results[driver.id]['mileage'].toFixed(2)}</td>\r\n                    <td>{moment(\"2015-01-01\").startOf('day')\r\n                        .seconds(results[driver.id]['time'])\r\n                        .format('H [hours] mm [minutes]')}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Displays the Table Headers/Column Titles\r\n     * @returns {*[]}\r\n     */\r\n    renderTableHeader() {\r\n        let header = ['Driver Id', 'Driver', 'Rides', 'Mileage', 'Volunteer Hours'];\r\n        return header.map((item) => {\r\n            return <th key={item}>{item}</th>\r\n        })\r\n    }\r\n\r\n    handleChange(event){\r\n    };\r\n\r\n    /**\r\n     * Renders the entire Drivers' metrics table\r\n     * @returns {*}\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead style={{display: \"table\", width: 'calc( 100% - 17px )'}}>\r\n                    <tr style={{display: 'table', tableLayout: 'fixed', width: '100%'}}>\r\n                        {this.renderTableHeader()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody style={{display: 'block', height: '400px', width: '100%', overflow: 'auto'}}>\r\n                    {this.renderTableData()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Gets rides and users from state\r\n * @param state\r\n * @returns {{rides: {}, users: {}}}\r\n */\r\nconst mapStateToProps = state => ({\r\n    rides: state.rides,\r\n    users: state.users\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Drivers);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport ProfileTable from \"../profiles/ProfileTable\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass Reports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n    };\r\n\r\n    /**\r\n     * Displays the Reports page and options\r\n     * @returns {*}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <Row>\r\n                    <Col style={{maxwidth: \"50%\"}}>\r\n                        <Card>\r\n                            <Card.Header as=\"th\">Choose the Type of Report</Card.Header>\r\n                            <Card.Body className=\"text-left\">\r\n\r\n                                <Form.Group as={Row}>\r\n                                    <Col sm={10}>\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            label=\"Mileage\"\r\n                                            name=\"formReportType\"\r\n                                            id=\"formReportTypeMileage\"\r\n                                        />\r\n                                    </Col>\r\n                                </Form.Group>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col style={{maxwidth: \"50%\"}}>\r\n                        <Card>\r\n                            <Card.Header as=\"th\">Enter Time Frame (Leave Blank for Entire History)</Card.Header>\r\n                            <Card.Body className=\"text-left\">\r\n                                Start Date (Inclusive):\r\n                                <Col><Form.Control type=\"date\" id=\"start_date\"/></Col>\r\n\r\n                                End Date (Inclusive):\r\n                                <Col><Form.Control type=\"date\" id=\"end_date\"/></Col>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row>\r\n                    <Col>\r\n                        <Card>\r\n                            <Card.Header as=\"th\">Select a Person</Card.Header>\r\n                            <Card.Body className=\"text-left\">\r\n                                <Form.Group as={Row}>\r\n                                    <Col>\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            label=\"Select All\"\r\n                                            name=\"formReportPeople\"\r\n                                            id=\"formReportPeopleSA\"\r\n                                        />\r\n                                        <Form.Check\r\n                                            type=\"radio\"\r\n                                            label={<ProfileTable mode=\"driver\"/>}\r\n                                            name=\"formReportPeople\"\r\n                                            id=\"formReportPeopleIndividual\"\r\n                                        />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ReactPDF from '@react-pdf/renderer';\r\nimport { PDFDownloadLink, Document, Page } from '@react-pdf/renderer';\r\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\r\n\r\nconst TODAY = new Date();\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: 'col',\r\n    backgroundColor: '#E4E4E4',\r\n    width: 3600,\r\n    margin: '20px',\r\n    '@media orientation: landscape': {\r\n      width: 3600,\r\n    },\r\n  },\r\n  table: { display: \"table\", width: \"90%\", borderStyle: \"solid\", borderWidth: 1, borderRightWidth: 0, borderBottomWidth: 0 },\r\n  tableRow: { margin: \"auto\", flexDirection: \"row\" },\r\n  tableCol: { width: \"20%\", borderStyle: \"solid\", borderWidth: 1, borderLeftWidth: 0, borderTopWidth: 0 },\r\n  tableCell: { margin: \"auto\", marginTop: 5, fontSize: 10 },\r\n});\r\n\r\n//PDF\r\nclass MileageReportPDF extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          total_miles: 0,\r\n          total_time: 0\r\n        };\r\n        this.generateRows = this.generateRows.bind(this);\r\n    }\r\n\r\n    generateRows() {\r\n      let ride_ids = Object.keys(this.props.rides);\r\n      let counter = 0;\r\n      let time = 0;\r\n      let miles = 0;\r\n      let rows = ride_ids.filter((ride) => {\r\n          return this.props.rides[ride].driver.id === this.props.driver.id;\r\n      }).map((item) => {\r\n          counter += 1;\r\n          time += this.props.rides[item].ride_data.time_total.driver;\r\n          miles += this.props.rides[item].ride_data.mileage.driver;\r\n          return (\r\n            <View style={styles.tableRow}>\r\n              <View style={styles.tableCol}>\r\n                  <Text style={styles.tableCell}>{counter}</Text>\r\n              </View>\r\n              <View style={styles.tableCol}>\r\n                  <Text style={styles.tableCell}>{this.props.rides[item].id}</Text>\r\n              </View>\r\n              <View style={styles.tableCol}>\r\n                  <Text style={styles.tableCell}>{this.props.rides[item].ride_data.date}</Text>\r\n              </View>\r\n              <View style={styles.tableCol}>\r\n                  <Text style={styles.tableCell}>{(this.props.rides[item].ride_data.time_total.driver/60).toFixed(2)}</Text>\r\n              </View>\r\n              <View style={styles.tableCol}>\r\n                  <Text style={styles.tableCell}>{(this.props.rides[item].ride_data.mileage.driver).toFixed(2)}</Text>\r\n              </View>\r\n          </View>\r\n        )});\r\n        if (this.state.total_time !== time || this.state.total_miles !== miles) {\r\n          this.setState({total_time: time, total_miles: miles});\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    generateRideTable() {\r\n        return (\r\n          <>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableRow}>\r\n                <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>Item Number</Text>\r\n                </View>\r\n                <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>Ride ID</Text>\r\n                </View>\r\n                <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>Trip Date</Text>\r\n                </View>\r\n                <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>Trip Time</Text>\r\n                </View>\r\n                <View style={styles.tableCol}>\r\n                    <Text style={styles.tableCell}>Trip Mileage</Text>\r\n                </View>\r\n            </View>\r\n            <View>\r\n              {this.generateRows()}\r\n            </View>\r\n            </View>\r\n            <View><Text>{\" \"}</Text></View>\r\n            <View>\r\n                <Text>{\"Totals:\"}</Text>\r\n            </View>\r\n            <View style={styles.table}>\r\n              <View style={styles.tableRow}>\r\n                  <View style={styles.tableCol}>\r\n                      <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                      <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                      <Text style={styles.tableCell}></Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                      <Text style={styles.tableCell}>{(this.state.total_time/60).toFixed(2)}</Text>\r\n                  </View>\r\n                  <View style={styles.tableCol}>\r\n                      <Text style={styles.tableCell}>{(this.state.total_miles).toFixed(2)}</Text>\r\n                  </View>\r\n              </View>\r\n          </View>\r\n        </>);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Document\r\n                title={this.props.driver.personal_info.last_name + \" Mileage Report: \"+TODAY.getDate()+(TODAY.getMonth()+1)+TODAY.getFullYear()}\r\n                author=\"AGS Village Valet\"\r\n                creator=\"AGS Village Valet\"\r\n            >\r\n                <Page size=\"A4\" style={styles.page}>\r\n                    <View>\r\n                        <Text>AGS Village Valet - Mileage Report</Text>\r\n                    </View>\r\n                    <View><Text>{\" \"}</Text></View>\r\n                    <View>\r\n                        <Text>{this.props.driver.personal_info.last_name + \", \" + this.props.driver.personal_info.first_name}</Text>\r\n                        <Text>{this.props.driver.addresses[0].line_1}</Text>\r\n                        <Text>{this.props.driver.addresses[0].city + \", \" + this.props.driver.addresses[0].state + \" \" + this.props.driver.addresses[0].zip}</Text>\r\n                        <Text>{(this.props.driver.personal_info.email ? this.props.driver.personal_info.email + \" \" : \"\") + (this.props.driver.personal_info.phone_home ? this.props.driver.personal_info.phone_home + \" \" : \"\") + (this.props.driver.personal_info.phone_mobile ? this.props.driver.personal_info.phone_mobile + \" \" : \"\")}</Text>\r\n                    </View>\r\n                    <View><Text>{\" \"}</Text></View>\r\n                    <View>\r\n                        <Text>{\"From: [DATE]\"}</Text>\r\n                        <Text>{\"To: [DATE]\"}</Text>\r\n                    </View>\r\n                    <View><Text>{\" \"}</Text></View>\r\n                    {this.generateRideTable()}\r\n                </Page>\r\n            </Document>\r\n        )\r\n    }\r\n}\r\n\r\n//This is the \"rendered component\"\r\nclass MileageReportButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <PDFDownloadLink document={<MileageReportPDF driver={this.props.driver} rides={this.props.rides}/>} fileName={this.props.driver.personal_info.last_name + \"-M\"+TODAY.getDate()+(TODAY.getMonth()+1)+TODAY.getFullYear()}>\r\n              {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n            </PDFDownloadLink>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    driver: state.active_profile,\r\n    rides: state.rides\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MileageReportButton);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\nimport Riders from \"./Riders.js\";\r\nimport Drivers from \"./Drivers.js\";\r\nimport Reports from \"./Reports\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\n//Reports\r\nimport MileageReport from \"./reports/MileageReport.js\";\r\n\r\nclass Metrics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          metric_options: \"drivers\",\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * handles the metrics tab button presses\r\n     * @param value: the metric/report selected\r\n     */\r\n\t   handleChange(value) {\r\n        this.setState({metric_options:value})\r\n\r\n    }\r\n\r\n    /**\r\n     * changes the report to be downloaded\r\n     * @returns {*}: Components to the corresponding metric/report\r\n     */\r\n    pickReport() {\r\n      if (this.state.metric_options === \"reports\") {\r\n        if (this.props.active_profile.id) {\r\n          return <MileageReport/>\r\n        } else {\r\n          return <p>Select a Person</p>\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * changes the displayed table\r\n     * @returns {*}: Components to the corresponding metric/report\r\n     */\r\n\t   changeTable() {\r\n        switch (this.state.metric_options) {\r\n            case \"riders\":\r\n                return (<Riders/>);\r\n            case \"drivers\":\r\n                return (<Drivers/>);\r\n            case \"reports\":\r\n                return (<Reports/>);\r\n            default:\r\n                return(<Riders/>);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays the metrics toolbar, download button, and selected metric/report\r\n     * @returns {*}\r\n     */\r\n    render() {\r\n        return (\r\n            <Container style={{minWidth: \"100%\"}}>\r\n                <ButtonToolbar\r\n                    className=\"justify-content-between\"\r\n                    aria-label=\"Toolbar with Button groups\">\r\n\r\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1} onChange={this.handleChange} >\r\n                        <ToggleButton id='riders' value={'riders'}>Riders</ToggleButton>\r\n                        <ToggleButton id='drivers' value={'drivers'}>Drivers</ToggleButton>\r\n                        <ToggleButton id='reports'  value={'reports'}>Reports</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n\r\n                    <Col sm={2}>\r\n                        {this.pickReport()}\r\n                    </Col>\r\n                </ButtonToolbar>\r\n                <hr/>\r\n                {this.changeTable()}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  active_profile: state.active_profile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Metrics);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Operator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            edit: false,\r\n            mode: \"\",\r\n            password: \"\",\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        //Make sure that if they change the selected the mode is changed\r\n        if (this.props.show_operator !== prevProps.show_operator) {\r\n            this.setState({edit: false});\r\n        }\r\n    }\r\n\r\n\thandleChange(event) {\r\n        let field = event.target.id.split(\"|\")[1];\r\n        if (field === \"password\") {\r\n            //This should probably be validated!\r\n            this.setState({password: event.target.value});\r\n            //Encrypt and pass the password\r\n            this.props.changeOperator(\"edit\", \"password\", event.target.value);\r\n        } else {\r\n            this.props.changeOperator(\"edit\", field, event.target.value);\r\n        }\r\n\t}\r\n\r\n    villageOptions() {\r\n        let options = [];\r\n        let villages = Object.values(this.props.villages);\r\n        options = villages.map((v) => {\r\n            return(\r\n                <option key={v.id} value={v.id} label={v.village_name}/>\r\n            )\r\n        })\r\n        return [<option key={\"\"} value={\"\"} label={\"\"}/>, ...options];\r\n    }\r\n\r\n    saveOperator() {\r\n        if (this.validate()) {\r\n            if (this.state.mode === \"new\") {\r\n                this.props.changeOperator(\"add\")\r\n            } else {\r\n                this.props.changeOperator(\"save\")\r\n            }\r\n            this.setState({edit: false, password: \"\", mode: \"\"});\r\n        }\r\n    }\r\n\r\n    deleteOperator() {\r\n        if (window.confirm(\"Are you sure you want to delete this operator?\\nTHIS CANNOT BE UNDONE!\")) {\r\n            this.props.changeOperator(\"delete\");\r\n            this.setState({edit: false, password: \"\", mode: \"\"});\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        if (this.props.active_operator.first_name === \"\") {\r\n            window.alert(\"INVALID NAME: Please provide a first name.\");\r\n            return false;\r\n        } else if (this.props.active_operator.last_name === \"\") {\r\n            window.alert(\"INVALID NAME: Please provide a last name.\");\r\n            return false;\r\n        } else if (this.props.active_operator.email === \"\") {\r\n            window.alert(\"INVALID EMAIL: Please provide an email.\");\r\n            return false;\r\n        } else if (this.props.active_operator.phone === \"\") {\r\n            window.alert(\"INVALID PHONE NUMBER: Please provide a phone number.\");\r\n            return false;\r\n        } else if (this.props.active_operator.username === \"\") {\r\n            window.alert(\"INVALID USERNAME: Please provide a username.\");\r\n            return false;\r\n        } else if (this.state.mode === \"new\" && this.props.active_operator.password === \"\") {\r\n            window.alert(\"INVALID PASSWORD: Please provide a password.\");\r\n            return false;\r\n        } else if (this.props.active_operator.village_id === \"\") {\r\n            window.alert(\"INVALID VILLAGE: Please select a Village for the Operator.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <Card.Header>\r\n                <h5 style={{float:\"left\"}}>{this.props.active_operator.first_name ? this.props.active_operator.first_name +\" \"+ this.props.active_operator.last_name : \"Select an Operator\"}</h5>\r\n                {!this.state.edit ?\r\n                    <>{this.props.show_village && this.props.show_operator ?\r\n                        <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.setState({edit: true, mode: \"edit\"})}>\r\n                            Edit Operator\r\n                        </Button>\r\n                    :\r\n                        <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.setState({edit: true, mode: \"new\"})}>\r\n                            Add Operator\r\n                        </Button>\r\n                    }</>\r\n                :\r\n                    <>\r\n                        <Button variant=\"success\" style={{float: \"right\", marginLeft: \"10px\"}} onClick={() => this.saveOperator()}>\r\n                            Save\r\n                        </Button>\r\n                        {this.state.mode !== \"new\" ?\r\n                        <Button variant=\"danger\" style={{float: \"right\"}} onClick={() => this.deleteOperator()}>\r\n                            Delete\r\n                        </Button>\r\n                        : null }\r\n                    </>\r\n                }\r\n            </Card.Header>\r\n            <Card.Body>\r\n                {!this.state.edit ?\r\n                    <Table><tbody>\r\n                        <tr>\r\n                            <td>Username: </td>\r\n                            <td>{this.props.active_operator.username}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email: </td>\r\n                            <td>{this.props.active_operator.email}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Phone Number: </td>\r\n                            <td>{this.props.active_operator.phone}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Village: </td>\r\n                            <td>{this.props.active_village ? this.props.active_village.village_name : \"\"}</td>\r\n                        </tr>\r\n                    </tbody></Table>\r\n                :\r\n                    <Table><tbody>\r\n                        <tr>\r\n                            <td>First Name: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|first_name\" onChange={this.handleChange} value={this.props.active_operator.first_name}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Last Name: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|last_name\" onChange={this.handleChange} value={this.props.active_operator.last_name}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|email\" onChange={this.handleChange} value={this.props.active_operator.email}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Phone Number: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|phone\" onChange={this.handleChange} value={this.props.active_operator.phone}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Username: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|username\" onChange={this.handleChange} value={this.props.active_operator.username}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Password: </td>\r\n                            <td>\r\n                                <Form.Control placeholder={this.state.mode === \"new\" ? \"\" : \"Leave blank to keep existing password.\"} id=\"admin|password\" onChange={this.handleChange} value={this.state.password}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Village: </td>\r\n                            <td>\r\n                                <Form.Control as=\"select\" id=\"admin|village_id\" onChange={this.handleChange} value={this.props.active_operator.village_id}>\r\n                                    {this.villageOptions()}\r\n                                </Form.Control>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody></Table>\r\n                }\r\n            </Card.Body>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_operator: state.active_operator,\r\n    active_village: state.active_village,\r\n    villages: state.villages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeOperator: (mode, field=null, value=null) => dispatch({\r\n        type: \"change_admin\",\r\n        payload: {\r\n            type: \"operator\",\r\n            mode: mode,\r\n            field: field,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Operator);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Village extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            edit: false,\r\n            mode: \"\",\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeVetting = this.handleChangeVetting.bind(this);\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        //Make sure that if they change the selected the mode is changed\r\n        if (this.props.show_village !== prevProps.show_village) {\r\n            this.setState({edit: false});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        let field = event.target.id.split(\"|\")[1];\r\n        this.props.changeVillage(\"edit\", field, event.target.value);\r\n\t}\r\n\r\n    handleChangeVetting(previous, event) {\r\n        this.props.changeVillage(\"edit_vetting\", previous, event.target.value);\r\n    }\r\n\r\n    saveVillage() {\r\n        if (this.validate()) {\r\n            if (this.state.mode === \"new\") {\r\n                this.props.changeVillage(\"add\");\r\n            } else {\r\n                this.props.changeVillage(\"save\");\r\n            }\r\n            this.setState({edit: false, password: \"\", mode: \"\"});\r\n        }\r\n    }\r\n\r\n    deleteVillage() {\r\n        if (window.confirm(\"Are you sure you want to delete this village?\\nTHIS CANNOT BE UNDONE!\")) {\r\n            this.props.changeVillage(\"delete\");\r\n            this.setState({edit: false, password: \"\", mode: \"\"});\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        if (this.props.active_village.village_name === \"\") {\r\n            window.alert(\"INVALID NAME: Please provide a village name.\");\r\n            return false;\r\n        } else if (this.props.active_village.email === \"\") {\r\n            window.alert(\"INVALID EMAIL: Please provide an email.\");\r\n            return false;\r\n        } else if (this.props.active_village.phone === \"\") {\r\n            window.alert(\"INVALID PHONE NUMBER: Please provide a phone number.\");\r\n            return false;\r\n        } else if (this.props.active_village.vetting === \"\") {\r\n            window.alert(\"INVALID VETTING: Please list out vetting criteria.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <Card.Header>\r\n                <h5 style={{float:\"left\"}}>{(this.props.active_village && this.props.active_village.village_name) ? this.props.active_village.village_name : \"Select a Village\"}</h5>\r\n                {!this.state.edit ?\r\n                    <>{(this.props.show_village && this.props.active_village && this.props.active_village.id) ?\r\n                        <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.setState({edit: true, mode: \"edit\"})}>\r\n                            Edit Village\r\n                        </Button>\r\n                    :\r\n                        <Button variant=\"dark\" style={{float: \"right\"}} onClick={() => this.setState({edit: true, mode: \"new\"})}>\r\n                            Add Village\r\n                        </Button>\r\n                    }</>\r\n                :\r\n                    <>\r\n                        <Button variant=\"success\" style={{float: \"right\", marginLeft: \"10px\"}} onClick={() => this.saveVillage()}>\r\n                            Save\r\n                        </Button>\r\n                        {this.state.mode !== \"new\" ?\r\n                        <Button variant=\"danger\" style={{float: \"right\"}} onClick={() => this.deleteVillage()}>\r\n                            Delete\r\n                        </Button>\r\n                        : null }\r\n                    </>\r\n                }\r\n            </Card.Header>\r\n            <Card.Body>\r\n                {!this.state.edit ?\r\n                    <Table><tbody>\r\n                        <tr>\r\n                            <td>Email: </td>\r\n                            <td>{(this.props.show_village && this.props.villages[this.props.show_village]) ? this.props.villages[this.props.show_village].email : null}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Phone Number: </td>\r\n                            <td>{(this.props.show_village && this.props.villages[this.props.show_village]) ? this.props.villages[this.props.show_village].phone : null}</td>\r\n                        </tr>\r\n                    </tbody></Table>\r\n                :\r\n                    <Table><tbody>\r\n                        <tr>\r\n                            <td>Village Name: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|village_name\" onChange={this.handleChange} value={this.props.active_village.village_name}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|email\" onChange={this.handleChange} value={this.props.active_village.email}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Phone: </td>\r\n                            <td>\r\n                                <Form.Control id=\"admin|phone\" onChange={this.handleChange} value={this.props.active_village.phone}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Vetting Criteria: </td>\r\n                            {this.props.active_village.vetting.map((vetting,index) => <Form.Control id=\"admin|vetting\" onChange={(e) => this.handleChangeVetting(vetting, e)} value={vetting}/>)}\r\n                            <Form.Control id=\"admin|vetting\" onChange={(e) => this.handleChangeVetting(null, e)}/>\r\n                        </tr>\r\n                    </tbody></Table>\r\n                }\r\n            </Card.Body>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    active_village: state.active_village,\r\n    villages: state.villages\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeVillage: (mode, field=null, value=null) => dispatch({\r\n        type: \"change_admin\",\r\n        payload: {\r\n            type: \"village\",\r\n            mode: mode,\r\n            field: field,\r\n            value: value\r\n        }\r\n    }),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Village));\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Operator from \"./Operator.js\";\r\nimport Village from \"./Village.js\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n    \r\n    showVillage(village) {\r\n        this.props.show(\"\", village);\r\n    }\r\n\r\n    showOperator(id, village) {\r\n        this.props.show(id, village);\r\n    }\r\n\r\n    genVillageRows() {\r\n        let rows = [];\r\n        rows.push(<Button\r\n                      variant={\"light\"}\r\n                      onClick={() => this.showVillage(\"\")}\r\n                      key={\"\"}\r\n                  >\r\n                      --Clear Selection--\r\n                  </Button>);\r\n        rows.push(<br key={\"break\"}/>);\r\n        for (const village of Object.values(this.props.villages)) {\r\n            rows.push(<ListGroup.Item\r\n                active={this.props.show_village === village.id}\r\n                onClick={() => this.showVillage(village.id)}\r\n                key={village.id}\r\n            >\r\n                {village.village_name}\r\n            </ListGroup.Item>);\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    genOperatorRows() {\r\n        let rows = [];\r\n        let villages = Object.values(this.props.villages)\r\n        if (this.props.show_village !== \"\") {\r\n            villages = [this.props.villages[this.props.show_village]];\r\n        }\r\n        for (const village of villages) {\r\n            const operators = Object.values(this.props.operators).filter(o => o.village_id === village.id)\r\n            for (const operator of operators) {\r\n                rows.push(<ListGroup.Item\r\n                    active={this.props.show_operator === operator.id}\r\n                    onClick={() => this.showOperator(operator.id, village.id)}\r\n                    key={operator.id}\r\n                >\r\n                    {operator.first_name + \" \" + operator.last_name}\r\n                </ListGroup.Item>);\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row style={{paddingLeft:\"15px\", paddingRight:\"15px\", height: \"85vh\"}}>\r\n                <Col xs={3} style={{height: \"100%\"}}>\r\n                    <Card style={{height: \"100%\"}}>\r\n                        <Card.Header>\r\n                            <h5 style={{float:\"left\"}}>Villages</h5>\r\n                        </Card.Header>\r\n                        <Card.Body style={{overflow: \"scroll\"}}>\r\n                            <ListGroup>\r\n                                {this.genVillageRows()}\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={3} style={{height: \"100%\"}}>\r\n                    <Card style={{height: \"100%\"}}>\r\n                        <Card.Header>\r\n                            <h5 style={{float:\"left\"}}>Operators</h5>\r\n                        </Card.Header>\r\n                        <Card.Body style={{overflow: \"scroll\"}}>\r\n                            <ListGroup>\r\n                                {this.genOperatorRows()}\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={6} style={{height: \"100%\"}}>\r\n                    <Row>\r\n                        <Col><Card>\r\n                            <Village show_village={this.props.show_village}/>\r\n                        </Card></Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col><Card>\r\n                            <Operator show_village={this.props.show_village} show_operator={this.props.show_operator}/>\r\n                        </Card></Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    villages: state.villages,\r\n    operators: state.operators,\r\n    show_village: state.admin.show_village,\r\n    show_operator: state.admin.show_operator,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    debug: () => dispatch({\r\n        type: \"dump_store\",\r\n        payload: null\r\n    }),\r\n    show: (id, village) => dispatch({\r\n        type: \"admin_page\",\r\n        payload: {\r\n            id: id,\r\n            village: village\r\n        }\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n",
    "import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Error extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t}\r\n\r\n    /**\r\n     * Renders a a new page with an error message\r\n     *\r\n     */\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                The page you've requested cannot be found.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\r\n",
    "import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport \"./App.css\";\r\n\r\nimport LoadData from \"./components/LoadData.js\";\r\n\r\nimport Navigation from './components/Navigation.js';\r\nimport Login from \"./components/Login.js\";\r\nimport Dashboard from './components/dashboard/Dashboard.js';\r\nimport Scheduler from './components/scheduler/Scheduler.js';\r\nimport Profiles from './components/profiles/Profiles.js';\r\nimport Register from './components/profiles/Register.js';\r\nimport Profile from './components/profiles/profile/Profile.js';\r\nimport Ledger from './components/ledger/Ledger.js'\r\nimport Metrics from './components/metrics/Metrics.js';\r\nimport Admin from \"./components/admin/Admin.js\"\r\nimport Error from './components/Error.js';\r\nimport {LoadScript} from \"@react-google-maps/api\";\r\nimport EditRide from \"./components/ledger/EditRide\";\r\nimport cookie from 'react-cookies'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <BrowserRouter>\r\n                    <link\r\n                        rel=\"stylesheet\"\r\n                        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n                        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n                        crossOrigin=\"anonymous\"\r\n                    />\r\n                    {!cookie.load('token') ?\r\n                        <Login/> :\r\n                        this.props.loaded ?\r\n                            <div>\r\n                                <LoadScript\r\n                                    id=\"script-loader\"\r\n                                    googleMapsApiKey={cookie.load('googlemapstoken')}\r\n                                    libraries={[\"places\"]}\r\n                                >\r\n                                    <Navigation/>\r\n                                    <Switch>\r\n                                        <Route path=\"/Dashboard\" component={Dashboard}/>\r\n                                        <Route path=\"/Scheduler\" component={Scheduler}/>\r\n                                        <Route path=\"/Profiles/Register\" component={Register}/>\r\n                                        <Route path=\"/Profiles/User/*\" component={Profile}/>\r\n                                        <Route path=\"/Profiles\" component={Profiles}/>\r\n                                        <Route path=\"/Ledger/EditRide\" component={EditRide}/>\r\n                                        <Route path=\"/Ledger\" component={Ledger}/>\r\n                                        <Route path=\"/Metrics\" component={Metrics}/>\r\n                                        <Route path=\"/Admin\" component={Admin}/>\r\n                                        <Route path=\"/\" component={Error}/>\r\n                                    </Switch>\r\n                                </LoadScript>\r\n                            </div>\r\n                            : <LoadData/>}\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.authenticated,\r\n    loaded: state.loaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n",
    "// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
    "import _ from \"lodash\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport axios from \"axios\";\r\nimport {API_ROOT} from \"./api\";\r\nimport cookies from \"react-cookies\"\r\nimport cookie from \"react-cookies\"\r\n\r\n// The reducer is an internal middle man that handles passing information from each\r\n// of the various components to something called the store.  The store is basically a\r\n// global state.  This state is also never edited, but rather a copy is made, updated\r\n// and then replaced.  This leads to come key benefits that escacpe me, but its \"standard\r\n// practice\" do still handle the reducer this way.\r\n\r\n// The reducer is \"called\" by using a dispatch.  These have a type and a payload.\r\n// The type is matched against a switch statement to perform a state update.\r\n// The payload is used to information from a component to the reducer and then save to store\r\n\r\nconst ADDRESS_TEMPLATE = {\r\n    name: \"\",\r\n    line_1: \"\",\r\n    line_2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    special_instructions: \"\",\r\n    geolocation: {\r\n        lat: 0,\r\n        lng: 0\r\n    }\r\n};\r\n\r\nconst VEHICLE_TEMPLATE = {\r\n    make_model: \"\",\r\n    year: \"\",\r\n    color: \"\",\r\n    lp: \"\",\r\n    insp_date: \"\",\r\n    insur_provider: \"\",\r\n    insur_policy: \"\",\r\n    insur_exp: \"\",\r\n    insur_coverage: 0,\r\n    seats: 0,\r\n    special: \"\",\r\n};\r\n\r\nconst VOL_HOURS_TEMPLATE = (day = \"monday\") => {\r\n    return {\r\n        day: day,\r\n        start: \"\",\r\n        end: \"\"\r\n    }\r\n};\r\n\r\nconst BLANK_PROFILE = {\r\n    id: \"\",\r\n    user_type: \"\",\r\n    primary_village_id: \"\",\r\n    villages: [],\r\n    status: \"active\",\r\n    personal_info: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        phone_mobile: \"\",\r\n        phone_home: \"\",\r\n        preferred_communication: \"\",\r\n        language: []\r\n    },\r\n    emergency_contact: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        phone_mobile: \"\",\r\n        phone_home: \"\",\r\n        preferred_communication: \"\",\r\n        relationship: \"\"\r\n    },\r\n    caregiver: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        phone_mobile: \"\",\r\n        phone_home: \"\",\r\n        preferred_communication: \"\",\r\n    },\r\n    addresses: [ADDRESS_TEMPLATE,],\r\n    accommodations: {\r\n        allergies: \"\",\r\n        mobility_aid: \"\",\r\n        smoke_preference: \"\",\r\n        special: \"\"\r\n    },\r\n    vehicles: [VEHICLE_TEMPLATE,],\r\n    volunteer_hours: [0, 1, 2, 3, 4, 5, 6].map(day => VOL_HOURS_TEMPLATE(day)),\r\n    driver_specific: {\r\n        vetting: \"\",\r\n    },\r\n};\r\n\r\nconst BLANK_RIDE = {\r\n    status: \"\",\r\n    id: \"\",\r\n    rider: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        id: \"\",\r\n    },\r\n    driver: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        id: \"\",\r\n        vehicle: VEHICLE_TEMPLATE,\r\n        home_geolocation: \"\"\r\n    },\r\n    locations: {\r\n        pickup: {\r\n            address: \"\",\r\n            time: \"\",\r\n            special: \"\",\r\n            geolocation: \"\"\r\n        },\r\n        dropoff: {\r\n            address: \"\",\r\n            time: \"\",\r\n            special: \"\",\r\n            geolocation: \"\"\r\n        },\r\n    },\r\n    ride_data: {\r\n        village_id: \"\",\r\n        mileage: {\r\n            driver: \"\",\r\n            rider: \"\"\r\n        },\r\n        time_total: {\r\n            driver: \"\",\r\n            rider: \"\",\r\n        },\r\n        driver_confirmed: false,\r\n        traffic: \"\",\r\n        date: \"\",\r\n        purpose: \"\",\r\n        associated_ride: {\r\n            ride_id: \"\",\r\n            driver_id: \"\"\r\n        },\r\n        meta: {\r\n            return: false,\r\n            givendropoff: \"true\",\r\n            pickup_CA: \"\",\r\n            dropoff_CA: \"\",\r\n        }\r\n    }\r\n};\r\n\r\nconst BLANK_VILLAGE = {\r\n    id: \"\",\r\n    village_name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    vetting: [],\r\n    defaults: {}\r\n}\r\n\r\nconst BLANK_OPERATOR = {\r\n    id: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n    village_id: \"\"\r\n}\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loaded: false,\r\n    operator: {\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        village_id: \"\",\r\n    },\r\n    villages: {},\r\n    users: {},\r\n    rides: {},\r\n    operators: {},\r\n    // This is\r\n    active_profile: _.cloneDeep(BLANK_PROFILE),\r\n    active_ride: _.cloneDeep(BLANK_RIDE),\r\n    active_village: _.cloneDeep(BLANK_VILLAGE),\r\n    active_operator:_.cloneDeep(BLANK_OPERATOR),\r\n    admin: {\r\n        show_village: \"\",\r\n        show_operator: \"\",\r\n    }\r\n};\r\n\r\n//The authentication should be cached for a period of time\r\n//so that reloading the page doesnt mess us up.\r\n\r\nconst VillageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"dump_store\": {\r\n            console.log(state);\r\n            return state;\r\n        }\r\n\r\n        case \"trigger_update\": {\r\n            let newState = _.cloneDeep(state);\r\n            return newState;\r\n        }\r\n\r\n        case \"authenticate\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.operator.admin = action.payload.village_id === 'admin';\r\n            newState.operator.id = action.payload.id;\r\n            newState.operator.first_name = action.payload.first_name;\r\n            newState.operator.last_name = action.payload.last_name;\r\n            return newState;\r\n        }\r\n\r\n        case \"logout\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.authenticated = false;\r\n            newState.loaded = false;\r\n            return newState;\r\n        }\r\n\r\n        case \"load\": {\r\n            let newState = _.cloneDeep(state);\r\n            switch (action.payload.tag) {\r\n                case \"loaded\":\r\n                    newState.loaded = action.payload.data;\r\n                    break;\r\n                case \"villages\":\r\n                    newState.villages = action.payload.data;\r\n                    break;\r\n                case \"users\":\r\n                    newState.users = action.payload.data;\r\n                    break;\r\n                case \"rides\":\r\n                    newState.rides = action.payload.data;\r\n                    break;\r\n                case \"operators\":\r\n                    newState.operators = action.payload.data;\r\n                    break;\r\n            default:\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"admin_page\": {\r\n        let newState = _.cloneDeep(state);\r\n        if (action.payload.village === \"\") {\r\n            newState.active_village = _.cloneDeep(BLANK_VILLAGE);\r\n            newState.admin.show_village = \"\";\r\n        } else {\r\n            newState.active_village = state.villages[action.payload.village];\r\n            newState.admin.show_village = action.payload.village;\r\n        }\r\n        if (action.payload.id === \"\") {\r\n            newState.active_operator = _.cloneDeep(BLANK_OPERATOR);\r\n            newState.admin.show_operator = \"\";\r\n        } else {\r\n            newState.active_operator = state.operators[action.payload.id];\r\n            newState.admin.show_operator = action.payload.id;\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"change_admin\": {\r\n        let newState = _.cloneDeep(state);\r\n        if (action.payload.type === \"operator\") {\r\n            switch (action.payload.mode) {\r\n                case \"add\": {\r\n                    axios.post(API_ROOT + '/database/operators/operator', {operator: newState.active_operator}, {\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                        }\r\n                    }).then(response => {\r\n                        cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                        newState.active_operator.id = response.data.id;\r\n                        //If its the first operator you need to add the village id\r\n                        newState.operators[response.data.id] = newState.active_operator;\r\n                    });\r\n                    break;\r\n                }\r\n                case \"edit\": {\r\n                    if (action.payload.field === \"password\") {\r\n                        newState.active_operator[\"password\"] = bcrypt.hashSync(action.payload.value, 10);\r\n                    } else {\r\n                        newState.active_operator[action.payload.field] = action.payload.value;\r\n                    }\r\n                    break;\r\n                }\r\n                case \"save\": {\r\n                    let newUser = _.cloneDeep(newState.active_operator)\r\n                    //THIS WILL BE HANDLED BETTER BY AN ENDPOINT DESIGNED FOR SAVING USERS WHEN THE PASSWORD IS UNCHANGED.\r\n                    //If the password was unchaged, dont edit it\r\n                    axios.put(API_ROOT + '/database/operators/operator', {operator: newUser}, {\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                        }\r\n                    }).then((response) => {\r\n                        cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                        newState.operators[newState.active_operator.id] = {...newState.active_operator, ...newUser};\r\n                        //if moving the village\r\n                    })\r\n                    break;\r\n                }\r\n                case \"delete\": {\r\n                    axios.delete(API_ROOT + '/database/operators/operator', {\r\n                        data: {operator_id: newState.active_operator.id},\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                        }\r\n                    }).then((response) => {\r\n                        cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                        delete newState.operators[newState.active_operator.id];\r\n                        newState.active_village = _.cloneDeep(BLANK_VILLAGE);\r\n                        newState.active_operator = _.cloneDeep(BLANK_VILLAGE);\r\n                    })\r\n                }\r\n            }\r\n        } else if (action.payload.type === \"village\") {\r\n            switch (action.payload.mode) {\r\n                case \"add\": {\r\n                    axios.post(API_ROOT + '/database/villages/village', {village: newState.active_village}, {\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                        }\r\n                    }).then(response => {\r\n                        cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                        newState.active_village.id = response.data.id;\r\n                        newState.villages[response.data.id] = newState.active_village;\r\n                        newState.admin.show_village = response.data.id\r\n                        this.forceUpdate()\r\n                    });\r\n                    break;\r\n                }\r\n                case \"edit\": {\r\n                    newState.active_village[action.payload.field] = action.payload.value;\r\n                    break;\r\n                }\r\n                case \"edit_vetting\": {\r\n                    const index = newState.active_village.vetting.indexOf(action.payload.field);\r\n                    if (index > -1) {\r\n                        newState.active_village.vetting.splice(index, 1);\r\n                    }\r\n                    if (action.payload.value && action.payload.value.length > 0) {\r\n                        newState.active_village.vetting.push(action.payload.value)\r\n                    }\r\n                    break;\r\n                }\r\n                case \"save\": {\r\n                    axios.put(API_ROOT + '/database/villages/village', {village: newState.active_village}, {\r\n                        headers: {\r\n                            \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                        }\r\n                    }).then(response => {\r\n                        cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n\r\n                    })\r\n                    newState.villages[newState.active_village.id] = _.cloneDeep(newState.active_village);\r\n                    break;\r\n                }\r\n                case \"delete\": {\r\n                    if (newState.operators && !(Object.keys(newState.operators).includes(newState.active_village.id))) {\r\n                        axios.delete(API_ROOT + '/database/villages/village', {\r\n                            data: {village_id: newState.active_village.id},\r\n                            headers: {\r\n                                \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                            }\r\n                        }).then(response => {\r\n                            cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n                        });\r\n                        delete newState.village[newState.active_village.id];\r\n                        newState.active_village = _.cloneDeep(BLANK_VILLAGE);\r\n                        newState.active_operator = _.cloneDeep(BLANK_VILLAGE);\r\n                        this.forceUpdate()\r\n                    } else {\r\n                        //Add the check for riders and Drivers\r\n                        //FUTURE TEAM ADD THIS LITTLE FEATURE!\r\n                        window.alert(\"You CANNOT delete a village that still has active riders, drivers, or operators!\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"add_user\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.users[action.payload.id] = (action.payload);\r\n        return newState;\r\n    }\r\n\r\n    case \"clear_active_profile\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.active_profile = _.cloneDeep(BLANK_PROFILE);\r\n        return newState;\r\n    }\r\n\r\n    case \"set_active_user\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.active_profile = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    case \"ridebreakdown\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.ridebreakdown = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    case \"registration\": {\r\n        let newState = _.cloneDeep(state);\r\n            switch (action.payload.id) {\r\n                case \"user_type\":\r\n                    newState.active_profile[action.payload.id] = action.payload.value;\r\n                    break;\r\n                case \"primary_village_id\":\r\n                    newState.active_profile[action.payload.id] = action.payload.value;\r\n                    newState.active_profile.villages = [action.payload.value]\r\n                    break;\r\n                case \"add_address\":\r\n                    newState.active_profile.addresses.push(_.cloneDeep(ADDRESS_TEMPLATE));\r\n                    break;\r\n                case \"remove_address\":\r\n                    newState.active_profile.addresses.splice(action.payload.value, 1);\r\n                    break;\r\n                case \"add_vehicle\":\r\n                    newState.active_profile.vehicles.push(_.cloneDeep(VEHICLE_TEMPLATE));\r\n                    break;\r\n                case \"remove_vehicle\":\r\n                    newState.active_profile.vehicles.splice(action.payload.value, 1);\r\n                    break;\r\n                case \"add_vol_hours\":\r\n                    newState.active_profile.volunteer_hours.push(_.cloneDeep(VOL_HOURS_TEMPLATE()));\r\n                    break;\r\n                case \"remove_vol_hours\":\r\n                    newState.active_profile.volunteer_hours.splice(action.payload.value, 1);\r\n                    break;\r\n                default:\r\n                    if (action.payload.type === \"addresses\") {\r\n                        if (action.payload.id.split(\"|\")[1] === \"lng\") {\r\n                            newState.active_profile[action.payload.type][action.payload.id.split(\"|\")[0]].geolocation[action.payload.id.split(\"|\")[1]] = action.payload.value;\r\n                        } else if (action.payload.id.split(\"|\")[1] === \"lat\") {\r\n                            newState.active_profile[action.payload.type][action.payload.id.split(\"|\")[0]].geolocation[action.payload.id.split(\"|\")[1]] = action.payload.value;\r\n                        } else {\r\n                            newState.active_profile[action.payload.type][action.payload.id.split(\"|\")[0]][action.payload.id.split(\"|\")[1]] = action.payload.value;\r\n                        }\r\n                    } else if (action.payload.type === \"vehicles\") {\r\n                        newState.active_profile[action.payload.type][action.payload.id.split(\"|\")[0]][action.payload.id.split(\"|\")[1]] = action.payload.value;\r\n                    } else if (action.payload.type === \"volunteer_hours\") {\r\n                        newState.active_profile[action.payload.type][action.payload.id.split(\"|\")[0]][action.payload.id.split(\"|\")[1]] = action.payload.value;\r\n                    } else {\r\n                        newState.active_profile[action.payload.type][action.payload.id] = action.payload.value;\r\n                    }\r\n                    break;\r\n            }\r\n        return newState;\r\n    }\r\n\r\n    case \"scheduler\": {\r\n        let newState = _.cloneDeep(state);\r\n        if (action.payload.type === \"date\") {\r\n            newState.active_ride.ride_data.date = action.payload.value;\r\n        } else if (action.payload.type === \"purpose\") {\r\n            newState.active_ride.ride_data.purpose = action.payload.value;\r\n        } else if (action.payload.type === \"samereturn\") {\r\n            newState.active_ride.ride_data.meta.samereturn = action.payload.value;\r\n        } else if (action.payload.type === \"givendropoff\") {\r\n            newState.active_ride.ride_data.meta.givendropoff = action.payload.value;\r\n        } else if (action.payload.type === 'driver_confirmed') {\r\n            newState.active_ride.ride_data.driver_confirmed = action.payload.value;\r\n        } else if (action.payload.type === \"vehicle\") {\r\n            let vehicle = newState.users[action.payload.field].vehicles.filter((car) => {\r\n                return car.lp === action.payload.value;\r\n            })[0];\r\n            newState.active_ride.driver.vehicle = vehicle;\r\n        } else if (action.payload.type === \"common_address\") {\r\n            let mode = action.payload.field.split(\"|\");\r\n            if (mode[0] === \"set\") {\r\n                if (mode[1] === \"pickup\") {\r\n                    newState.active_ride.ride_data.meta.pickup_CA = action.payload.value;\r\n                } else if (mode[1] === \"dropoff\") {\r\n                    newState.active_ride.ride_data.meta.dropoff_CA = action.payload.value;\r\n                }\r\n            } else {\r\n                let addr_id = action.payload.value.split(\"|\");\r\n                let address = state.users[addr_id[0]].addresses.filter((a) => {\r\n                    return a.line_1 === addr_id[1];\r\n                })[0];\r\n                if (mode[0] === \"pickup\") {\r\n                    newState.active_ride.locations[action.payload.field].address = address.line_1;\r\n                    newState.active_ride.locations[action.payload.field].geolocation = address.geolocation;\r\n                    newState.active_ride.ride_data.meta.pickup_CA = true;\r\n                } else if (mode[0] === \"dropoff\") {\r\n                    newState.active_ride.locations[action.payload.field].address = address.line_1;\r\n                    newState.active_ride.locations[action.payload.field].geolocation = address.geolocation;\r\n                    newState.active_ride.ride_data.meta.dropoff_CA = true;\r\n                }\r\n            }\r\n        } else {\r\n            newState.active_ride.locations[action.payload.type][action.payload.field] = action.payload.value;\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"set_ride_participant\": {\r\n        let newState = _.cloneDeep(state);\r\n        if (action.payload.type === \"rider\"){\r\n            newState.active_ride.rider.first_name = action.payload.user.personal_info.first_name;\r\n            newState.active_ride.rider.last_name = action.payload.user.personal_info.last_name;\r\n            newState.active_ride.rider.id = action.payload.user.id;\r\n            newState.active_ride.ride_data.village_id = action.payload.user.primary_village_id;\r\n        } else if (action.payload.type === \"driver\") {\r\n            newState.active_ride.driver.first_name = action.payload.user.personal_info.first_name;\r\n            newState.active_ride.driver.last_name = action.payload.user.personal_info.last_name;\r\n            newState.active_ride.driver.geolocation = action.payload.user.addresses[0].geolocation;\r\n            newState.active_ride.driver.id = action.payload.user.id;\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"user_update\": {\r\n        let newState = _.cloneDeep(state);\r\n\r\n        let index = newState.active_profile.id;\r\n        if (index) {\r\n            newState.users[index] = newState.active_profile;\r\n            axios.put(API_ROOT + \"/database/users/user\", {user: newState.active_profile}, {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n            })\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    case \"user_deactivate\": {\r\n        let newState = _.cloneDeep(state);\r\n        axios.patch(API_ROOT + '/database/users/user/status', {\r\n            user_id: newState.active_profile.id,\r\n            status: \"inactive\"\r\n        }, {\r\n            headers: {\r\n                \"Authorization\": \"BEARER \" + cookies.load('token')\r\n            }\r\n        }).then(response => {\r\n            cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n        })\r\n        newState.active_profile.status = \"inactive\";\r\n        //Now edit the local copy, then update the DB:\r\n        //Find the user in newState.users\r\n        newState.users[newState.active_profile.id].status = 'active'\r\n        return newState;\r\n    }\r\n    case \"user_activate\": {\r\n        let newState = _.cloneDeep(state);\r\n        axios.patch(API_ROOT + '/database/users/user/status', {user_id: newState.active_profile.id, status: \"active\"}, {\r\n            headers: {\r\n                \"Authorization\": \"BEARER \" + cookies.load('token')\r\n            }\r\n        }).then(response => {\r\n            cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n        })\r\n        newState.active_profile.status = \"active\";\r\n        //Now edit the local copy, then update the DB:\r\n        //Find the user in newState.users\r\n        newState.users[newState.active_profile.id].status = 'active'\r\n\r\n        return newState;\r\n    }\r\n    case \"user_perma_delete\": {\r\n        let newState = _.cloneDeep(state);\r\n        axios.delete(API_ROOT + '/database/users/user', {\r\n            data: {user_id: newState.active_profile.id},\r\n            headers: {\r\n                \"Authorization\": \"BEARER \" + cookies.load('token')\r\n            }\r\n        }).then(response => {\r\n            cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n        });\r\n        delete newState.users[newState.active_profile.id]\r\n        newState.active_profile = _.cloneDeep(BLANK_PROFILE);\r\n        return newState;\r\n    }\r\n\r\n        case \"ride_cancel\": {\r\n            let newState = _.cloneDeep(state);\r\n            axios.delete(API_ROOT + '/database/rides/ride', {\r\n                data: {ride_id: action.payload},\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n            });\r\n            delete newState.rides[action.payload];\r\n            return newState;\r\n        }\r\n\r\n        case \"ride_save\": {\r\n            let newState = _.cloneDeep(state);\r\n            axios.put(API_ROOT + '/database/rides/ride', {\r\n                ride: action.payload\r\n            }, {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n            })\r\n            newState.rides[action.payload.id] = action.payload\r\n            return newState\r\n        }\r\n        case \"ride_deactivate\": {\r\n            let newState = _.cloneDeep(state);\r\n            let rideID = action.payload;\r\n            axios.patch(API_ROOT + '/database/rides/ride/status', {\r\n                ride_id: rideID,\r\n                status: \"inactive\"\r\n            }, {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n            })\r\n            newState.rides[rideID].status = \"inactive\";\r\n            return newState;\r\n        }\r\n\r\n        case \"ride_reactivate\": {\r\n            let newState = _.cloneDeep(state);\r\n            let rideID = action.payload;\r\n            axios.patch(API_ROOT + '/database/rides/ride/status', {\r\n                ride_id: rideID,\r\n                status: \"active\"\r\n            }, {\r\n                headers: {\r\n                    \"Authorization\": \"BEARER \" + cookies.load('token')\r\n                }\r\n            }).then(response => {\r\n                cookie.save('token', response.headers.token, {path: '/', maxAge: 3600});\r\n            })\r\n            newState.rides[rideID].status = \"active\";\r\n            return newState;\r\n        }\r\n\r\n        case \"add_ride\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.rides[action.payload.id] = (action.payload);\r\n            return newState;\r\n        }\r\n\r\n        case \"update_active_ride\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.active_ride = _.cloneDeep(action.payload);\r\n            return newState;\r\n        }\r\n\r\n        case \"setup_return_ride\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.active_ride = _.cloneDeep(BLANK_RIDE);\r\n            newState.active_ride.locations.dropoff.address = state.active_ride.locations.pickup.address;\r\n            newState.active_ride.locations.pickup.address = state.active_ride.locations.dropoff.address;\r\n            newState.active_ride.locations.dropoff.geolocation = state.active_ride.locations.pickup.geolocation;\r\n            newState.active_ride.locations.pickup.geolocation = state.active_ride.locations.dropoff.geolocation;\r\n            newState.active_ride.ride_data.date = state.active_ride.ride_data.date;\r\n            newState.active_ride.ride_data.village_id = state.active_ride.ride_data.village_id;\r\n            newState.active_ride.rider = state.active_ride.rider;\r\n            newState.active_ride.ride_data.meta.return = true;\r\n            return newState\r\n        }\r\n\r\n        case \"active_ride\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.active_ride = _.cloneDeep(action.payload);\r\n            return newState;\r\n        }\r\n\r\n        case \"clear_active_ride\": {\r\n            let newState = _.cloneDeep(state);\r\n            newState.active_ride = _.cloneDeep(BLANK_RIDE);\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default VillageReducer;\r\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport configureStore from \"./modules/store\";\r\n\r\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\r\n\r\nReactDOM.render(<ReduxProvider store={reduxStore}><App/></ReduxProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",
    "import {createStore} from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nexport default function configureStore(initialState) {\r\n    const store = createStore(reducer, initialState);\r\n    return store;\r\n}\r\n"
  ],
  "sourceRoot": ""
}
